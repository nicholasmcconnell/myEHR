{"version":3,"sources":["assets/img/Logo.png","assets/img/backgroundImage2.jpg","components/Grid/index.js","pages/Landing/Landing.js","components/Forms/index.js","utils/API.js","Auth.js","pages/SignIn/SignIn.js","pages/SignUp/SignUp.js","components/PatientList/index.js","components/PatientHandler/index.js","pages/Patients/Patients.js","utils/CustomHooks.js","utils/PatientContext.js","components/GeneralInfo/index.js","components/HealthCard/index.js","components/Conditions/index.js","components/Medications/index.js","components/NewContact/index.js","components/Contacts/index.js","pages/EHR/EHR.js","pages/Contacts/Contacts.js","components/Navbar/index.js","ProtectedRoute.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Container","_ref","classes","children","react_default","a","createElement","className","concat","Row","_ref2","Col","_ref3","size","split","map","join","Collapse","_ref4","navState","id","Landing","style","background","Grid_Container","Grid_Row","Grid_Col","logo","src","require","alt","react_router_dom","to","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","width","height","float","Input","props","Object","assign","TextArea","Button","Messenger","msg","color","LoggerBtn","btnType","Forms_Button","type","API","fetchPatient","axios","get","fetchPatients","email","addPatient","data","post","removePatient","delete","updateEHR","patch","getUser","then","register","credentials","login","getConditionNames","search","fetchCondition","process","getMedNames","fetchMeds","src_Auth","Auth","classCallCheck","this","authenticated","cb","SignIn","history","useHistory","_useState","useState","_useState2","slicedToArray","setCredentials","_useState3","_useState4","errorMsg","setErrorMsg","onInputChange","e","_e$target","target","name","value","objectSpread","defineProperty","text","Forms_Messenger","onSubmit","preventDefault","reset","status","push","catch","err","setTimeout","Forms_Input","onChange","placeholder","Forms_LoggerBtn","margin","textShadow","SignUp","timeoutMsg","res","statusText","error","errors","PatientList","patient","context","removeState","confirmRemoval","remove","index","patientData","healthData","_id","firstName","nickname","removable","onClick","bind","textDecoration","toggleBtn","pathname","state","patientId","border","backgroundColor","PatientHandler","toggleRemoveState","confirmed","cancel","Patients","setContext","patients","setPatients","setRemoveState","_useState5","_useState6","isConfirmed","useEffect","getPatients","asyncToGenerator","regenerator_default","mark","_callee","_yield$API$getUser","wrap","_context","prev","next","sent","user","stop","apply","arguments","_callee2","_context2","_x","togglePatientAsRemovable","clone","i","key","forEach","item","useForceUpdate","setValue","createContext","GeneralInfo","editState","toggleState","formSubmit","input","lastName","addressOne","addressTwo","city","zip","country","phone","updtBtn","fieldText","fontStyle","fontWeight","padding","borderBottom","transition","HealthCard","bloodType","gender","getAge","DOB","today","Date","birthDate","month","getMonth","age","getFullYear","isNaN","getDate","dob","defaultValue","insurance","insNumber","rxBin","rxPcn","Forms_TextArea","allergies","immunizations","notes","Conditions","areaTarget","renderSuggestions","toggleDescState","editDescState","getRowHeight","length","renderEditConditions","conditions","_this","sort","b","createdAt","condition","edit","editBtn","littleEditBtn","description","rows","textarea","removeBtn","addBtn","autoComplete","resize","marginTop","focus","Medications","addDoses","otherDosage","doseChoices","littlePointBtn","onBlur","doses","includes","dose","renderDoses","meds","med","medication","dosage","renderEditMeds","NewContact","cancelBtn","saveBtn","Contacts","newContact","toggleNew","newTarget","formatPhoneNumberLink","number","replace","contacts","_this2","contact","office","primaryPhone","primaryExt","secondaryPhone","secondaryExt","fax","website","display","href","rel","renderContacts","nextContact","getNewContact","EHR","location","_useContext","useContext","PatientContext","setPatient","generalInfo","setGeneralInfo","healthInfo","setHealthInfo","_useState7","_useState8","setConditions","_useState9","_useState10","setMeds","_useState11","_useState12","setContacts","_useState13","_useState14","medInput","setMedInput","_useState15","_useState16","setNewContact","_useState17","_useState18","addContact","setAddContact","_useState19","_useState20","editGenState","setGenState","_useState21","_useState22","editHealthState","setHealthState","_useState23","_useState24","editConditState","setConditState","_useState25","_useState26","editMedsState","setMedsState","_useState27","_useState28","conditSuggestions","setConditSuggestions","_useState29","_useState30","medSuggestions","setMedSuggestions","_useState31","_useState32","setDoses","_useState33","_useState34","query","setQuery","forceUpdate","hasConditions","useRef","hasMeds","hasContacts","isInitialMount","current","getPatient","updateDB","_yield$API$fetchPatie","newPatient","healthConditions","medications","setParity","_yield$API$addPatient","parity","console","log","setNameInNavbar","onConditInputChange","_callee3","items","suggestions","regex","_context3","RegExp","filter","x","test","timeOutId","clearTimeout","onMedInputChange","_ref5","_callee4","_e$target4","_context4","slice","t0","abrupt","_x2","addCondition","_ref6","_callee5","_text$split","_text$split2","_yield$API$fetchCondi","newCondition","_context5","shortdef","capitalizeWord","now","toConsumableArray","_x3","word","char","toUpperCase","_ref7","_callee6","_yield$API$getConditi","_context6","_x4","_ref8","_callee7","_yield$API$getMedName","_context7","displayTermsList","term","_x5","selectSuggestedCondit","_ref9","_callee8","_value$split","_value$split2","_yield$API$fetchCondi2","_context8","_x6","selectSuggestedMed","_ref10","_callee9","_yield$API$fetchMeds","_doses","_context9","drugGroup","conceptGroup","conceptProperties","synonym","_x7","_ref11","_callee10","_yield$API$fetchMeds2","_doses2","_context10","_x8","_e$target2","arr","splice","newDescription","suggestion","newMed","_e$target5","_i","_Object$keys","keys","hasOwnProperty","_e$target3","list","navBar","navLinks","showNavLinks","useLocation","logout","data-toggle","data-target","Grid_Collapse","isAuthenticated","ProtectedRoute","Component","component","rest","objectWithoutProperties","react_router","render","from","App","Provider","setPatientContext","path","exact","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","App_App","document","getElementById","URL","origin","addEventListener","fetch","response","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a1e30e5c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.76d8cd68.png\";","module.exports = __webpack_public_path__ + \"static/media/backgroundImage2.f82817c2.jpg\";","import React from 'react'\n\n        \nexport const Container = ({ classes, children }) => <div className={`container ${classes}`}>{children}</div>\n\nexport const Row = ({ classes, children }) => <div className={`row ${classes}`}>{children}</div>\n\nexport const Col = ({ size, classes, children }) => {\n    return ( <div \n        className={size.split(' ').map( size => `col-${size}`).join(' ')\n        +\" \"+ classes}>{children}</div>\n    )\n}\n\nexport const Collapse = ({ navState, children, id }) => { \n    const classes = navState ? 'navbar-collapse collapse show' : 'navbar-collapse collapse';\n\n     return <div className={classes} id={id}>{children}</div>\n}","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col } from '../../components/Grid';\n\nexport default function Landing() {\n\n    return (\n        <div\n            style={background}\n        >\n            <Container>\n                <Row>\n                    <Col size={'md-8'} classes={'offset-md-2'}>\n                        <div className=\"jumbotron mt-5\">\n                                 <img\n                                    style={logo}\n                                    src={require(\"../../assets/img/Logo.png\")}\n                                    alt={\"Logo\"}\n                                />\n                            <h1 className=\"display-4\"><em>My</em> EHR</h1>\n                            <p className=\"lead\">All the medical records you need in one, simple place.</p>\n                            <hr className=\"my-4\" />\n                       \n                            <Link to=\"/signup\" className=\"btn btn-primary btn-lg\">Get Started</Link>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nconst background = {\n    backgroundImage: `url(${require(\"../../assets/img/backgroundImage2.jpg\")}`,\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    width: '100vw',\n    height: '100vh'\n},\nlogo = {\n    width: \"60px\",\n    height: \"auto\",\n    float: 'right'\n}","import React from 'react'\n\n\nexport const Input = props => <input className=\"form-control\" {...props} />\n\n  \nexport const TextArea = props =>  <textarea className=\"form-control\" {...props} />\n    \n\nexport const Button = props => <button {...props} >{props.children}</button>\n\n\nexport const Messenger = ({ msg, color }) => <p style={{color: color}}>{msg}</p>\n\n\nexport const LoggerBtn = ({ btnType }) => { \n    return (\n      <Button className={'btn btn-primary btn-lg btn-block'} \n      type=\"submit\">\n        {btnType}\n      </Button>\n    )\n}\n","import axios from \"axios\";\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nexport default {\n    fetchPatient: id => axios.get(`/api/patients/${id}`),\n\n    fetchPatients: email => axios.get(\"/api/patients/load\", email),\n\n    addPatient: data => axios.post(\"/api/patients/add\", data),\n\n    removePatient: id => axios.delete(`/api/patients/${id}`),\n\n    updateEHR: (id, data) => axios.patch(`/api/patients/${id}`, data),\n\n    getUser: () => axios.get('/api/users').then(data => data),\n\n    register: credentials =>  axios.post('api/users/register', credentials),\n  \n    login: credentials => axios.post('/api/users/login', credentials),\n\n/*\n    External APIs\n*/ \n    getConditionNames: search => axios.get(`https://clinicaltables.nlm.nih.gov/api/conditions/v3/search?terms=${search}&sf=primary_name,consumer_name&df=primary_name,consumer_name,info_link_data`),\n    \n    fetchCondition: search => axios.get(`https://www.dictionaryapi.com/api/v3/references/medical/json/${search}?key=${apiKey}`),\n\n    getMedNames: () => axios.get('https://rxnav.nlm.nih.gov/REST/displaynames'),\n\n    fetchMeds: search => axios.get(`https://rxnav.nlm.nih.gov/REST/drugs.json?name=${search}`)\n}","\nclass Auth {\n\n   constructor() {\n       this.authenticated = false;\n   }\n    login(cb) {\n        this.authenticated = true\n        cb()\n    }\n    logout(cb) {\n        this.authenticated = false\n        cb()\n    }\n    isAuthenticated() {\n        return this.authenticated;\n    }\n}\n\nexport default new Auth();","import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { LoggerBtn, Input, Messenger } from '../../components/Forms';\nimport API from '../../utils/API';\nimport Auth from '../../Auth'\n\nexport default function SignIn() {\n\n    let history = useHistory();\n    const [credentials, setCredentials] = useState({}),\n     [errorMsg, setErrorMsg] = useState(''),\n\n        onInputChange = e => {\n            const { name, value } = e.target;\n            setCredentials({ ...credentials, [name]: value })\n    },\n\n        authorize = () => {\n            Auth.login(() => {\n                history.push(\"/patients\")\n            })\n    },\n\n        timeoutMsg = () => {\n            const clearMsg = () => setErrorMsg('')\n            setTimeout(clearMsg, 3500);\n    },\n\n        handleSubmit = e => {\n            e.preventDefault();\n            e.target.reset();\n\n            API.login(credentials)\n                .then(({ data }) => {\n                    if (data.status === 'success') {\n                        authorize()\n                    }\n                }).catch( err => {\n                    setErrorMsg('Login failed.  Please try again.')\n                    timeoutMsg()\n                })\n    }\n\n    return (\n        <div\n            style={background}\n        >\n\n        <Container>\n            <Row classes=\"justify-content-center\">\n                <Col size={'md-12'} classes='box-shadow sign' >\n                    <Row>\n                        <div className={'mt-5'}>\n                            <h5 style={text}>\n                                <img \n                                style={logo} \n                                src={require('../../assets/img/Logo.png')} \n                                alt={'Logo'} />\n                                Log-in to your account\n                            </h5>\n                        </div>\n                    </Row> \n\n                    <div className=\"text-center err-msg\">\n                    <Messenger msg={errorMsg} color='#d9534f' />\n                    </div>\n\n                    <Row >\n                        <form onSubmit={handleSubmit} className={'card-body'}>\n                            <div className={'form-group usr-inpt'}>\n                                <label>Email:</label>\n                                <span className=\"fa fa-user\" />\n                                <Input onChange={onInputChange}\n                                    name=\"email\" type=\"email\" placeholder=\"E-mail address\" />\n                            </div>\n                            <div className={'form-group usr-inpt'}>\n                                <label>Password:</label>\n                                <span className=\"fa fa-lock\" />\n                                <Input onChange={onInputChange}\n                                    name=\"password\" type=\"password\" placeholder=\"Password\" />\n                            </div>\n\n                            <LoggerBtn btnType={'log in'} />\n                        </form>\n                    </Row>\n                    <Row classes={'justify-content-center'}>\n                        <p> New here?\n                        <Link to=\"/signup\" > Sign up.</Link>\n                        </p>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n\n        </div>\n    )\n}\nconst  background = {\n    backgroundImage: `url(${require(\"../../assets/img/backgroundImage2.jpg\")}`,\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    width: '100vw',\n    height: '100vh'\n},\n\nlogo = {\n    width: \"60px\",\n    height: \"auto\",\n    margin: \"15px\"\n},\n\ntext = {\n    color: \"#0099ff\",\n    textShadow: \"1px 1px #000\"\n}\n","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Container, Row, Col } from \"../../components/Grid\";\nimport { LoggerBtn, Input, Messenger } from \"../../components/Forms\";\nimport API from \"../../utils/API\";\nimport Auth from \"../../Auth\";\n\nexport default function SignUp() {\n\n    let history = useHistory();\n    const [credentials, setCredentials] = useState({}),\n        [errorMsg, setErrorMsg] = useState(''),\n\n\n    onInputChange = e => {\n        const { name, value } = e.target;\n        setCredentials({ ...credentials, [name]: value });\n    },\n\n    authorize = () => {\n        Auth.login(() => {\n            history.push(\"/patients\");\n        });\n    },\n\n    timeoutMsg = () => {\n        const clearMsg = () => setErrorMsg('')\n        setTimeout(clearMsg, 3500);\n    },\n\n    handleSubmit = e => {\n        e.preventDefault();\n        e.target.reset();\n\n        try {\n            API.register(credentials)\n                .then( res => {\n                    if (res.statusText === 'OK') {\n                        if (res.data.error){\n                            setErrorMsg(res.data.error)\n                            timeoutMsg()\n                        } else if (res.data.errors) {\n                            setErrorMsg('A valid email and password are required')\n                            timeoutMsg()\n                        } else {\n                        API.login(credentials)\n                            .then(({ data }) => {\n                                if (data.status === 'success') {\n                                    authorize()\n                                }\n                            })\n                        }\n                    }\n                })\n                setCredentials('')\n        } catch (err) { \n            setErrorMsg('Signup failed. Please try again.')\n            timeoutMsg() }\n    }\n    return (\n        <div\n            style={background}\n        >\n        <Container>\n            <Row classes=\"justify-content-center\">\n                <Col size={\"md-12\"} classes={\"box-shadow sign\"}>\n                    <Row >\n                        <div className={\"mt-5\"}>\n                            <h5 style={text}>\n                                <img\n                                    style={logo}\n                                    src={require(\"../../assets/img/Logo.png\")}\n                                    alt={\"Logo\"}\n                                />\n                                Create your account\n                            </h5>\n                        </div>\n                    </Row>\n\n                    <div className=\"text-center err-msg\">\n                    <Messenger msg={errorMsg} color='#d9534f' />\n                    </div>\n\n                    <Row>\n                        <form onSubmit={handleSubmit} className={\"card-body\"}>\n                            <div className={\"form-group usr-inpt\"}>\n                                <label>Email:</label>\n                                <span className=\"fa fa-user\" />\n                                <Input\n                                    onChange={onInputChange}\n                                    name=\"email\"\n                                    type=\"email\"\n                                    placeholder=\"E-mail address\"\n                                />\n                            </div>\n                            <div className={\"form-group usr-inpt\"}>\n                                <label>Password:</label>\n                                <span className=\"fa fa-lock\" />\n                                <Input\n                                    onChange={onInputChange}\n                                    name=\"password\"\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                />\n                            </div>\n\n                            <LoggerBtn btnType={\"Sign Up\"} />\n                        </form>\n                    </Row>\n                    <Row classes={\"justify-content-center\"}>\n                        <p>\n                            Already have an account?\n                            <Link to=\"/SignIn\"> Log In.</Link>\n                        </p>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    </div>\n    );\n}\nconst  background = {\n    backgroundImage: `url(${require(\"../../assets/img/backgroundImage2.jpg\")}`,\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    width: '100vw',\n    height: '100vh'\n},\n\nlogo = {\n    width: \"60px\",\n    height: \"auto\",\n    margin: '15px'\n},\n\ntext = {\n    color: \"#0099ff\",\n    textShadow: \"1px 1px #000\"\n}","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { Col, Row } from '../Grid';\n\n\nexport function PatientList({ patient, context, removeState, confirmRemoval, remove, index }) {\n\n    const { patientData, healthData, _id } = patient\n     \n    //keep invalid or corrupt data away from the EHR page.\n    if(!patientData || !healthData){\n        return <div></div>\n    }\n    const { firstName, nickname } = patientData;\n\n    let name;\n      if (firstName || nickname) {\n          name = (nickname && nickname !== '') ? nickname : firstName;\n        } else {\n            name = \"\"\n    }\n\n    if (removeState) {\n        if(patient.removable) {\n    return (\n        <div className={'patient-remove'}>\n        <Link to='/patients'\n            onClick={remove.bind(this, _id)}  \n            style={{textDecoration: 'none'}}\n            >\n            <div className=\"card box-shadow mt-5\">\n                <div className=\"card-body text-center btn btn-outline-danger\">\n                <Row >\n                <Col size={\"md-4\"}>\n                        <i className=\"fas fa-user-times fa-4x rm-lg-user\" />   \n                    </Col>\n                    <Col size ={\"md-8\"}> \n                        <h2 className=\"card-title\">Please Confirm</h2>\n                        <p className=\"card-text\"> \n                            This will remove {name !== '' ? name : 'this patient'} from your list.\n                        </p>\n                    </Col>\n                </Row>\n                </div>\n            </div>\n        </Link>\n         </div>\n    )}\n        else {\n    return (\n        <div className={'patient-remove'}>\n        <Link to='/patients'\n            onClick={confirmRemoval.bind(this, index)}  \n            style={{textDecoration: 'none'}}\n            >\n            <div className=\"card box-shadow mt-5\">\n                <div className=\"card-body text-center\">\n                <Row >\n                    <Col size ={\"md-2\"}></Col>\n                    <Col size ={\"md-8\"}> \n                        <h2 className=\"card-title\">Remove {name === '' ? 'this patient' : name}</h2>\n                        <p className=\"card-text\"> \n                            Delete {name !== '' ? name : 'this patient'} from your patient list?\n                        </p>\n                    </Col>\n                    <Col size={\"md-2\"}>\n                        <i className=\"fas fa-user-times fa-2x rm-sm-user\" style={toggleBtn} \n                        />   \n                    </Col>\n                </Row>\n                </div>\n            </div>\n        </Link>\n         </div>\n    )}\n    }\n    return (\n        <Link to={{\n            pathname:'/ehr',\n            state: { patientId: _id, name }\n        }}\n            onClick={()=>{context({ patientId: _id, name })}}  //set patientContext as universal variable.  \n            style={{textDecoration: 'none'}}\n            >\n            <div className=\"card box-shadow mt-5\">\n                <div className=\"card-body text-center\">\n                    <h2 className=\"card-title\">{name === '' ? 'name this patient' : name}</h2>\n                    <p className=\"card-text\"> \n                        Access {name !== '' ? name : 'this patient'}'s information here.\n                    </p>\n                </div>\n            </div>\n        </Link>\n    )\n}\n\nconst toggleBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'white',\n    backgroundColor: 'white'\n}","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport {  Button } from \"../../components/Forms\";\n\n\nexport function PatientHandler({ removeState, toggleRemoveState, confirmed, cancel }) {\n\n    if (removeState) {\n      if (confirmed) {\n        return (\n              <div className={\"remove\"}>\n                <Button\n                  className=\"btn minus\"\n                  style={removeState ? { float: \"left\", color: \"tomato\"} : {float: \"left\"}}\n                  onClick={cancel}\n                >\n                  <i className=\"fas fa-hand-point-right\" /> last chance to cancel\n                </Button>\n              </div>\n            );\n          } else {\n        return (\n              <div className={\"remove\"}>\n                <Button\n                  className=\"btn minus\"\n                  style={removeState ? { float: \"left\", color: \"tomato\"} : {float: \"left\"}}\n                  onClick={() => {\n                    toggleRemoveState(!removeState);\n                  }}\n                >\n                  <i className=\"fas fa-ban\" /> Cancel\n                </Button>\n              </div>\n            );\n          } \n        }else {\n            return (\n              <div>\n                <div className={\"add\"}>\n                  <Link to={{\n                 pathname:'/ehr',\n                 state: { patientId:\"\" }\n                }} \n                    className=\"btn plus\"\n                    style={{ float: \"right\" }}\n                  >\n                    <i className=\"fas fa-user-plus\"></i> New Patient\n                  </Link>\n                  </div>\n                  <div className={\"remove\"}>\n                    <Button className=\"btn minus\"\n                      style={{ float: \"left\" }}\n                      onClick={() => {\n                        toggleRemoveState(!removeState);\n                    }}\n                   >\n                    <i className=\"fas fa-user-minus\"/> Remove Patients\n                  </Button>\n                </div>\n              </div>\n            );\n    }\n}\n\n","import React, { useState, useEffect} from 'react';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { PatientList } from '../../components/PatientList'; \nimport { PatientHandler }  from '../../components/PatientHandler'; \nimport API from \"../../utils/API\";\n\n\nexport default function Patients({ setContext }) {\n\n    const [ patients, setPatients ] = useState([]),\n      [ removeState, setRemoveState ] = useState(false),\n      [ confirmed, isConfirmed ] = useState(false);\n\n    useEffect(() => {\n        getPatients()\n    }, [])\n\n    const getPatients = async () => {\n        const { data } = await API.getUser(),\n   \n          patients = await API.fetchPatients(data.user);\n\n        setPatients(patients.data);\n    },\n\n    removePatient = async _id => {\n       await API.removePatient(_id)\n\n       setRemoveState(false)\n       getPatients()\n    },\n\n    togglePatientAsRemovable = index => {\n        const clone = patients;\n        \n        clone[index].removable = !clone[index].removable\n        \n        isConfirmed(true)\n        setPatients(clone)\n    },\n\n    cancelPatientRemoval = () => {\n        const clone = patients;\n        \n        clone.forEach( item => {\n            item.removable = false\n        })\n        isConfirmed(false)\n        setRemoveState(false)\n        setPatients(clone)\n    }\n\n\n    return (\n        <Container>\n            <Row>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    {\n                        patients.map( (patient, i) => \n                            <PatientList \n                            patient={patient} \n                            index={i} \n                            context={setContext}  \n                            removeState={removeState}\n                            confirmRemoval={togglePatientAsRemovable}\n                            remove={removePatient}\n                            key={patient._id} \n                            />)\n                    }\n                    <PatientHandler \n                        removeState={removeState}\n                        confirmed={confirmed}\n                        cancel={cancelPatientRemoval}\n                        toggleRemoveState={() => {setRemoveState(!removeState)}} \n                        />\n                </Col>\n           </Row>\n        </Container>\n    )\n}\n","import { useState, useEffect, useRef } from 'react';\n\n\n//used track previous states for comparison purposes. ex use:  previousItem = usePrevious(itemInput.property),\n export const usePrevious = value => {\n\n        const ref = useRef();\n\n        useEffect(() => {\n        ref.current = value;\n        }, [value]);\n\n    return ref.current;\n}\n\n//force the re-rendering of state.\nexport const useForceUpdate = () => {\n    const [value, setValue] = useState(0); \n    return () => setValue(value => ++value); // update the state to force render\n}","import { createContext } from 'react';\n\nexport default createContext({\n    patientId: '',\n    name: ''\n})\n","import React from 'react'\nimport { Col } from '../Grid';\nimport { Input, Button } from '../Forms';\n\n\nexport function GeneralInfo({ data, target, editState, toggleState, formSubmit, name }) {\n\nif (editState) {\n    return (\n        <div className={'my-5'}>\n        <em><h5 style={{textDecoration: \"underline\"}}>\n            {name ? `${name}'s` : ''} Contact Information:</h5></em>\n        \n          <Col size={'md-12'} classes={\"mt-5\"}>\n                <Button className=\"fas fa-backspace fa-2x\" \n                style={{ ...toggleBtn, color: \"tomato\" }} \n                onClick={toggleState} />\n            </Col>\n            <form onSubmit={formSubmit} >\n                <div className={\"form-row\"}>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>First Name</label>\n                        <Input value={data ? data.firstName : ''} name=\"firstName\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Last Name</label>\n                        <Input value={data ? data.lastName : ''} name=\"lastName\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Nickname</label>\n                        <Input value={data ? data.nickname : ''} name=\"nickname\"\n                        style={input}\n                        placeholder={\"e.g. 'Mom'\"} \n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address Line 1</label>\n                        <Input value={data ? data.addressOne : ''} name=\"addressOne\"\n                        style={input}\n                        onChange={target} \n                        />                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address Line 2</label>\n                        <Input value={data ? data.addressTwo : ''} name=\"addressTwo\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>City</label>\n                        <Input value={data ? data.city : ''} name=\"city\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>State/Providence</label>\n                        <Input value={data ? data.state : ''} name=\"state\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Zip/Postal Code</label>\n                        <Input value={data ? data.zip : ''} name=\"zip\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Country</label>\n                        <Input value={data ? data.country : ''} name=\"country\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                    <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Phone Number</label>\n                        <Input value={data ? data.phone : ''} name=\"phone\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Email</label>\n                        <Input value={data ? data.email : ''} name=\"email\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    </div>\n                <Col size={'md-12'}>\n                <Button className=\"btn\" style={updtBtn} \n                    type=\"submit\" > <i className=\"fas fa-sync-alt mr-2\"/> {' '}  \n                        {' '} update \n                    </Button>\n                </Col>\n            </form>\n        </div>\n    )\n    } else {\n        return (\n            <div className={'my-5 gen-info'}>\n                <em><h5 style={{textDecoration: \"underline\"}}>\n                {name ? `${name}'s` : ''} Contact Information:</h5></em>\n\n                <Col size={'md-12'} classes={'mt-5'}>\n                    <Button className=\"fas fa-user-edit fa-2x\" style={toggleBtn} \n                        onClick={toggleState} \n                    />   \n                </Col>\n            <form>\n                <div className={\"form-row\"}>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>First Name:</label>\n                        <div style={fieldText}>{data.firstName}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Last Name:</label>\n                        <div style={fieldText}>{data.lastName}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Nickname:</label>\n                        <div style={fieldText}>{data.nickname}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address line 1:</label>\n                        <div style={fieldText}>{data.addressOne}</div>\n                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address line 2:</label>\n                        <div style={fieldText}>{data.addressTwo}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>City:</label>\n                        <div style={fieldText}>{data.city}</div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>State/Providence:</label>\n                        <div style={fieldText}>{data.state}</div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Zip/Postal Code:</label>\n                        <div style={fieldText}>{data.zip}</div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Country:</label>\n                        <div style={fieldText}>{data.country}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Phone Number:</label>\n                        <div style={fieldText}>{data.phone}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Email:</label>\n                        <div style={fieldText}>{data.email}</div>\n                    </Col>\n                </div>\n            </form>\n         </div>\n        )\n    }\n}\n\nconst fieldText = {\n    fontStyle: 'italic',\n    fontWeight: '1000',\n    padding: '10px 10px 10px 0',\n    color: 'black'\n},\ntoggleBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'white',\n    backgroundColor: 'white'\n},\nupdtBtn = {\n    float: 'right',\n    margin: '0',\n    backgroundColor: '#214c91',\n    color: 'white',\n    padding: \".4rem .75rem\"\n},\ninput = {\n    borderBottom: '1px solid rgba(0, 0, 0, .2)',\n    transition: 'all 0.30s ease-in-out'\n}","import React from 'react'\nimport { Col } from '../Grid';\nimport { Input, Button, TextArea } from '../Forms';\n\n\nexport function HealthCard({ data, target, editState, toggleState, formSubmit, name }) {\n\n    const getAge = DOB => {\n\n        const today = new Date(),\n         birthDate = new Date(DOB),\n          month = today.getMonth() - birthDate.getMonth();\n        let age = today.getFullYear() - birthDate.getFullYear();\n\n          if(isNaN(age)) return '??'\n            \n    return month < 0 || (month === 0 && today.getDate() < birthDate.getDate()) ? age - 1 : age;\n    },\n\n     getBloodTypes = bloodType => {\n    \n        const types = ['Select', 'Unknown', 'A-Positive', 'A-Negative', 'B-Positive', 'B-Negative', 'AB-Positive', 'AB-Negative', 'O-Positive', 'O-Negative']\n    \n    return types.map( (type, i) => type === bloodType ? <option key={i} value={bloodType} defaultValue>{bloodType}</option> : <option key={i}>{type}</option>)\n     },\n\n     getGenders = gender => {\n    \n        const types = ['Select', 'Male', 'Female', 'Transgender Male', 'Transgender Female']\n    \n    return types.map( (type, i) => type === gender ? <option key={i} value={gender} defaultValue>{gender}</option> : <option key={i}>{type}</option>)\n     }; \n    \nif (editState) {\n    return (\n        <div className={'my-5'}>\n            <em><h5 style={{textDecoration: \"underline\"}}>\n            {name ? `${name}'s` : ''} Basic Health Information:</h5></em>\n\n          <Col size={'md-12'} classes={\"mt-5\"}>\n                <Button className=\"fas fa-backspace fa-2x\" style={{...toggleBtn, color: \"tomato\"}} \n                onClick={toggleState} />\n            </Col>\n            <form onSubmit={formSubmit} >\n                <div className={\"form-row\"}>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Date of Birth</label>\n                        <Input name=\"dob\" placeholder=\"MM/DD/YYYY\"\n                        value={data.dob}\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Age</label>\n                        <div style={fieldText}>\n                            {getAge(data.dob)}\n                        </div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                    <label>Gender</label>\n                        <select name=\"gender\" className=\"form-control\"\n                        style={input}\n                        onChange={target} >\n                            {getGenders(data.gender)}    \n                        </select>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Blood Type</label>\n                        <select name=\"bloodType\" className=\"form-control\"\n                        style={input} \n                        onChange={target} >\n                            {getBloodTypes(data.bloodType)}\n                        </select>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Insurance Plan</label>\n                        <Input value={data.insurance} name=\"insurance\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Number</label>\n                        <Input value={data.insNumber} name=\"insNumber\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx BIN</label>\n                        <Input value={data.rxBin} name=\"rxBin\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx PCN</label>\n                        <Input value={data.rxPcn} name=\"rxPcn\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Allergies</label>\n                        <TextArea value={data.allergies} name=\"allergies\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Immunizations (include dates received)</label>\n                        <TextArea value={data.immunizations} name=\"immunizations\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Family History & Other Notes</label>\n                        <TextArea value={data.notes} name=\"notes\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <Col size={'md-12'}>\n                <Button className=\"btn\" style={updtBtn} \n                    type=\"submit\" > <i className=\"fas fa-sync-alt mr-2\"/> {' '}  \n                        {' '} update \n                    </Button>\n                </Col>\n            </form>\n        </div>\n        )\n    } else {\n        return (\n            <div className={'my-5 health-info'}>\n                <em><h5 style={{textDecoration: \"underline\"}}>\n                {name ? `${name}'s` : ''} Basic Health Information:</h5></em>\n\n                <Col size={'md-12'} classes={'gen-edit mt-5'}>\n                    <Button className=\"fas fa-user-edit fa-2x\" style={toggleBtn} \n                        onClick={toggleState} \n                    />   \n                </Col>\n            <form>\n                <div className={\"form-row\"}>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Date of Birth:</label>\n                        <div style={fieldText}>{data.dob}</div>\n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Age:</label>\n                        <div style={fieldText}>\n                            {getAge(data.dob)}\n                        </div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Gender:</label>\n                        <div style={fieldText}>{data.gender}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Blood Type:</label>\n                        <div style={fieldText}>{data.bloodType}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Insurance Plan:</label>\n                        <div style={fieldText}>{data.insurance}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Number:</label>\n                        <div style={fieldText}>{data.insNumber}</div>\n                    </Col>\n        \n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx BIN:</label>\n                        <div style={fieldText}>{data.rxBin}</div>\n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx PCN:</label>\n                        <div style={fieldText}>{data.rxPcn}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Allergies:</label>\n                        <div style={fieldText}>{data.allergies}</div>\n                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Immunizations (include dates received):</label>\n                        <div style={fieldText}>{data.immunizations}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Family History & Other Notes:</label>\n                        <div style={fieldText}>{data.notes}</div>\n                    </Col>\n                </div>\n            </form>\n         </div>\n        )\n    }\n}\n\nconst fieldText = {\n    fontStyle: 'italic',\n    fontWeight: '1000',\n    padding: '10px 10px 10px 0',\n    color: 'black'\n},\ntoggleBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'white',\n    backgroundColor: 'white'\n},\nupdtBtn = {\n    float: 'right',\n    margin: '0',\n    backgroundColor: '#214c91',\n    color: 'white',\n    padding: \".4rem .75rem\"\n},\ninput = {\n    borderBottom: '1px solid rgba(0, 0, 0, .2)',\n    transition: 'all 0.30s ease-in-out'\n}","import React from 'react';\nimport { Col } from '../Grid';\nimport { Input, Button, TextArea } from '../Forms';\n\nexport function Conditions({\n\tdata,\n\tname,\n\ttarget,\n\tareaTarget,\n\teditState,\n\ttoggleState,\n\tformSubmit,\n\trenderSuggestions,\n\tremove,\n\ttext,\n\ttoggleDescState,\n\teditDescState\n}) {\n\t\n\tconst getRowHeight = (text) => (text.length > 250 ? text.length / 80 : 3),\n\n\t\trenderConditions = conditions => {\n\t\t\treturn conditions.sort((a, b) => b.createdAt - a.createdAt).map((condition, i) => \n\t\t\t\t(\n\t\t\t\t<Col key={i} size={'md-12'} classes={'form-group'}>\n\t\t\t\t\t<label style={fieldText}>{condition.name} </label>\n\t\t\t\t\t<div>{condition.description}</div>\n\t\t\t\t</Col>\n\t\t\t));\n\t\t};\n\n\tfunction renderEditConditions(conditions) {\n\t\treturn conditions.sort((a, b) => b.createdAt - a.createdAt).map((condition, i) => {\n\t\t\t\n\t\t\tif (condition.edit) {\n\t\t\t\treturn (\n\t\t\t\t\t<Col key={i} size={'md-12'} classes={'form-group'}>\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<label style={fieldText}>\n\t\t\t\t\t\t\t\t{condition.name} {' '}\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName=\"fas fa-pen\"\n\t\t\t\t\t\t\t\t\tstyle={editBtn}\n\t\t\t\t\t\t\t\t\tonClick={toggleDescState.bind(this, i)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName=\"fas fa-sync-alt\"\n\t\t\t\t\t\t\t\t\tstyle={littleEditBtn}\n\t\t\t\t\t\t\t\t\tonClick={toggleDescState.bind(this, i)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tvalue={condition.description}\n\t\t\t\t\t\t\t\trows={getRowHeight(condition.description)}\n\t\t\t\t\t\t\t\tonChange={areaTarget(i)}\n\t\t\t\t\t\t\t\tstyle={textarea}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</Col>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn (\n\t\t\t\t\t<Col key={i} size={'md-12'} classes={'form-group'}>\n\t\t\t\t\t\t<label style={fieldText}>\n\t\t\t\t\t\t\t{condition.name} {' '}\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName=\"fas fa-pen\"\n\t\t\t\t\t\t\t\tstyle={editBtn}\n\t\t\t\t\t\t\t\tonClick={toggleDescState.bind(this, i)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button className=\"fas fa-times\" style={removeBtn} onClick={remove.bind(this, i)} />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<div>{condition.description}</div>\n\t\t\t\t\t</Col>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\n\tif ((editState || data.length === 0) && !editDescState) {\n\t\treturn (\n\t\t\t<div className={'my-5'}>\n\t\t\t\t<em>\n\t\t\t\t\t<h5 style={{ textDecoration: 'underline' }}>\n\t\t\t\t\t{name ? `${name}'s` : ''} Health Conditions:</h5>\n\t\t\t\t</em>\n\n\t\t\t\t<Col size={'md-12'} classes=\"mt-5\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"fas fa-backspace fa-2x\"\n\t\t\t\t\t\tstyle={{ ...toggleBtn, color: 'tomato' }}\n\t\t\t\t\t\tonClick={toggleState}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<form onSubmit={formSubmit}>\n\t\t\t\t\t<div className=\"form-row\" style={{ background: 'white' }}>\n\t\t\t\t\t\t<Col size={'md-6'} classes={'form-group'}>\n\t\t\t\t\t\t\t<label>Add New Condition</label>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<Input type=\"text\"  autoComplete=\"off\"\n\t\t\t\t\t\t\t\tstyle={input} \n\t\t\t\t\t\t\t\tvalue={text} \n\t\t\t\t\t\t\t\tonChange={target} \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{renderSuggestions()}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col size={'md-3'}>\n\t\t\t\t\t\t\t<Button className=\"btn\" style={addBtn} type=\"submit\">\n\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t<i className=\"fa fa-plus fa-2x mr-2\" /> Add\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'form-row'}>{renderEditConditions(data)}</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t} else if (editDescState) {\n\t\treturn (\n\t\t\t<div className={'my-5'}>\n\t\t\t\t<em>\n\t\t\t\t\t<h5 style={{ textDecoration: 'underline' }}>\n\t\t\t\t\t{name ? `${name}'s` : ''} Health Conditions:</h5>\n\t\t\t\t</em>\n\n\t\t\t\t<Col size={'md-12 mt-5'}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"fas fa-backspace fa-2x\"\n\t\t\t\t\t\tstyle={{ ...toggleBtn, color: 'tomato' }}\n\t\t\t\t\t\tonClick={toggleState}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<form onSubmit={formSubmit}>\n\t\t\t\t\t<div className=\"form-row\" style={{ background: 'white' }}>\n\t\t\t\t\t\t<Col size={'md-6'} classes={'form-group'}>\n\t\t\t\t\t\t\t<label>Add New Condition</label>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<Input type=\"text\" \n\t\t\t\t\t\t\t\tstyle={input} \n\t\t\t\t\t\t\t\tvalue={text} \n\t\t\t\t\t\t\t\tonChange={target} \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{renderSuggestions()}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col size={'md-3'}>\n\t\t\t\t\t\t\t<Button className=\"btn\" style={addBtn} type=\"submit\">\n\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t<i className=\"fa fa-plus fa-2x mr-2\" /> Add\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'form-row'}>{renderEditConditions(data)}</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<div className={'mt-5 condition-info'}>\n\t\t\t\t<em>\n\t\t\t\t\t<h5 style={{ textDecoration: 'underline' }}>\n\t\t\t\t\t{name ? `${name}'s` : ''} Health Conditions:</h5>\n\t\t\t\t</em>\n\n\t\t\t\t<Col size={'md-12'} classes={'condition-edit mt-5'}>\n\t\t\t\t\t<Button className=\"fas fa-user-edit fa-2x\" style={toggleBtn} \n\t\t\t\t\tonClick={toggleState}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<form>\n\t\t\t\t\t<div className={'form-row'}>{renderConditions(data)}</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\nconst fieldText = {\n\t\tfontStyle: 'italic',\n\t\tfontWeight: '1000',\n\t\tpadding: '10px 10px 10px 0',\n\t\tcolor: 'black'\n\t},\n\ttextarea = {\n\t\tresize: 'none',\n\t\tborderBottom: '1px solid rgba(0, 0, 0, .2)',\n\t\ttransition: 'all 0.30s ease-in-out'\n\t},\n\tinput = {\n\t\tborderBottom: '1px solid rgba(0, 0, 0, .2)',\n\t\ttransition: 'all 0.30s ease-in-out'\n\t},\n\ttoggleBtn = {\n\t\tfloat: 'right',\n\t\tborder: 'none',\n\t\tmargin: '0',\n\t\tcolor: 'white',\n\t\tbackgroundColor: 'white'\n\t},\n\taddBtn = {\n\t\tmarginTop: '30px',\n\t\tcolor: '#214c91',\n\t\tfocus: 'none',\n\t\tsize: '10em'\n\t},\n\teditBtn = { \n\t\tborder: 'none', \n\t\tbackgroundColor: 'white' \n\t},\n\tlittleEditBtn = {\n\t\tbackgroundColor: 'white',\n\t\tborder: 'none',\n\t\tcolor: '#214c91'\n\t},\n\tremoveBtn = {\n\t\tbackgroundColor: 'white',\n\t\tborder: 'none',\n\t\tcolor: 'red'\n\t};\n","import React from 'react'\nimport { Col } from '../Grid';\nimport { Input, Button } from '../Forms';\n\nexport function Medications({ \n    data, \n    text, \n    name,\n    target, \n    remove, \n    addDoses, \n    editState, \n    formSubmit, \n    toggleState, \n    otherDosage, \n    doseChoices, \n    renderSuggestions\n}) {\n\n    const renderDoses = doses => {\n        if (!doses || otherDosage === 'Other Dose') {\n            return (\n                <Input name=\"dosage\" placeholder=\"Enter Dosage\"\n                    style={input}\n                    onChange={target}\n                />\n            )\n        } else {\n            const clone = doses.includes('Other Dose') ? doses : doses.concat('Other Dose');\n            return (\n                <select name=\"dosage\" style={input}\n                    onChange={target}\n                    className=\"form-control\">\n                    <option defaultValue>Which Dose?</option>\n\n                    {clone.map((dose, i) => <option key={i} >{dose}</option>)}\n\n                </select>\n            )\n        }\n    },\n\n        renderMeds = meds => {\n            return meds.sort((a, b) => b.createdAt - a.createdAt).map((med, i) => (\n\n                <Col key={i} size={\"md-12\"} classes={\"form-group\"}>\n                    <label style={fieldText}>{med.medication} </label>\n                    <div>{med.dosage}</div>\n                </Col>\n            ));\n        }\n\n    function renderEditMeds(meds) {\n        return (\n            meds.sort((a, b) => b.createdAt - a.createdAt).map((med, i) =>\n            \n                <Col key={i} size={'md-12'} classes={'form-group'}>\n                    <label style={fieldText}>\n                        {med.medication}\n                        {' '}\n                        <Button className=\"fas fa-times\" type='submit' style={removeBtn}\n                            onClick={remove.bind(this, i)}\n                        />\n                    </label>\n                    <div>\n                        {med.dosage}\n                    </div>\n                </Col>\n            )\n        )\n    }\n\n    if ((editState || data.length === 0)) {\n        return (\n            <div className={'my-5'}>\n                <em><h5 style={{ textDecoration: \"underline\" }}>\n                {name ? `${name}'s` : ''} Medications:</h5></em>\n\n                <Col size={'md-12'} classes=\"mt-5\">\n                    <Button className=\"fas fa-backspace fa-2x\"\n                        style={{ ...toggleBtn, color: \"tomato\" }}\n                        onClick={toggleState}\n                    />\n                </Col>\n                <form onSubmit={formSubmit} >\n                    <div className=\"form-row\" style={{ background: 'white' }}>\n                        <Col size={'md-4'} classes={'form-group'}>\n                            <label>Add New Medication</label>\n                            <Button className=\"fas fa-hand-point-right\"\n                                style={littlePointBtn}\n                                onClick={addDoses}\n                            ></Button>\n                            <div>\n                                <Input name=\"medication\" autoComplete=\"off\"\n                                    style={input}\n                                    value={text}\n                                    onBlur={addDoses}\n                                    onChange={target}\n                                />\n\n                                {renderSuggestions()}\n\n                            </div>\n                        </Col>\n                        <Col size={'md-4'} classes={'form-group'}>\n                            <label>Select Dosage</label>\n                            <div>\n\n                                {renderDoses(doseChoices)}\n\n                            </div>\n                        </Col>\n                        <Col size={'md-2'}>\n                            <Button className=\"btn\" style={addBtn}\n                                type=\"submit\"  > <i className=\"fa fa-plus fa-2x mr-2\" />\n                                {' '} Add\n                        </Button>\n                        </Col>\n                    </div>\n                </form>\n                <div className={\"form-row\"}>\n\n                    {renderEditMeds(data)}\n\n                </div>\n            </div>\n        )\n    }\n    else {\n        return (\n            <div className={'my-5 med-info'}>\n                <em><h5 style={{ textDecoration: \"underline\" }}>\n                {name ? `${name}'s` : ''} Medications:</h5></em>\n\n                <Col size={'md-12'} classes={\"mt-5\"}>\n                    <Button className=\"fas fa-user-edit fa-2x\"\n                        style={toggleBtn}\n                        onClick={toggleState}\n                    />\n                </Col>\n                <form>\n                    <div className={\"form-row\"}>\n\n                        {renderMeds(data)}\n\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\nconst fieldText = {\n    fontStyle: 'italic',\n    fontWeight: '1000',\n    padding: '10px 10px 10px 0',\n    color: 'black'\n},\n    input = {\n        borderBottom: '1px solid rgba(0, 0, 0, .2)',\n        transition: 'all 0.30s ease-in-out'\n    },\n    toggleBtn = {\n        float: 'right',\n        border: 'none',\n        margin: '0',\n        color: 'white',\n        backgroundColor: 'white'\n    },\n    addBtn = {\n        marginTop: '30px',\n        color: '#214c91',\n        focus: 'none',\n        size: '10em'\n    },\n    littlePointBtn = {\n        border: 'none',\n        color: 'green',\n        float: 'right',\n        backgroundColor: 'white'\n    },\n    removeBtn = {\n        backgroundColor: 'white',\n        border: 'none',\n        color: 'red'\n    }\n","import React from 'react'\nimport { Col } from '../../components/Grid';\nimport { Input, Button } from '../../components/Forms';\n\n\nexport function NewContact({ target, toggleState, formSubmit }) {\n\n    return (\n    <div className={'my-5'}>\n        <Col size={'md-12'}>\n            <Button className=\"fas fa-backspace fa-2x\" style={cancelBtn} \n            onClick={toggleState} />\n        </Col>\n        <form onSubmit={formSubmit} >\n            <div className={\"form-row\"}>\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Contact for</label>\n                    <Input name=\"contact\" \n                    placeholder=\"PCP, Pharmacy, etc..\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Office or Business Name</label>\n                    <Input name=\"office\"\n                    placeholder=\"Vandelay Industries\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Contact Name</label>\n                    <Input name=\"name\" \n                    placeholder=\"Art Vandelay\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n            </div>\n            <div className=\"form-row\">\n                <Col size={'md-6'} classes={'form-group'}>\n                    <label>Address Line 1</label>\n                    <Input name=\"addressOne\"\n                    style={input}\n                    onChange={target} \n                    />                    </Col>\n                <Col size={'md-6'} classes={'form-group'}>\n                    <label>Address Line 2</label>\n                    <Input name=\"addressTwo\"\n                    style={input}\n                    onChange={target} \n                    />                    \n                </Col>\n            </div>\n            <div className=\"form-row\">\n                <Col size={'md-3'} classes={'form-group'}>\n                    <label>City</label>\n                    <Input name=\"city\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-3'} classes={'form-group'}>\n                    <label>State/Providence</label>\n                    <Input name=\"state\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-3'} classes={'form-group'}>\n                    <label>Zip/Postal Code</label>\n                    <Input name=\"zip\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-3'} classes={'form-group'}>\n                    <label>Country</label>\n                    <Input name=\"country\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n            </div>\n            <div className=\"form-row\">\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Primary Phone</label>\n                    <Input name=\"primaryPhone\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-2'} classes={'form-group'}>\n                    <label>Ext.</label>\n                    <Input name=\"primaryExt\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Another Phone</label>\n                    <Input name=\"secondaryPhone\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-2'} classes={'form-group'}>\n                    <label>Ext.</label>\n                    <Input name=\"secondaryExt\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                </div>\n                <div className=\"form-row\">\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Fax</label>\n                    <Input name=\"fax\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Email</label>\n                    <Input name=\"email\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Website</label>\n                    <Input name=\"website\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n            </div>\n            <Col size={'md-12'}>\n            <Button className=\"btn\" style={saveBtn} \n                type=\"submit\" > <i className=\"fa fa-address-book mr-2\"/> {' '}  \n                    {' '} Save \n                </Button>\n            </Col>\n        </form>\n    </div> \n    )\n}\n\nconst cancelBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'tomato',\n    backgroundColor: 'white'\n},\nsaveBtn = {\n    float: 'right',\n    margin: '0',\n    backgroundColor: '#55595c',\n    color: 'white',\n},\ninput = {\n    borderBottom: '1px solid rgba(0, 0, 0, .2)',\n    transition: 'all 0.30s ease-in-out'\n}","import React, { useState } from \"react\";\nimport { Col } from \"../../components/Grid\";\nimport { NewContact } from \"../../components/NewContact\";\nimport { Input, Button } from \"../../components/Forms\";\n\nexport function Contacts({\n  data,\n  name,\n  target,\n  remove,\n  newContact,\n  toggleNew,\n  newTarget,\n  toggleState,\n  formSubmit\n}) {\n\n  const [ confirmed, isConfirmed ] = useState(false),\n\n    formatPhoneNumberLink = number => number ? number.replace(/[^\\d]/g, '') : \"\",\n  \n    getNewContact = nextContact => {\n      if (nextContact) {\n        return (\n          <NewContact\n            target={newTarget}\n            toggleState={toggleNew}\n            formSubmit={formSubmit}\n          />\n        );\n      }\n    },\n\n    confirmRemoval = i => {\n      if (confirmed) {\n        return (\n          <div className={\"remove\"}>\n            <Button\n              type=\"button\"\n              className=\"btn btn-danger\"\n              style={{ float: \"right\" }}\n              onClick={remove.bind(this, i, () => {isConfirmed(!confirmed)})}\n            >\n              <i className=\"fas fa-user-times\"> </i> Confirm Delete\n            </Button>\n            <Button\n              className=\"btn minus\"\n              style={{ float: \"left\" }}\n              onClick={() => {\n                isConfirmed(!confirmed);\n              }}\n            >\n              <i className=\"fas fa-ban\" /> Cancel\n            </Button>\n          </div>\n        );\n      } else {\n        return (\n          <div className={\"remove\"}>\n            <Button\n              className=\"btn minus\"\n              style={{ float: \"left\" }}\n              onClick={() => {\n                isConfirmed(!confirmed);\n              }}\n            >\n              <i className=\"fa fa-minus\" /> Remove Contact\n            </Button>\n          </div>\n        );\n      }\n    };\n\n  function renderContacts(contacts) {\n    return contacts.map((contact, i) => {\n      if (contact.edit) {\n        return (\n          <div key={i} className={\"mt-5\"}>\n            <Col size={\"md-12\"}>\n              <Button\n                className=\"fas fa-backspace fa-2x\"\n                style={confirmed ? { ...cancelBtn, color: \"white\" } : cancelBtn}\n                onClick={toggleState.bind(this, i)}\n              />\n            </Col>\n            <form>\n              <div className={\"form-row\"}>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Contact for</label>\n                  <Input\n                    value={contact.contact}\n                    name=\"contact\"\n                    placeholder=\"Dr, Pharmacy, etc..\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Office or Business Name</label>\n                  <Input\n                    value={contact.office}\n                    name=\"office\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Contact Name</label>\n                  <Input\n                    value={contact.name}\n                    name=\"name\"\n                    placeholder=\"Dr. Smith\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-6\"} classes={\"form-group\"}>\n                  <label>Address Line 1</label>\n                  <Input\n                    value={contact.addressOne}\n                    name=\"addressOne\"\n                    style={input}\n                    onChange={target(i)}\n                  />{\" \"}\n                </Col>\n                <Col size={\"md-6\"} classes={\"form-group\"}>\n                  <label>Address Line 2</label>\n                  <Input\n                    value={contact.addressTwo}\n                    name=\"addressTwo\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>City</label>\n                  <Input\n                    value={contact.city}\n                    name=\"city\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>State/Providence</label>\n                  <Input\n                    value={contact.state}\n                    name=\"state\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>Zip/Postal Code</label>\n                  <Input\n                    value={contact.zip}\n                    name=\"zip\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>Country</label>\n                  <Input\n                    value={contact.country}\n                    name=\"country\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Primary Phone</label>\n                  <Input\n                    value={contact.primaryPhone}\n                    name=\"primaryPhone\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-2\"} classes={\"form-group\"}>\n                  <label>Ext.</label>\n                  <Input\n                    value={contact.primaryExt}\n                    name=\"primaryExt\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Another Phone</label>\n                  <Input\n                    value={contact.secondaryPhone}\n                    name=\"secondaryPhone\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-2\"} classes={\"form-group\"}>\n                  <label>Ext.</label>\n                  <Input\n                    value={contact.secondaryExt}\n                    name=\"secondaryExt\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Fax</label>\n                  <Input\n                    value={contact.fax}\n                    name=\"fax\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Email</label>\n                  <Input\n                    value={contact.email}\n                    name=\"email\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Website</label>\n                  <Input\n                    value={contact.website}\n                    name=\"website\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-12\"}>\n                  {confirmRemoval(i)}\n\n                  <Button\n                    className=\"btn\"\n                    style={confirmed ? { display: \"none\" } : updtBtn}\n                    onClick={toggleState.bind(this, i)}\n                  >\n                    <i className=\"fas fa-sync-alt mr-2\" />\n                    update\n                  </Button>\n                </Col>\n              </div>\n            </form>\n          </div>\n        );\n      } else {\n        return (\n          <div key={i} className={\"mt-5 contacts-info\"}>\n            <Col size={\"md-12\"} classes={\"contacts-edit\"}>\n              <Button\n                className=\"fas fa-user-edit fa-2x\"\n                style={editBtn}\n                onClick={ ()=>{\n                  isConfirmed(false); \n                  toggleState(i)\n                }}\n              />\n            </Col>\n            <form>\n              <div className={\"form-row\"}>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Contact for:</label>\n                  <div style={fieldText}>{contact.contact}</div>\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Office or Business Name:</label>\n                  <div style={fieldText}>{contact.office}</div>\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Contact Name:</label>\n                  <div style={fieldText}>{contact.name}</div>\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-6\"} classes={\"form-group\"}>\n                  <label>Address line 1:</label>\n                  <div style={fieldText}>{contact.addressOne}</div>\n                </Col>\n                <Col size={\"md-6\"} classes={\"form-group\"}>\n                  <label>Address line 2:</label>\n                  <div style={fieldText}>{contact.addressTwo}</div>\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>City:</label>\n                  <div style={fieldText}>{contact.city}</div>\n                </Col>\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>State/Providence:</label>\n                  <div style={fieldText}>{contact.state}</div>\n                </Col>\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>Zip/Postal Code:</label>\n                  <div style={fieldText}>{contact.zip}</div>\n                </Col>\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>Country:</label>\n                  <div style={fieldText}>{contact.country}</div>\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Primary Phone:</label>\n                  <div style={{...fieldText, textDecoration: 'underline'}}>\n                  <a href={`tel:${formatPhoneNumberLink(contact.primaryPhone)}`}>{contact.primaryPhone}</a>\n                  </div>\n                </Col>\n                <Col size={\"md-2\"} classes={\"form-group\"}>\n                  <label>Ext:</label>\n                  <div style={fieldText}>{contact.primaryExt}</div>\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Another Phone:</label>\n                  <div style={{...fieldText, textDecoration: 'underline'}}>\n                  <a href={`tel:${formatPhoneNumberLink(contact.secondaryPhone)}`}>{contact.secondaryPhone}</a>\n                  </div>\n                </Col>\n                <Col size={\"md-2\"} classes={\"form-group\"}>\n                  <label>Ext:</label>\n                  <div style={fieldText}>{contact.secondaryExt}</div>\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Fax:</label>\n                  <div style={fieldText}>{contact.fax}</div>\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Email:</label>\n                  <div style={{...fieldText, textDecoration: 'underline'}}>\n                    <a href={`mailto:${contact.email}`}>{contact.email}</a>\n                    </div>\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Website:</label>\n                  <div style={{...fieldText, textDecoration: 'underline'}}> \n                  <a target=\"_blank\" rel=\"noreferrer noopener\" \n                    href={`https://${contact.website}`}>{contact.website}</a>\n                  </div>\n                </Col>\n              </div>\n            </form>\n          </div>\n        );\n      }\n    });\n  }\n\n  return (\n    <div className={\"my-5\"}>\n      <em>\n        <h5 style={{ textDecoration: \"underline\" }}>\n          Emergency or other contact Info {name ? `for ${name}` : ''}:\n        </h5>\n      </em>\n\n      {renderContacts(data)}\n\n      {getNewContact(newContact)}\n\n      <div className={\"add\"}>\n        <Button\n          className=\"btn plus\"\n          style={newContact ? { display: \"none\" } : { display: \"block\", float: 'right' }}\n          onClick={toggleNew}\n        >\n          <i className=\"fa fa-plus\" /> New Contact\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nconst fieldText = {\n    fontStyle: \"italic\",\n    fontWeight: \"1000\",\n\t\tpadding: '10px 10px 10px 0',\n    color: \"black\"\n  },\n  input = {\n    borderBottom: \"1px solid rgba(0, 0, 0, .2)\",\n    transition: \"all 0.30s ease-in-out\"\n  },\n  updtBtn = {\n    float: \"right\",\n    margin: \"0\",\n    backgroundColor: \"#214c91\",\n    color: \"white\"\n  },\n  editBtn = {\n    float: \"right\",\n    border: \"none\",\n    margin: \"0\",\n    color: \"white\",\n    backgroundColor: \"white\"\n  },\n  cancelBtn = {\n    float: \"right\",\n    border: \"none\",\n    margin: \"0\",\n    color: \"tomato\",\n    backgroundColor: \"white\"\n  };\n","import React, { useEffect, useState, useRef, useContext } from 'react';\nimport { useForceUpdate } from '../../utils/CustomHooks';\nimport PatientContext from '../../utils/PatientContext';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { GeneralInfo } from '../../components/GeneralInfo';\nimport { HealthCard } from '../../components/HealthCard';\nimport { Conditions } from '../../components/Conditions';\nimport { Medications } from '../../components/Medications';\nimport { Contacts } from '../../components/Contacts';\nimport API from '../../utils/API';\n\nexport default function EHR({ location, setContext }) {\n\n/*\n    Globals\n*/ \n    let { patientId, name } = useContext(PatientContext);\n        patientId = patientId ? patientId : location.state.patientId;\n  \n    const [ patient, setPatient ] = useState(patientId),\n        [generalInfo, setGeneralInfo] = useState({}),\n        [ healthInfo, setHealthInfo ] = useState({}),\n        [ conditions, setConditions ] = useState([]),\n        [ meds, setMeds ] = useState([]),\n        [ contacts, setContacts ] = useState([]),\n        [ medInput, setMedInput ] = useState(''),\n        [ newContact, setNewContact ] = useState({}),\n        [ addContact, setAddContact ] = useState(false),\n        [ editGenState, setGenState ] = useState(false),\n        [ editHealthState, setHealthState ] = useState(false),\n        [ editConditState, setConditState ] = useState(false),\n        [ editMedsState, setMedsState ] = useState(false),\n        [ conditSuggestions, setConditSuggestions ] = useState([]),\n        [ medSuggestions, setMedSuggestions ] = useState([]),\n        [ doses, setDoses ] = useState(''),\n        [ query, setQuery ] = useState(''),\n\n        forceUpdate = useForceUpdate(), \n        hasConditions = useRef(), \n        hasMeds = useRef(), \n        hasContacts = useRef(), \n        isInitialMount = useRef(true);\n\n/*\n    EHR Setup and Initialization\n*/ \n    //Use this effect to only load patient on initial mount. And update db only on subsequent mounts. \n    useEffect(() => {  \n        if (isInitialMount.current) {\n            isInitialMount.current = false;\n            getPatient()\n        } else {\n            updateDB()\n         }\n    }, [generalInfo, healthInfo, conditions, meds, contacts]);\n\n    const getPatient = async() => {\n        if (location.state.patientId === \"\") {\n            newPatient()\n        } else {\n        const { data } = await API.fetchPatient(patient)\n            setGeneralInfo(data.patientData)\n            setHealthInfo(data.healthData)\n            setConditions(data.healthConditions)\n            setMeds(data.medications)\n            setContacts(data.contacts)\n            setParity(data)\n        } \n    },\n\n     //if no patient is passed in, create a new one on the server.\n    newPatient = async() => {\n        const user  = await API.getUser(),\n            email = user.data.user.email;\n   \n        const newPatient = {email, generalInfo, healthInfo, conditions, meds, contacts},\n         { data } = await API.addPatient(newPatient);\n\n        setPatient(data._id);\n        setGenState(true)\n        setHealthState(true)\n        setParity()\n    },\n\n/*\n    State and database management\n*/ \n    updateDB = e => {\n        if(e) {\n            e.preventDefault()\n            setGenState(false)\n            setHealthState(false)\n        }\n        if(parity()) {\n        const data = {generalInfo, healthInfo, conditions, meds, contacts}\n        \n        API.updateEHR(patient, data)\n            .catch(err => console.log(err))        \n        }     \n    }, \n\n    setParity = (data) => {\n        hasConditions.current = (data && data.healthConditions.length > 0) ? true : false;     \n        hasMeds.current = (data && data.medications.length > 0) ? true : false;     \n        hasContacts.current = (data && data.contacts.length > 0) ? true : false;     \n    },\n\n    parity = () => {\n        if(hasConditions.current && conditions.length === 0) {\n            return false;\n        }\n        if(hasMeds.current && meds.length === 0) {\n            return false;\n        }\n        if(hasContacts.current && contacts.length === 0) {\n            return false;\n        }\n        return true;\n    }\n\n    useEffect(() => {\n        setNameInNavbar()\n    }, [generalInfo])\n\n    const setNameInNavbar = () => {\n        let { firstName, nickname } = generalInfo,\n        name = nickname ? nickname : firstName;\n\n        setContext({ patientId: patient, name })\n    },\n\n    onGenInfoInputChange = e => {\n        const { name, value } = e.target;\n        setGeneralInfo({ ...generalInfo, [name]: value })\n    }, \n\n    onHealthInfoInputChange = e => {\n        const { name, value } = e.target;\n        setHealthInfo({ ...healthInfo, [name]: value })\n    },\n\n    newContactInputChange = e => {\n        const { name, value } = e.target;\n        setNewContact({...newContact, [name]: value})\n    }, \n    \n    onConditInputChange = async e => {\n      const { value } = e.target,\n       items = await getConditionNames(value);\n\n      let suggestions = [];\n       \n      if (value.length > 0) {\n          const regex = new RegExp(`^${value}`, 'i');\n          suggestions = items.sort().filter( x => regex.test(x));\n        } \n        setConditSuggestions({ suggestions, text: value })\n     }\n\n     //I'm using this effect, along with the query state to create a 1/2 second delay after typing finishes before API and other code is executed to resolve performance issues.  \n     useEffect(() => {\n        const timeOutId = setTimeout(() => setMedInput(query), 500);\n        return () => clearTimeout(timeOutId);\n      }, [query]);\n    \n    const onMedInputChange = async e => {\n            const { name, value } = e.target; \n            setQuery({ ...query, [name]: value })\n            \n        //only run this code when medication changes. ignore dosage.\n        if (name === 'medication') {\n        try {           \n        const items = await getMedNames(value)\n        let suggestions = [];\n\n        if (value.length > 0) {\n            const regex = new RegExp(`^${value}`, 'i');\n            suggestions = items.sort().filter( x => regex.test(x)).slice(0, 8)\n            } \n            setMedSuggestions({ suggestions, text: value })\n        } catch (err) {return}\n        } \n    },\n\n    onContactChange = index => e => {\n        const { name, value } = e.target,\n        clone = contacts,\n        edit = contacts[index];\n        \n        forceUpdate();\n        \n        for (let key of Object.keys(edit)) {\n\n            if (key === name) {\n                edit[key] = value;\n            } else if (!edit.hasOwnProperty(name)) {\n                edit[name] = value;\n            }\n        }\n        clone.splice(index, 1, edit)\n        setContacts(clone)\n    }, \n     \n     onConditDescChange = index => e => {\n        const { value } = e.target,\n          clone = conditions;\n\n        forceUpdate();\n\n         const newDescription = {\n            name: conditions[index].name,\n            edit: conditions[index].edit,\n            description: value\n        }\n        clone.splice(index, 1, newDescription)\n        setConditions(clone)\n    }, \n\n    toggleDescriptionEdit = index => {\n        const arr = [];\n\n        conditions.forEach( (item, i) => {\n            \n            item.edit = i === index ? !item.edit : false;\n            arr.push(item)\n        })\n        setConditions(arr)\n    },\n\n    toggleContactEdit = index => {\n        const arr = [];\n\n        contacts.forEach( (item, i) => {\n            \n            item.edit = i === index ? !item.edit : false;\n            arr.push(item)\n        })\n        setContacts(arr)\n    },\n\n    addCondition = async e => {\n        e.preventDefault();\n        e.target.reset();\n        \n        let { text } = conditSuggestions;\n        setConditSuggestions([]);\n\n        if (!text) return;\n        \n        const [ search ]  = text.split('-'),\n            { data } = await API.fetchCondition(search),\n    \n        description = (data[0] && data[0].shortdef) ? data[0].shortdef.join('\\n') : '',\n\n                newCondition = { \n                    name: capitalizeWord(text), \n                    description, \n                    edit: false, \n                    createdAt: Date.now()\n                }\n        hasConditions.current = true;\n        setConditions([...conditions, newCondition])\n    },\n                   \n\n\n    addMeds = e => {\n        e.preventDefault();\n        e.target.reset();\n\n        let { text } = medSuggestions;\n        if (!text) return\n        \n        try {\n           text = text.split(' ')\n\n            const newMed = {\n                medication: capitalizeWord(text[0]),\n                dosage: medInput.dosage,\n                edit : false,\n                createdAt: Date.now()\n            }\n        hasMeds.current = true;\n        setMeds([...meds, newMed])\n        setDoses('')\n        setQuery('')\n        setMedSuggestions([])\n        } catch(err) {return}\n    },\n\n    addNewContact = e => {\n        e.preventDefault();\n        setAddContact(false)\n        \n        hasContacts.current = true;\n        setContacts([...contacts, newContact])\n    },\n\n    removeCondition = index => {\n        const clone = conditions;\n\n        clone.splice(index, 1)\n\n        hasConditions.current = clone.length === 0 ? false : true\n        setConditions([...clone])\n    },\n\n    removeMed = index => {\n        const clone = meds;\n        \n        clone.splice(index, 1)\n\n        hasMeds.current = clone.length === 0 ? false : true\n        setMeds([...clone])\n    },\n\n    removeContact = index => {\n        const clone = contacts;\n\n        clone.splice(index, 1)\n\n        hasContacts.current = clone.length === 0 ? false : true\n        setContacts([...clone])\n    },\n\n/*\n    Features Management\n*/ \n    capitalizeWord = word => word.replace(/\\b[a-z]/g, char => char.toUpperCase()),\n\n    getConditionNames = async search => {\n        const { data } = await API.getConditionNames(search);\n        return  data[3].map( x => x[0]);\n    },\n\n     getMedNames = async search => {\n        const { data }  = await API.getMedNames(search);\n        return !data.displayTermsList ? \"??\" : data.displayTermsList.term;  \n    },\n\n    selectSuggestedCondit = async value => {\n        setConditSuggestions({ suggestions: [], text: value })\n\n        //auto add condition when selected autocomplete value is clicked.    \n        if (!value) return;\n        \n        const [ search ]  = value.split('-'),\n            { data } = await API.fetchCondition(search),\n    \n        description = (data[0] && data[0].shortdef) ? data[0].shortdef.join('\\n') : '',\n\n                newCondition = { \n                    name: capitalizeWord(value), \n                    description, \n                    edit: false, \n                    createdAt: Date.now()\n                }\n        setConditions([...conditions, newCondition])\n        setConditSuggestions({text: ''})\n    },\n\n    renderConditSuggestions = () => {\n        const { suggestions } = conditSuggestions;\n        \n        if (!suggestions || suggestions.length === 0) {\n            return;\n        }\n        return (\n            <ul>\n                {suggestions.map( (suggestion, i) => <li onClick={() => selectSuggestedCondit(suggestion)} key={i}>{suggestion}</li>)}\n            </ul>\n        )\n    },\n\n    selectSuggestedMed = async value => {\n        setMedSuggestions({ suggestions: [], text: value})\n        \n        //populate dosage choices with suggestions when autocomplete option is clicked\n        if (!value) return;\n        try {\n            const  { data } = await API.fetchMeds(value),\n              doses = data.drugGroup.conceptGroup[1].conceptProperties.map(x => x.synonym).filter(x => x !== '')\n           \n            setDoses(doses)\n        } catch(err) {return}\n    },\n\n    renderMedSuggestions = () => {\n        const { suggestions } = medSuggestions;\n        \n        if (!suggestions || suggestions.length === 0) {\n            return;\n        }\n        return (\n            <ul>\n                {suggestions.map( (suggestion, i) => <li onClick={() => selectSuggestedMed(suggestion)} key={i}>{suggestion}</li>)}\n            </ul>\n        )\n    },\n\n    //populate dosage choices when finger button is clicked\n    addDoses = async e => {\n        e.preventDefault();\n\n        const { text } = medSuggestions;\n        \n        if (!text) return;\n        try {\n            const  { data } = await API.fetchMeds(text),\n              doses = data.drugGroup.conceptGroup[1].conceptProperties.map(x => x.synonym).filter(x => x !== '')\n            \n            setDoses(doses)   \n        } catch(err) {return}\n    }\n\n\n    return (\n        <Container>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <GeneralInfo\n                        toggleState={() => setGenState(!editGenState)}\n                        editState={editGenState}\n                        data={generalInfo}\n                        target={onGenInfoInputChange}\n                        formSubmit={updateDB}\n                        name={name}\n                    />\n                </Col>\n            </Row>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <HealthCard\n                        toggleState={() => setHealthState(!editHealthState)}\n                        editState={editHealthState}\n                        data={healthInfo}\n                        target={onHealthInfoInputChange}\n                        formSubmit={updateDB}\n                        name={name}\n                    />\n                </Col>\n            </Row>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <Conditions\n                        toggleState={() => setConditState(!editConditState)}\n                        editState={editConditState} \n                        toggleDescState={toggleDescriptionEdit}\n                        remove={removeCondition}\n                        areaTarget={onConditDescChange}\n                        data={conditions}\n                        target={onConditInputChange}\n                        renderSuggestions={renderConditSuggestions}\n                        text={conditSuggestions.text}\n                        formSubmit={addCondition}\n                        name={name}\n                      />\n                </Col>\n            </Row>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <Medications\n                        toggleState={() => setMedsState(!editMedsState)}\n                        editState={editMedsState}\n                        data={meds}\n                        target={onMedInputChange}\n                        renderSuggestions={renderMedSuggestions}\n                        text={medSuggestions.text}\n                        otherDosage={medInput.dosage}\n                        remove={removeMed}\n                        addDoses={addDoses}\n                        doseChoices={doses}\n                        formSubmit={addMeds}\n                        name={name}\n                      />\n                </Col>\n            </Row>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <Contacts\n                        toggleNew={() => setAddContact(!addContact)}\n                        toggleState={toggleContactEdit}\n                        newContact={addContact}\n                        data={contacts}\n                        target={onContactChange}\n                        remove={removeContact}\n                        newTarget={newContactInputChange}\n                        formSubmit={addNewContact}\n                        name={name}\n                    />\n                </Col>\n            </Row>\n        </Container>\n    )\n}","import React, { useState, useContext, useRef, useEffect } from 'react';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { Contacts as ForwardThis } from '../../components/Contacts';\nimport { useForceUpdate } from '../../utils/CustomHooks';\nimport PatientContext from '../../utils/PatientContext';\nimport API from '../../utils/API';\n\n\nexport default function Contacts({ location }) {\n\n     const [ contacts, setContacts ] = useState([]),\n        [ newContact, setNewContact ] = useState({}),\n        [ addContact, setAddContact ] = useState(false),\n        [ generalInfo, setGeneralInfo ] = useState({}),\n        [ healthInfo, setHealthInfo ] = useState({}),\n        [ conditions, setConditions ] = useState([]),\n        [ meds, setMeds ] = useState([]),\n\n        forceUpdate = useForceUpdate(),\n        isInitialMount = useRef(true);\n\n        let { patientId, name } = useContext(PatientContext);\n        patientId = patientId ? patientId : location.state.patientId;\n\n\n    //Use this effect to only load patient on initial mount. And update db only on subsequent mounts. \n    useEffect(() => {   \n        if (isInitialMount.current) {\n            isInitialMount.current = false;\n            getPatient()\n        } else {\n            updateDB()\n         }\n    }, [contacts]);\n\n    const getPatient = async() => {\n        if (!patientId) return\n       \n        const { data } = await API.fetchPatient(patientId)\n            \n        setGeneralInfo(data.patientData)\n        setHealthInfo(data.healthData)\n        setConditions(data.healthConditions)\n        setMeds(data.medications)\n        setContacts(data.contacts)\n    },\n\n    updateDB = () => { \n        const data = {generalInfo, healthInfo, conditions, meds, contacts}\n\n        API.updateEHR(patientId, data)\n            .catch(err => console.log(err))         \n    },\n\n    newContactInputChange = e => {\n        const { name, value } = e.target;\n        setNewContact({...newContact, [name]: value})\n    }, \n\n    onContactChange = index => e => {\n        const { name, value } = e.target,\n        clone = contacts,\n        edit = contacts[index];\n        \n        forceUpdate();\n\n        for (let key of Object.keys(edit)) {\n\n            if (key === name) {\n                edit[key] = value;\n            } else if (!edit.hasOwnProperty(name)) {\n                edit[name] = value;\n            }\n        }\n        clone.splice(index, 1, edit)\n        setContacts(clone)\n    },\n\n    toggleContactEdit = index => {\n        const arr = [];\n\n        contacts.forEach( (item, i) => {\n            \n            item.edit = i === index ? !item.edit : false;\n            arr.push(item)\n        })\n        setContacts(arr)\n    },\n\n    addNewContact = e => {\n        e.preventDefault();\n        setAddContact(false)\n\n        const list = contacts.concat(newContact);\n        \n        setContacts(list)\n    },\n\n    removeContact = index => {\n        const clone = contacts;\n\n        clone.splice(index, 1)\n        setContacts([...clone])\n    };\n\n    return (\n        <Container>\n            <Row classes=\"my-5\">\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <ForwardThis\n                    toggleNew={() => setAddContact(!addContact)}\n                    toggleState={toggleContactEdit}\n                    newContact={addContact}\n                    data={contacts}\n                    target={onContactChange}\n                    remove={removeContact}\n                    newTarget={newContactInputChange}\n                    formSubmit={addNewContact}\n                    name={name}\n                    />\n                </Col>\n             </Row>\n        </Container>\n    )\n}\n","import React, { useState, useContext } from 'react';\nimport { Link, useLocation, useHistory } from 'react-router-dom';\nimport PatientContext from '../../utils/PatientContext';\nimport { Button } from '../Forms';\nimport { Collapse } from '../Grid';\nimport Auth from '../../Auth';\n\nexport default function navBar() {\n\n    let [navLinks, showNavLinks] = useState(false),\n    history = useHistory(),\n    { pathname } = useLocation(),\n    { patientId, name } = useContext(PatientContext),\n        \n\n    // hide or show links when screen width is small\n     toggleNav = () => showNavLinks(navLinks = !navLinks),  \n\n     logout = () => Auth.logout(() => {history.push(\"/\")}),\n    \n     getButtons = () => {\n        if(Auth.isAuthenticated()) {\n            return (\n                <Button className={'btn btn-outline-primary m-2'} type='button'\n                    onClick={logout} >\n                    Log Out\n                </Button>\n        )\n        } else {\n            return (\n                <div>\n                    <Link to='/signin' >\n                                <Button className={'btn btn-outline-primary m-2'} type='button'>\n                                    Log In\n                                </Button>\n                            </Link>\n                    <Link to='/signup' >\n                        <Button className={'btn btn-outline-primary m-2'} type='button'>\n                            Sign Up\n                            </Button>\n                    </Link>\n                </div>\n                )\n            }\n     }\n  \n\n    return (\n        <nav className={'navbar navbar-expand-lg navbar-light bg-light'}>\n            <Link to='/' className={'navbar-brand'}><em>my</em>EHR</Link>\n            <button onClick={toggleNav} className={'navbar-toggler'} type=\"button\" data-toggle=\"collapse\" data-target=\"#target-collapse\" >\n            <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <Collapse navState={navLinks} id={'target-collapse'}>\n              <ul className=\"navbar-nav mr-auto\">\n                <li className={pathname === \"/\" ? \"nav-item active\" : \"nav-item\"}>\n                    <Link to=\"/\" className={'nav-link'}>\n                        Home\n                    </Link>\n                </li>\n                <li className={pathname === \"/patients\" ? \"nav-item active\" : \"nav-item\"}\n                    style={Auth.isAuthenticated() ? {display: 'block'} : {display: 'none'}} >\n                    <Link to=\"/patients\" className={'nav-link'}>\n                        Saved health records\n                    </Link>\n                </li>\n                <li className={pathname === \"/ehr\" ? \"nav-item active\" : \"nav-item\"}\n                    style={pathname === \"/ehr\" || pathname === \"/contacts\" ? {display: 'block'} : {display: 'none'}} >\n\n                    <Link to={{pathname:\"/ehr\", state: { patientId, name }}} className={'nav-link'} >\n                       {name ? `${name}'s` : ''} EHR\n                    </Link>    \n                </li>\n                <li className={pathname === \"/contacts\" ? \"nav-item active\" : \"nav-item\"}\n                    style={pathname === \"/ehr\" || pathname === \"/contacts\" ? {display: 'block'} : {display: 'none'}}  >\n\n                    <Link to={{pathname:\"/contacts\", state: { patientId, name }}} className={'nav-link'} >\n                    {name ? `${name}'s` : ''} Contacts\n                    </Link>    \n                </li>\n              </ul>\n              \n                { getButtons() }\n\n            </Collapse>\n        </nav>\n    )\n}\n\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport Auth from './Auth'\n\nexport default function ProtectedRoute({ component: Component, ...rest}) {\n    return (\n        <Route \n            {...rest}  \n                render={props => { \n                if(Auth.isAuthenticated()) {\n                    \n                    return <Component {...rest} {...props} />\n                } else{ \n                    return <Redirect to={\n                        {\n                            pathname: '/',\n                            state: {\n                                from: props.location\n                            }\n                        }\n                    } />\n                }\n        }  }\n       />\n    )\n}\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Landing from \"./pages/Landing\";\nimport SignIn from \"./pages/SignIn\";\nimport SignUp from \"./pages/SignUp\";\nimport Patients from \"./pages/Patients\";\nimport EHR from \"./pages/EHR\";\nimport Contacts from './pages/Contacts';\nimport NavBar from './components/Navbar';\nimport ProtectedRoute from './ProtectedRoute';\nimport PatientContext from './utils/PatientContext';\nimport './assets/css/bootstrap.min.css';\nimport \"./App.css\";\n\n\nexport default function App() {\n  \n  const [ patient, setPatient ] = useState({}),\n    { Provider } = PatientContext,\n\n  setPatientContext = patient => setPatient(patient);\n\n  return (\n    <Router>\n      <Provider value={patient} >\n        <Route path=\"/\"><NavBar /> </Route>\n        <Route exact path=\"/\"> <Landing /> </Route>\n        <Route exact path=\"/signin\"> <SignIn /> </Route>\n        <Route exact path=\"/signup\"> <SignUp /> </Route>\n        <ProtectedRoute exact path=\"/patients\" \n        component={Patients} \n        setContext={setPatientContext}  \n        /> \n        <ProtectedRoute exact path=\"/ehr\" \n        component={EHR} \n        setContext={setPatientContext}\n        />\n        <ProtectedRoute exact path=\"/contacts\" component={Contacts} />\n      </Provider>\n    </Router>\n  )\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}