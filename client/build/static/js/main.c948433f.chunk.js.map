{"version":3,"sources":["assets/img/Logo.png","components/Grid/index.js","components/Forms/index.js","pages/Landing/Landing.js","utils/API.js","pages/SignIn/SignIn.js","pages/SignUp/SignUp.js","components/ContactCard/index.js","components/HealthCard/index.js","components/Conditions/index.js","pages/EHR/EHR.js","pages/Medications/Medications.js","components/ProfileList/index.js","pages/Profiles/Profile.js","components/Navbar/index.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Container","_ref","classes","children","react_default","a","createElement","className","concat","Row","_ref2","Col","_ref3","size","split","map","join","Collapse","_ref4","navState","id","Input","props","Object","assign","TextArea","Button","Landing","Grid_Container","class","href","role","require","config","apiKey","process","API","getDrugs","axios","get","getDrugInfo","getConditionNames","search","catch","err","console","log","fetchCondition","updateEHR","data","Promise","resolve","reject","status","fetchUser","email","_id","fetchProfile","register","credentials","password","post","login","SignIn","history","useHistory","_useState","useState","_useState2","slicedToArray","setCredentials","onInputChange","e","_e$target","target","name","value","objectSpread","defineProperty","Grid_Row","Grid_Col","style","text","logo","src","alt","onSubmit","preventDefault","reset","then","res","success","localStorage","setItem","token","push","onChange","type","placeholder","react_router_dom","to","width","height","color","textShadow","SignUp","ContactCard","editState","toggleState","formSubmit","cancelBtn","onClick","firstName","input","lastName","nickname","addressOne","addressTwo","city","state","zip","country","phone","updtBtn","editBtn","fieldText","fontStyle","fontWeight","fontSize","padding","paddingLeft","float","border","margin","backgroundColor","borderBottom","transition","HealthCard","bloodType","getAge","DOB","today","Date","birthDate","month","getMonth","age","isNaN","getFullYear","getDate","dob","selected","insurance","insNumber","rxBin","rxPcn","allergies","immunizations","notes","Conditions","renderSuggestions","toggleDescState","editDescState","getRowHeight","length","background","addBtn","conditions","_this","this","condition","i","key","bind","removeBtn","littleEditBtn","description","rows","renderEditConditions","renderConditions","marginTop","focus","EHR","usrId","generalInfo","setGeneralInfo","_useState3","_useState4","healthInfo","setHealthInfo","_useState5","_useState6","setConditions","_useState7","_useState8","editGenState","setGenState","_useState9","_useState10","editHealthState","setHealthState","_useState11","_useState12","editConditState","setConditState","_useState13","_useState14","descEditState","setDescEditState","_useState15","_useState16","conditSuggestions","setConditSuggestions","_useState17","_useState18","onConditInputChange","asyncToGenerator","regenerator_default","mark","_callee","items","suggestions","regex","wrap","_context","prev","next","sent","RegExp","sort","filter","x","test","stop","_x","apply","arguments","_callee2","_yield$API$getConditi","_context2","abrupt","_x2","updateDB","addCondition","_callee3","_text$split","_text$split2","_yield$API$fetchCondi","_context3","shortdef","toConsumableArray","_x3","loadProfiles","useEffect","_e$target2","suggestion","Medications","data-toggle","data-parent","colspan","Profiles","textDecoration","Profile","user","setUser","patients","getUser","getPatients","_yield$API$fetchUser","navBar","navLinks","showNavLinks","pathname","location","data-target","Grid_Collapse","App","react_router","exact","path","pages_Medications_Medications","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App","document","getElementById","URL","origin","addEventListener","fetch","response","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c948433f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.dfab9e19.png\";","import React from 'react'\n\n        \nexport const Container = ({ classes, children }) => <div className={`container ${classes}`}>{children}</div>\n\nexport const Row = ({ classes, children }) => <div className={`row ${classes}`}>{children}</div>\n\nexport const Col = ({ size, classes, children }) => {\n    return ( <div \n        className={size.split(' ').map( size => `col-${size}`).join(' ')\n        +\" \"+ classes}>{children}</div>\n    )\n    }\n\nexport const Collapse = ({ navState, children, id }) => { \n    const classes = navState ? 'navbar-collapse collapse show' : 'navbar-collapse collapse';\n\n     return <div className={classes} id={id}>{children}</div>\n}","import React from 'react'\n\n\nexport function Input(props) {\n    return (\n        <input className=\"form-control\" {...props} />\n    );\n  }\n  \nexport function TextArea(props) {\n    return (\n        <textarea className=\"form-control\" {...props} />\n    );\n  }\n\nexport function Button(props) {\n    return (\n        <button {...props} >\n          {props.children}\n        </button>\n    );\n  }\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { Button, Input } from '../../components/Forms';\n\nexport default function Landing() {\n\n    return (\n        <Container>\n            <div class=\"jumbotron\">\n                <h1 class=\"display-4\">My EHR</h1>\n                <p class=\"lead\">All your medical records in one place.</p>\n                <hr class=\"my-4\"/>\n                <p></p>\n                <a class=\"btn btn-primary btn-lg\" href=\"../SignUp\" role=\"button\">Get Started</a>\n            </div>\n        </Container>\n    )\n}\n\n","import axios from \"axios\";\nrequire('dotenv').config();\nconst apiKey = process.env.REACT_APP_API_KEY;\n// webstersKey = '6bbfacfd-a9a0-44da-a339-83be451e5de0'\n\nexport default {\n    getDrugs: function() {\n        return axios.get(\"/api/drugs\");\n    },\n    //this will be executed when the user selects \"get more info\" btn\n    getDrugInfo: function() {\n        return axios.get(`https://www.dictionaryapi.com/api/v3/references/medical/json/cetirizine?key=${apiKey}`);\n    },\n\n    getConditionNames: function(search) {\n        return axios.get(`https://clinicaltables.nlm.nih.gov/api/conditions/v3/search?terms=${search}&sf=primary_name,consumer_name&df=primary_name,consumer_name,info_link_data`)\n            .catch(err => console.log(err))\n    },\n\n    fetchCondition: function(search) {\n        return axios.get(`https://www.dictionaryapi.com/api/v3/references/medical/json/${search}?key=${apiKey}`)\n            .catch(err => console.log(err))\n    },\n\n    updateEHR: function(id, data) {\n\n        return new Promise((resolve, reject) => {\n            resolve({ status: 'success' })\n        });\n        //return axios.post(`/api/:${id}`, data)\n    },\n    fetchUser: function() {\n        return { email: 'example@example.com', _id: '123456789' }\n    },\n\n    fetchProfile: function() {\n        return axios.get(\"/load\");\n        // return {\n        //     id: \"67\",\n        //     firstName: \"Eddie\",\n        //     lastName: \"Bravo\",\n        //     birthday: \"6/11/1983\",\n        //     allergies: \"peanuts. horseradish, bees\",\n        //     medications: [{\n        //         name: \"tylonal\",\n        //         dosage: \"the right amount\",\n        //         date: \"hey I got new meds today they are groovy - Pull new date\"\n        //     }]\n        // }\n    },\n\n    register: function(credentials) {\n        // console.log(\"in API.register\");\n        // console.log(credentials);\n        const { email, password } = credentials\n        return axios.post('/register', { email, password })\n    },\n\n    login: function(credentials) {\n        const { email, password } = credentials;\n        return axios.post('/login', { email, password })\n    }\n};","import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { Button, Input } from '../../components/Forms';\nimport API from '../../utils/API';\n\nexport default function SignIn() {\n\n    const history = useHistory();\n    const [credentials, setCredentials] = useState({}),\n\n        onInputChange = e => {\n            const { name, value } = e.target;\n            setCredentials({ ...credentials, [name]: value })\n        },\n\n        handleSubmit = e => {\n            e.preventDefault();\n            e.target.reset();\n            API.login(credentials)\n                .then((res) => {\n                    // console.log(res.data)\n                    if (res.data.success) {\n                        localStorage.setItem('JWT', res.data.token);\n                        history.push('/')\n                    }\n                }\n                )\n                .catch((err) => err)\n        }\n\n    return (\n        <Container classes={'box-shadow sign'}>\n            <Row>\n\n                <Col size={'md-12'} >\n                    <Row>\n                        <div className={'mt-5'}>\n                            <h5 style={text}>\n                                <img style={logo} src={require('../../assets/img/Logo.png')} alt={'Logo'} />\n                        Log-in to your account\n                        </h5>\n                        </div>\n                    </Row>\n                    <Row >\n                        <form onSubmit={handleSubmit} className={'card-body'}>\n                            <div className={'form-group usr-inpt'}>\n                                <label>Email:</label>\n                                <span className=\"fa fa-user\" />\n                                <Input onChange={onInputChange}\n                                    name=\"email\" type=\"email\" placeholder=\"E-mail address\" />\n                            </div>\n                            <div className={'form-group usr-inpt'}>\n                                <label>Password:</label>\n                                <span className=\"fa fa-lock\" />\n                                <Input onChange={onInputChange}\n                                    name=\"password\" type=\"password\" placeholder=\"Password\" />\n                            </div>\n                            <Button className={'btn btn-primary btn-lg btn-block'} type=\"submit\">Log In</Button>\n                        </form>\n                    </Row>\n                    <Row classes={'justify-content-center'}>\n                        <p> New here?\n                        <Link to=\"/signup\" > Sign up.</Link>\n                        </p>\n                    </Row>\n                </Col>\n\n            </Row>\n        </Container>\n    )\n}\nconst logo = {\n    width: \"100px\",\n    height: \"auto\"\n},\n\n    text = {\n        color: \"#a1deb6\",\n        textShadow: \"1px 1px #000\"\n    }\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { Button, Input } from '../../components/Forms';\nimport API from '../../utils/API';\n\nexport default function SignUp() {\n\n    const [credentials, setCredentials] = useState({}),\n\n        onInputChange = e => {\n            const { name, value } = e.target;\n            setCredentials({ ...credentials, [name]: value })\n        },\n\n        handleSubmit = e => {\n            e.preventDefault();\n            console.log(credentials)\n\n            API.register(credentials)\n                .then((res) =>\n                    console.log(res)\n                )\n                .catch((err) => console.log(err))\n\n\n            // setCredentials(e.target.value);\n            // e.target.reset();\n            /* More Code\n                Here...    */\n        }\n\n    return (\n        <Container classes={'box-shadow sign'}>\n            <Row>\n                <Col size={'md-12'} >\n                    <Row>\n                        <div className={'mt-5'}>\n                            <h5 style={text}>\n                                <img style={logo} src={require('../../assets/img/Logo.png')} alt={'Logo'} />\n                        Create your account\n                        </h5>\n                        </div>\n                    </Row>\n                    <Row >\n                        <form onSubmit={handleSubmit} className={'card-body'}>\n                            <div className={'form-group usr-inpt'}>\n                                <label>Email:</label>\n                                <span className=\"fa fa-user\" />\n                                <Input onChange={onInputChange}\n                                    name=\"email\" type=\"email\" placeholder=\"E-mail address\" />\n                            </div>\n                            <div className={'form-group usr-inpt'}>\n                                <label>Password:</label>\n                                <span className=\"fa fa-lock\" />\n                                <Input onChange={onInputChange}\n                                    name=\"password\" type=\"password\" placeholder=\"Password\" />\n                            </div>\n                            {/* <div className={'form-group usr-inpt'}>\n                                <label>Confirm Password:</label>\n                                <span className=\"fa fa-lock\" />\n                                <Input onChange={onInputChange}\n                                    name=\"passwordConfirm\" type=\"passwordConfirm\" placeholder=\"Confirm Password\" />\n                            </div> */}\n                            <Button\n                                className={'btn btn-primary btn-lg btn-block'}\n                                type=\"submit\"\n                               >Sign Up</Button>\n                        </form>\n                    </Row>\n                    <Row classes={'justify-content-center'}>\n                        <p> Already have an account?\n                        <Link to=\"/SignIn\" > Log In.</Link>\n                        </p>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\nconst logo = {\n    width: \"100px\",\n    height: \"auto\"\n},\n\n    text = {\n        color: \"#a1deb6\",\n        textShadow: \"1px 1px #000\"\n    }","import React from 'react'\nimport { Col } from '../Grid';\nimport { Input, Button } from '../Forms';\n\n\nexport function ContactCard({ data, target, editState, toggleState, formSubmit }) {\n\nif (editState) {\n    return (\n        <div className={'mt-5'}>\n          <Col size={'md-12'}>\n                <Button className=\"fas fa-backspace fa-2x\" style={cancelBtn} \n                onClick={toggleState} />\n            </Col>\n            <form onSubmit={formSubmit} >\n                <div className={\"form-row\"}>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>First Name</label>\n                        <Input value={data.firstName} name=\"firstName\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Last Name</label>\n                        <Input value={data.lastName} name=\"lastName\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Nickname</label>\n                        <Input value={data.nickname} name=\"nickname\"\n                        style={input}\n                        placeholder={\"e.g. 'Mom'\"} \n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address Line 1</label>\n                        <Input value={data.addressOne} name=\"addressOne\"\n                        style={input}\n                        onChange={target} \n                        />                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address Line 2</label>\n                        <Input value={data.addressTwo} name=\"addressTwo\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>City</label>\n                        <Input value={data.city} name=\"city\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>State/Providence</label>\n                        <Input value={data.state} name=\"state\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Zip/Postal Code</label>\n                        <Input value={data.zip} name=\"zip\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Country</label>\n                        <Input value={data.country} name=\"country\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                    <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Phone Number</label>\n                        <Input value={data.phone} name=\"phone\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Email</label>\n                        <Input value={data.email} name=\"email\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    </div>\n                <Col size={'md-12'}>\n                <Button className=\"btn\" style={updtBtn} \n                    type=\"submit\" > <i className=\"fas fa-sync-alt fa-2x mr-2\"/> {' '}  \n                        {' '} update \n                    </Button>\n                </Col>\n            </form>\n        </div>\n    )\n    } else {\n        return (\n            <div className={'mt-5 gen-info'}>\n                <Col size={'md-12'} classes={'gen-edit'}>\n                    <Button className=\"fas fa-user-edit fa-2x\" style={editBtn} \n                        onClick={toggleState} \n                    />   \n                </Col>\n            <form>\n                <div className={\"form-row\"}>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>First Name:</label>\n                        <div style={fieldText}>{data.firstName}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Last Name:</label>\n                        <div style={fieldText}>{data.lastName}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Nickname:</label>\n                        <div style={fieldText}>{data.nickname}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address line 1:</label>\n                        <div style={fieldText}>{data.addressOne}</div>\n                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address line 2:</label>\n                        <div style={fieldText}>{data.addressTwo}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>City:</label>\n                        <div style={fieldText}>{data.city}</div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>State/Providence:</label>\n                        <div style={fieldText}>{data.state}</div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Zip/Postal Code:</label>\n                        <div style={fieldText}>{data.zip}</div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Country:</label>\n                        <div style={fieldText}>{data.country}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Phone Number:</label>\n                        <div style={fieldText}>{data.phone}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Email:</label>\n                        <div style={fieldText}>{data.email}</div>\n                    </Col>\n                </div>\n            </form>\n         </div>\n        )\n    }\n}\n\nconst fieldText = {\n    fontStyle: 'italic',\n    fontWeight: '1000',\n    fontSize: '100%',\n    padding: '10px',\n    paddingLeft: '0',\n    color: 'black'\n},\neditBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'white',\n    backgroundColor: 'white'\n},\ncancelBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'tomato',\n    backgroundColor: 'white'\n},\nupdtBtn = {\n    float: 'right',\n    margin: '0',\n    backgroundColor: '#214c91',\n    color: 'white'\n},\ninput = {\n    borderBottom: '1px solid rgba(0, 0, 0, .2)',\n    transition: 'all 0.30s ease-in-out'\n}","import React from 'react'\nimport { Col } from '../Grid';\nimport { Input, Button, TextArea } from '../Forms';\n\n\nexport function HealthCard({ data, target, editState, toggleState, formSubmit }) {\n\n    const getAge = DOB => {\n\n        const today = new Date(),\n         birthDate = new Date(DOB),\n          month = today.getMonth() - birthDate.getMonth();\n        let age = isNaN(age) ? '??' : today.getFullYear() - birthDate.getFullYear();\n          \n    return month < 0 || (month === 0 && today.getDate() < birthDate.getDate()) ? age - 1 : age;\n    },\n\n     bloodTypes = bloodType => {\n    \n        const types = ['Unknown', 'A-Positive', 'A-Negative', 'B-Positive', 'B-Negative', 'AB-Positive', 'AB-Negative', 'O-Positive', 'O-Negative']\n    \n    return types.map( type => type === bloodType ? <option selected>{bloodType}</option> : <option>{type}</option>)\n     };\n    \nif (editState) {\n    return (\n        <div className={'mt-5'}>\n          <Col size={'md-12'}>\n                <Button className=\"fas fa-backspace fa-2x\" style={cancelBtn} \n                onClick={toggleState} />\n            </Col>\n            <form onSubmit={formSubmit} >\n                <div className={\"form-row\"}>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Date of Birth</label>\n                        <Input name=\"dob\" placeholder=\"MM/DD/YYYY\"\n                        value={data.dob}\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Age</label>\n                        <div style={fieldText}>\n                            {getAge('06/12/1929')}\n                        </div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Blood Type</label>\n                        <select style={input} name=\"bloodType\" class=\"form-control\">\n                            {bloodTypes(data.bloodType)}\n                        </select>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Insurance Plan</label>\n                        <Input value={data.insurance} name=\"insurance\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Number</label>\n                        <Input value={data.insNumber} name=\"insNumber\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx BIN</label>\n                        <Input value={data.rxBin} name=\"rxBin\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx PCN</label>\n                        <Input value={data.rxPcn} name=\"rcPcn\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Allergies</label>\n                        <TextArea value={data.allergies} name=\"allergies\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Immunizations (include dates received)</label>\n                        <TextArea value={data.immunizations} name=\"immunizations\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Family History & Other Notes</label>\n                        <TextArea value={data.notes} name=\"notes\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <Col size={'md-12'}>\n                <Button className=\"btn\" style={updtBtn} \n                    type=\"submit\" > <i className=\"fas fa-sync-alt fa-2x mr-2\"/> {' '}  \n                        {' '} update \n                    </Button>\n                </Col>\n            </form>\n        </div>\n        )\n    } else {\n        return (\n            <div className={'mt-5 health-info'}>\n                <Col size={'md-12'} classes={'gen-edit'}>\n                    <Button className=\"fas fa-user-edit fa-2x\" style={editBtn} \n                        onClick={toggleState} \n                    />   \n                </Col>\n            <form>\n                <div className={\"form-row\"}>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Date of Birth:</label>\n                        <div style={fieldText}>{data.dob}</div>\n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Age:</label>\n                        <div style={fieldText}>\n                            {getAge(data.dob)}\n                        </div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Blood Type:</label>\n                        <div style={fieldText}>{data.bloodType}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Insurance Plan:</label>\n                        <div style={fieldText}>{data.insurance}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Number:</label>\n                        <div style={fieldText}>{data.insNumber}</div>\n                    </Col>\n        \n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx BIN:</label>\n                        <div style={fieldText}>{data.rxBin}</div>\n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx PCN:</label>\n                        <div style={fieldText}>{data.rxPcn}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Allergies:</label>\n                        <div style={fieldText}>{data.allergies}</div>\n                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Immunizations (include dates received):</label>\n                        <div style={fieldText}>{data.immunizations}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Family History & Other Notes:</label>\n                        <div style={fieldText}>{data.notes}</div>\n                    </Col>\n                </div>\n            </form>\n         </div>\n        )\n    }\n}\n\nconst fieldText = {\n    fontStyle: 'italic',\n    fontWeight: '1000',\n    fontSize: '100%',\n    padding: '10px',\n    paddingLeft: '0',\n    color: 'black'\n},\neditBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'white',\n    backgroundColor: 'white'\n},\ncancelBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'tomato',\n    backgroundColor: 'white'\n},\nupdtBtn = {\n    float: 'right',\n    margin: '0',\n    backgroundColor: '#214c91',\n    color: 'white'\n},\ninput = {\n    borderBottom: '1px solid rgba(0, 0, 0, .2)',\n    transition: 'all 0.30s ease-in-out'\n}","import React, { useState } from 'react'\nimport { Col } from '../Grid';\nimport { Input, Button, TextArea } from '../Forms';\n\n\n\nexport function Conditions({ data, target, editState, toggleState, formSubmit, renderSuggestions, text, toggleDescState, editDescState }) {\n\n    const renderConditions = conditions => {\n      return (\n          conditions.map( (condition, i) => \n            <Col key={i} size={'md-12'} classes={'form-group'}>\n                <label style={fieldText}>\n                    {condition.name} \n                    {' '}\n                    </label>\n                <div>\n                    {condition.description}\n                    </div>\n            </Col>\n         )\n        )\n     },\n\n    renderAddConditions = conditions => {\n      return (\n          conditions.map( (condition, i) => \n            <Col key={i} size={'md-12'} classes={'form-group'}>\n                <label style={fieldText}>\n                    {condition.name} {' '}\n                    <Button className=\"fas fa-pen\" style={{border:'none'}}\n                        onClick={toggleDescState}\n                        />\n                    <Button className=\"fas fa-times\" style={removeBtn}\n                        onClick={toggleState}  \n                        />\n                    </label>\n                <div>\n                    {condition.description}\n                    </div>\n            </Col>\n         )\n        )\n     };\n    function renderEditConditions(conditions) {\n        console.log(conditions)\n      return (\n          conditions.map( (condition, i) => \n            <Col key={i} size={'md-12'} classes={'form-group'}>\n                <label style={fieldText}>\n                    {condition.name} {' '}\n                    <Button className=\"fas fa-pen\" style={{border:'none'}}\n                        onClick={toggleDescState.bind(this,i)} \n                        />\n                    <Button className=\"fas fa-times\" style={removeBtn}\n                        onClick={toggleState}  \n                        />\n                    <Button className=\"fas fa-sync-alt\" style={littleEditBtn}\n                        onClick={toggleState}  \n                        />\n                </label>\n                <form>\n                    <TextArea value={condition.description} name=\"desc\"\n                    rows={getRowHeight(condition.description)}\n                    style={input} \n                    />\n                    </form>\n            </Col>\n         )\n        )\n     }\n     const getRowHeight = (text) =>  text.length > 250 ? text.length/100 : 3;\n     \n    \n\n    if ((editState || data.length === 0) && !editDescState) {\n        return (\n            <div className={'mt-5'}>\n                <Col size={'md-12'}>\n                        <Button className=\"fas fa-backspace fa-2x\" style={cancelBtn} \n                        onClick={toggleState} />\n                </Col>\n            <form onSubmit={formSubmit} >\n                 <div className=\"form-row\" style={{background:'white'}}>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Add New Condition</label>\n                        <div>\n                            <Input type=\"text\"\n                            style={input}\n                            value={text}\n                            onChange={target} \n                            />\n                            {renderSuggestions()}\n                        </div>\n                    </Col>\n                        <Col size={'md-3'}>\n                        <Button className=\"btn\" style={addBtn}\n                         type=\"submit\" > <i className=\"fa fa-plus fa-2x mr-2\"/> \n                            {' '} Add \n                        </Button>\n                    </Col>\n                </div>\n                <div className={\"form-row\"}>\n\n                    {renderAddConditions(data)}\n                    \n                </div>\n            </form>\n            </div>\n        )\n        } else if (editDescState) {\n        return (\n            <div className={'mt-5'}>\n            <Col size={'md-12'}>\n                    <Button className=\"fas fa-backspace fa-2x\" style={cancelBtn} \n                    onClick={toggleState} />\n            </Col>\n            <form onSubmit={formSubmit} >\n                <div className=\"form-row\" style={{background:'white'}}>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Add New Condition</label>\n                        <div>\n                            <Input type=\"text\"\n                            style={input}\n                            value={text}\n                            onChange={target} \n                            />\n                            {renderSuggestions()}\n                        </div>\n                    </Col>\n                        <Col size={'md-3'}>\n                        <Button className=\"btn\" style={addBtn}\n                        type=\"submit\" > <i className=\"fa fa-plus fa-2x mr-2\"/> \n                            {' '} Add \n                        </Button>\n                    </Col>\n            </div>\n                <div className={\"form-row\"}>\n                   \n                {renderEditConditions(data)}\n\n                </div>\n            </form>\n        </div>\n        )\n    } else {\n        return (\n        <div className={'mt-5 condition-info'}>\n            <Col size={'md-12'} classes={'condition-edit'}>\n                <Button className=\"fas fa-user-edit fa-2x\" style={editBtn} \n                    onClick={toggleState} \n                />   \n            </Col>\n            <form>\n                <div className={\"form-row\"}>\n                   \n                {renderConditions(data)}\n\n                </div>\n            </form>\n        </div>\n        )\n    }\n\n    }\nconst fieldText = {\n    fontStyle: 'italic',\n    fontWeight: '1000',\n    fontSize: '100%',\n    padding: '10px',\n    paddingLeft: '0',\n    color: 'black'\n},\n\ntextarea = {\n    height: '5px',\n    resize: 'none',\n    overflow: 'hidden',\n    minHeight: '50px',\n    borderBottom: '1px solid rgba(0, 0, 0, .2)',\n    transition: 'all 0.30s ease-in-out'\n},\n\ninput = {\n    borderBottom: '1px solid rgba(0, 0, 0, .2)',\n    transition: 'all 0.30s ease-in-out'\n},\n\neditBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'white',\n    backgroundColor: 'white'\n},\ncancelBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'tomato',\n    backgroundColor: 'white'\n},\naddBtn = {\n    marginTop: '30px',\n    color: '#214c91',\n    focus: 'none',\n    size: '10em'\n},\nlittleEditBtn = {\n    border: 'none',\n    color: '#214c91'\n},\nremoveBtn = {\n    border: 'none',\n    color: 'red'\n}\n","import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { Input } from '../../components/Forms';\nimport { ContactCard } from '../../components/ContactCard';\nimport { HealthCard } from '../../components/HealthCard';\nimport { Conditions } from '../../components/Conditions';\nimport API from '../../utils/API';\n\nexport default function EHR({ usrId }) {\n\n    const [ generalInfo, setGeneralInfo ] = useState({\n        // first_name: 'Anne',\n        // last_name: 'Frank',\n        // nickname: 'Mrs. Quack',\n        // address_one: '555 Somewhere',\n        // address_two: 'Apt 7',\n        // city: 'Frankfurt',\n        // state: 'Darmstadt',\n        // zip: '12345',\n        // country: 'Germany',\n        // phone: '(264) 224-1234',\n        // email: 'quacky123@gmail.com'\n    }),\n     [ healthInfo, setHealthInfo ] = useState({\n        // dob: '06/12/1929',\n        // bloodType: 'A-Negative',\n        // insurance: 'Keystone POS Flex',\n        // insNumber: 'QCG130515482-01',\n        // rxBin: '123456',\n        // rxPcn: '060503900',\n        // allergies: 'Peanuts, Shellfish, People',\n        // immunizations: 'HPV on 5/16/2018',\n        // notes: 'Breast Cancer!!  Patient likes talk a lot.',\n    }),\n        [ conditions, setConditions ] = useState([\n\n        ]),\n        [ editGenState, setGenState ]= useState(false),\n        [ editHealthState, setHealthState ]= useState(false),\n        [ editConditState, setConditState ]= useState(false),\n        [ descEditState, setDescEditState ]= useState(false),\n        [ conditSuggestions, setConditSuggestions ]= useState([]),\n        [ conditionSearch, setConditionSearch ]= useState('');\n    \n\n    const onGenInfoInputChange = e => {\n        const { name, value } = e.target;\n        setGeneralInfo({...generalInfo, [name]: value })\n        loadProfiles();\n    }, \n    \n    onConditInputChange = async e => {\n\n      const { value } = e.target,\n       items = await getConditionNames(value);\n      let suggestions = [];\n       \n      if (value.length > 0) {\n          const regex = new RegExp(`^${value}`, 'i');\n          suggestions = items.sort().filter( x => regex.test(x));\n        } \n        setConditSuggestions({ suggestions, text: value })\n     },\n\n     getConditionNames = async(search) => {\n        const { data } = await API.getConditionNames(search);\n        return  data[3].map( x => x[0] );\n    },\n\n    selectSuggestedCondit = value => {\n        setConditSuggestions({ suggestions: [], text: value })\n    },\n\n    renderConditSuggestions = () => {\n        const { suggestions } = conditSuggestions;\n        \n        if (!suggestions || suggestions.length === 0) {\n            return;\n        }\n        return (\n            <ul>\n                {suggestions.map( (suggestion, i) => <li onClick={() => selectSuggestedCondit(suggestion)} key={i}>{suggestion}</li>)}\n            </ul>\n        )\n    },\n\n    onHealthInfoInputChange = e => {\n        const { name, value } = e.target;\n        setHealthInfo({...healthInfo, [name]: value })\n    }, \n\n    onConditionSearchChange = e => {\n        const { name, value } = e.target;\n        setConditionSearch({...conditionSearch, [name]: value })\n    }, \n\n    updateDB = e => {\n        e.preventDefault()\n          API.updateEHR(usrId, generalInfo)\n          .then( data => {\n              if (data.status === 'success') {\n                console.log('Updated record!', 'green')\n             } else  {\n                console.log('Fail to update record.', 'red')\n             }  \n          })\n    },\n\n    addCondition = async e =>  {\n        e.preventDefault();\n        setConditSuggestions([]);\n        e.target.reset();\n\n        const { text } = conditSuggestions;\n            if (!text) {\n              return;\n            }\n        const [ search ] = text.split('-'),\n                { data } = await API.fetchCondition(search),\n\n           description = data[0].shortdef ? data[0].shortdef.join('\\n') : '';\n\n        setConditions([...conditions, {name: text, description}])\n    }\n\n\n    useEffect(() => {   \n        loadProfiles()\n    }, []);\n\n    function loadProfiles() {\n        API.fetchProfile()\n          .then(res => \n            // setGeneralInfo(res.data)\n            console.log(res.data)\n          )\n          .catch(err => console.log(err));\n      };\n\n    return (\n        <Container>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <ContactCard\n                        toggleState={() => setGenState(!editGenState)} \n                        editState={editGenState} \n                        data={generalInfo}\n                        target={onGenInfoInputChange}\n                        formSubmit={updateDB}\n                        />\n                </Col>\n           </Row>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <HealthCard \n                        toggleState={() => setHealthState(!editHealthState)}\n                        editState={editHealthState} \n                        data={healthInfo}\n                        target={onHealthInfoInputChange}\n                        formSubmit={updateDB}\n                    />\n                </Col>\n           </Row>\n           <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <Conditions\n                        toggleState={() => setConditState(!editConditState)}\n                        editState={editConditState} \n                        toggleDescState={() => setDescEditState(!descEditState)}\n                        editDescState={descEditState} \n                        data={conditions}\n                        target={onConditInputChange}\n                        renderSuggestions={renderConditSuggestions}\n                        text={conditSuggestions.text}\n                        formSubmit={addCondition}\n                      />\n                </Col>\n           </Row>\n        </Container>\n    )\n}\n\n","import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from '../../components/Grid';\nimport \"./Medications.css\";\nimport API from \"../../utils/API\";\n\nfunction Medications() {\n    const [drugs, setDrugs] = useState([])\n\n    //load all drugs and store them \n    useEffect(() => {\n        loadDrugs()\n    }, [])\n\n    //loads all drugs and set them to drugs... needs to be fixed later so that there's one to load drugs and then one for the btn (modal?)\n    function loadDrugs() {\n        API.getDrugInfo()\n            .then(res =>\n                console.log(res.data)\n            )\n            .catch(err => console.log(err));\n    };\n\n    return ( \n        <Container>\n    <div class=\"table-responsive\">\n                <table class=\"table\">\n                    <tbody>\n                            <tr class=\"accordion-toggle collapsed\" id=\"accordion1\" data-toggle=\"collapse\" data-parent=\"#accordion1\" href=\"#collapseOne\">\n                                <td class=\"expand-button\"></td>\n                                <td>Amlodipine</td>\n\n                            </tr>\n                            <tr class=\"hide-table-padding\">\n                            <td></td>\n                            <td colspan=\"3\">\n                            <div id=\"collapseOne\" class=\"collapse in p-3\">\n                            <div class=\"row\">\n                                <div class=\"col-2\">Pill Description</div>\n                                <div class=\"col-6\">value 1</div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-2\">Dosage</div>\n                                <div class=\"col-6\">value 2</div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-2\">Frequency</div>\n                                <div class=\"col-6\">value 3</div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-2\">Reason</div>\n                                <div class=\"col-6\">value 4</div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-2\">Pharmacy</div>\n                                <div class=\"col-6\">value 3</div>\n                            </div>\n                            </div></td>\n                            </tr>\n                            <tr class=\"accordion-toggle collapsed\" id=\"accordion1\" data-toggle=\"collapse\" data-parent=\"#accordion1\" href=\"#collapseOne\">\n                                <td class=\"expand-button\"></td>\n                                <td>Metformin</td>\n\n                            </tr>\n                            <tr class=\"hide-table-padding\">\n                            <td></td>\n                            <td colspan=\"3\">\n                            <div id=\"collapseOne\" class=\"collapse in p-3\">\n                            <div class=\"row\">\n                                <div class=\"col-2\">Drug Code</div>\n                                <div class=\"col-6\">value 1</div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-2\">Dosage</div>\n                                <div class=\"col-6\">value 2</div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-2\">Frequency</div>\n                                <div class=\"col-6\">value 3</div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-2\">Reason</div>\n                                <div class=\"col-6\">value 4</div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-2\">Pharmacy</div>\n                                <div class=\"col-6\">value 3</div>\n                            </div>\n                            </div></td>\n                            </tr>\n                        </tbody>\n                </table>\n                </div>\n            </Container>\n    );\n}\n\nexport default Medications;","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nexport default function Profiles({name}) {\n\n\n    return (\n        <Link to='/ehr' style={{textDecoration: 'none'}} >\n            <div className=\"card box-shadow mt-5\">\n            <div className=\"card-body text-center\">\n                <h2 className=\"card-title\">{name}</h2>\n                <p className=\"card-text\"> Access First_Name's information here</p>\n            </div>\n            </div>\n        </Link>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col } from '../../components/Grid';\nimport Profiles from '../../components/ProfileList'; \nimport API from \"../../utils/API\";\n\nexport default function Profile() {\n\n    const [user, setUser] = useState();\n    const [patients, setPatients] = useState();\n\n    useEffect(() => {\n        getUser()\n    }, [])\n\n    useEffect(() => {\n        getPatients()\n    }, [user])\n\n\n    const getUser = async () => {\n        \n        const { user } = await API.fetchUser()\n        setUser(user)\n    }\n\n    const getPatients = async () => {\n        \n        // const { data } = await API.fetchAccount()\n\n            /* code here depends on schema but something like... */\n            // const clients = data.patients;\n            // setPatients(clients)\n    }\n            \n\n\n    return (\n        <Container>\n            <Row>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <Profiles props={patients} name={\"User's Name\"} />\n                    <Profiles name={\"First Care Recipient\"} />\n                    <Profiles name={\"Second Care Recipient\"} />\n                </Col>\n           </Row>\n        \n            <br></br>\n            <div>\n            <button type=\"button\" class=\"btn\" href='../UserInfo'>Add Profile</button>\n            </div>\n        </Container>\n    )\n}\n","import React, {useState} from 'react'\nimport { Link, useLocation as location } from 'react-router-dom'\nimport { Button } from '../Forms'\nimport { Collapse } from '../Grid'\n\nexport default function navBar() {\n\n    let [navLinks, showNavLinks] = useState(false)\n\n    const toggleNav = () => showNavLinks(navLinks = !navLinks)\n\n    const { pathname } = location();\n\n    return (\n        <nav className={'navbar navbar-expand-lg navbar-light bg-light'}>\n            <Link to='/' className={'navbar-brand'}><em>my</em>ERH</Link>\n            <button onClick={toggleNav} className={'navbar-toggler'} type=\"button\" data-toggle=\"collapse\" data-target=\"#target-collapse\" >\n            <span className=\"navbar-toggler-icon\"></span>\n            </button>\n                \n\n            <Collapse navState={navLinks} id={'target-collapse'}>\n              <ul className=\"navbar-nav mr-auto\">\n                <li className={pathname === \"/\" ? \"nav-item active\" : \"nav-item\"}>\n                    <Link to=\"/\" className={'nav-link'}>\n                        Home\n                    </Link>    \n                </li>\n                <li className={pathname === \"/profiles\" ? \"nav-item active\" : \"nav-item\"}>\n                    <Link to=\"/profiles\" className={'nav-link'}>\n                        profiles\n                    </Link>    \n                </li>\n                <li className={pathname === \"/ehr\" ? \"nav-item active\" : \"nav-item\"}>\n                    <Link to=\"/ehr\" className={'nav-link'}>\n                        health record\n                    </Link>    \n                </li>\n                <li className={pathname === \"/contacts\" ? \"nav-item active\" : \"nav-item\"}>\n                    <Link to=\"/contacts\" className={'nav-link'}>\n                        contacts\n                    </Link>    \n                </li>\n              </ul>\n                <div>\n                    <Link to='/signin' >\n                        <Button className={'btn btn-outline-primary m-2'} type='button'>\n                            Log In\n                         </Button>\n                    </Link>\n                    <Link to='/signup' >\n                        <Button className={'btn btn-outline-primary m-2'} type='button'>\n                            Sign Up\n                         </Button>\n                    </Link>\n\n               \n                </div>\n            </Collapse>\n        </nav>\n    )\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Landing from \"./pages/Landing\";\nimport SignIn from \"./pages/SignIn\";\nimport SignUp from \"./pages/SignUp\";\nimport EHR from \"./pages/EHR\";\nimport Medications from \"./pages/Medications\";\nimport Profiles from \"./pages/Profiles\";\nimport NavBar from './components/Navbar';\nimport './assets/css/bootstrap.min.css'\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <NavBar />\n        <Route exact path=\"/\"> <Landing /> </Route>\n        <Route exact path=\"/signIn\"> <SignIn /> </Route>\n        <Route exact path=\"/signUp\"> <SignUp /> </Route>\n        <Route exact path=\"/profiles\"> <Profiles /> </Route>\n        <Route exact path=\"/ehr\"> <EHR /> </Route>\n        <Route exact path=\"/medications\"> <Medications /> </Route>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nrequire('dotenv').config();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}