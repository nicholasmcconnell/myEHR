{"version":3,"sources":["assets/img/Logo.png","assets/img/backgroundImage2.jpg","components/Grid/index.js","pages/Landing/Landing.js","components/Forms/index.js","utils/API.js","Auth.js","pages/SignIn/SignIn.js","pages/SignUp/SignUp.js","components/PatientList/index.js","components/PatientHandler/index.js","pages/Patients/Patients.js","utils/CustomHooks.js","utils/PatientContext.js","components/GeneralInfo/index.js","components/HealthCard/index.js","components/Conditions/index.js","components/Medications/index.js","components/NewContact/index.js","components/Contacts/index.js","pages/EHR/EHR.js","pages/Contacts/Contacts.js","components/Navbar/index.js","ProtectedRoute.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Container","_ref","classes","children","react_default","a","createElement","className","concat","Row","_ref2","Col","_ref3","size","split","map","join","Collapse","_ref4","navState","id","Landing","style","background","Grid_Container","Grid_Row","Grid_Col","logo","src","require","alt","react_router_dom","to","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","width","height","float","Input","props","Object","assign","TextArea","Button","LoggerBtn","btnType","type","API","fetchPatient","axios","get","fetchPatients","email","addPatient","data","post","removePatient","delete","updateEHR","patch","getUser","then","register","credentials","login","getConditionNames","search","fetchCondition","process","getMedNames","fetchMeds","src_Auth","Auth","classCallCheck","this","authenticated","cb","SignIn","history","useHistory","_useState","useState","_useState2","slicedToArray","setCredentials","onInputChange","e","_e$target","target","name","value","objectSpread","defineProperty","text","onSubmit","preventDefault","reset","status","push","console","log","catch","err","onChange","placeholder","margin","color","textShadow","SignUp","statusText","PatientList","patient","context","removeState","confirmRemoval","remove","index","patientData","healthData","_id","firstName","nickname","removable","onClick","bind","textDecoration","toggleBtn","pathname","state","patientId","border","backgroundColor","PatientHandler","toggleRemoveState","confirmed","cancel","Patients","setContext","patients","setPatients","_useState3","_useState4","setRemoveState","_useState5","_useState6","isConfirmed","useEffect","getPatients","asyncToGenerator","regenerator_default","mark","_callee","_yield$API$getUser","wrap","_context","prev","next","sent","user","stop","apply","arguments","_callee2","_context2","_x","togglePatientAsRemovable","clone","i","key","forEach","item","useForceUpdate","setValue","createContext","GeneralInfo","editState","toggleState","formSubmit","input","lastName","addressOne","addressTwo","city","zip","country","phone","updtBtn","fieldText","fontStyle","fontWeight","padding","borderBottom","transition","HealthCard","bloodType","gender","getAge","DOB","today","Date","birthDate","month","getMonth","age","getFullYear","isNaN","getDate","dob","selected","insurance","insNumber","rxBin","rxPcn","allergies","immunizations","notes","Conditions","areaTarget","renderSuggestions","toggleDescState","editDescState","getRowHeight","length","renderEditConditions","conditions","_this","sort","b","createdAt","condition","edit","editBtn","littleEditBtn","description","rows","textarea","removeBtn","addBtn","autoComplete","resize","marginTop","focus","Medications","addDoses","otherDosage","doseChoices","littlePointBtn","onBlur","doses","includes","defaultValue","dose","renderDoses","meds","med","medication","dosage","renderEditMeds","NewContact","cancelBtn","saveBtn","Contacts","newContact","toggleNew","newTarget","formatPhoneNumberLink","number","replace","contacts","_this2","contact","office","primaryPhone","primaryExt","secondaryPhone","secondaryExt","fax","website","display","href","rel","renderContacts","nextContact","getNewContact","EHR","location","_useContext","useContext","PatientContext","setPatient","generalInfo","setGeneralInfo","healthInfo","setHealthInfo","_useState7","_useState8","setConditions","_useState9","_useState10","setMeds","_useState11","_useState12","setContacts","_useState13","_useState14","medInput","setMedInput","_useState15","_useState16","setNewContact","_useState17","_useState18","addContact","setAddContact","_useState19","_useState20","editGenState","setGenState","_useState21","_useState22","editHealthState","setHealthState","_useState23","_useState24","editConditState","setConditState","_useState25","_useState26","editMedsState","setMedsState","_useState27","_useState28","conditSuggestions","setConditSuggestions","_useState29","_useState30","medSuggestions","setMedSuggestions","_useState31","_useState32","setDoses","_useState33","_useState34","query","setQuery","forceUpdate","hasConditions","useRef","hasMeds","hasContacts","isInitialMount","current","getPatient","updateDB","_yield$API$fetchPatie","newPatient","healthConditions","medications","setParity","_yield$API$addPatient","parity","setNameInNavbar","onConditInputChange","_callee3","items","suggestions","regex","_context3","RegExp","filter","x","test","timeOutId","setTimeout","clearTimeout","onMedInputChange","_ref5","_callee4","_e$target4","_context4","slice","t0","abrupt","_x2","addCondition","_ref6","_callee5","_text$split","_text$split2","_yield$API$fetchCondi","newCondition","_context5","shortdef","capitalizeWord","now","toConsumableArray","_x3","word","char","toUpperCase","_ref7","_callee6","_yield$API$getConditi","_context6","_x4","_ref8","_callee7","_yield$API$getMedName","_context7","displayTermsList","term","_x5","selectSuggestedCondit","_ref9","_callee8","_value$split","_value$split2","_yield$API$fetchCondi2","_context8","_x6","selectSuggestedMed","_ref10","_callee9","_yield$API$fetchMeds","_doses","_context9","drugGroup","conceptGroup","conceptProperties","synonym","_x7","_ref11","_callee10","_yield$API$fetchMeds2","_doses2","_context10","_x8","_e$target2","arr","splice","newDescription","suggestion","newMed","_e$target5","_i","_Object$keys","keys","hasOwnProperty","_e$target3","list","navBar","navLinks","showNavLinks","useLocation","logout","data-toggle","data-target","Grid_Collapse","isAuthenticated","ProtectedRoute","Component","component","rest","objectWithoutProperties","react_router","render","from","App","Provider","setPatientContext","path","exact","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","App_App","document","getElementById","URL","origin","addEventListener","fetch","response","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8e7b5d2c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.76d8cd68.png\";","module.exports = __webpack_public_path__ + \"static/media/backgroundImage2.f82817c2.jpg\";","import React from 'react'\n\n        \nexport const Container = ({ classes, children }) => <div className={`container ${classes}`}>{children}</div>\n\nexport const Row = ({ classes, children }) => <div className={`row ${classes}`}>{children}</div>\n\nexport const Col = ({ size, classes, children }) => {\n    return ( <div \n        className={size.split(' ').map( size => `col-${size}`).join(' ')\n        +\" \"+ classes}>{children}</div>\n    )\n}\n\nexport const Collapse = ({ navState, children, id }) => { \n    const classes = navState ? 'navbar-collapse collapse show' : 'navbar-collapse collapse';\n\n     return <div className={classes} id={id}>{children}</div>\n}","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col } from '../../components/Grid';\n\nexport default function Landing() {\n\n    return (\n        <div\n            style={background}\n        >\n            <Container>\n                <Row>\n                    <Col size={'md-8'} classes={'offset-md-2'}>\n                        <div className=\"jumbotron mt-5\">\n                                 <img\n                                    style={logo}\n                                    src={require(\"../../assets/img/Logo.png\")}\n                                    alt={\"Logo\"}\n                                />\n                            <h1 className=\"display-4\"><em>My</em> EHR</h1>\n                            <p className=\"lead\">All the medical records you need in one, simple place.</p>\n                            <hr className=\"my-4\" />\n                       \n                            <Link to=\"/signup\" className=\"btn btn-primary btn-lg\">Get Started</Link>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nconst background = {\n    backgroundImage: `url(${require(\"../../assets/img/backgroundImage2.jpg\")}`,\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    width: '100vw',\n    height: '100vh'\n},\nlogo = {\n    width: \"60px\",\n    height: \"auto\",\n    float: 'right'\n}","import React from 'react'\n\n\n\nexport function Input(props) {\n    return (\n        <input className=\"form-control\" {...props} />\n    );\n  }\n  \nexport function TextArea(props) {\n    return (\n        <textarea className=\"form-control\" {...props} />\n    );\n  }\n\nexport function Button(props) {\n    return (\n        <button {...props} >\n          {props.children}\n        </button>\n    );\n  }\n  export function LoggerBtn({ btnType }) { \n    \n      return (\n        <Button className={'btn btn-primary btn-lg btn-block'} \n        type=\"submit\">\n          {btnType}\n        </Button>\n      )\n  }\n","import axios from \"axios\";\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nexport default {\n    fetchPatient: id => axios.get(`/api/patients/${id}`),\n\n    fetchPatients: email => axios.get(\"/api/patients/load\", email),\n\n    addPatient: data => axios.post(\"/api/patients/add\", data),\n\n    removePatient: id => axios.delete(`/api/patients/${id}`),\n\n    updateEHR: (id, data) => axios.patch(`/api/patients/${id}`, data),\n\n    getUser: () => axios.get('/api/users').then(data => data),\n\n    register: credentials =>  axios.post('api/users/register', credentials),\n  \n    login: credentials => axios.post('/api/users/login', credentials),\n\n/*\n    External APIs\n*/ \n    getConditionNames: search => axios.get(`https://clinicaltables.nlm.nih.gov/api/conditions/v3/search?terms=${search}&sf=primary_name,consumer_name&df=primary_name,consumer_name,info_link_data`),\n    \n    fetchCondition: search => axios.get(`https://www.dictionaryapi.com/api/v3/references/medical/json/${search}?key=${apiKey}`),\n\n    getMedNames: () => axios.get('https://rxnav.nlm.nih.gov/REST/displaynames'),\n\n    fetchMeds: search => axios.get(`https://rxnav.nlm.nih.gov/REST/drugs.json?name=${search}`)\n}","\nclass Auth {\n\n   constructor() {\n       this.authenticated = false;\n   }\n    login(cb) {\n        this.authenticated = true\n        cb()\n    }\n    logout(cb) {\n        this.authenticated = false\n        cb()\n    }\n    isAuthenticated() {\n        return this.authenticated;\n    }\n}\n\nexport default new Auth();","import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { LoggerBtn, Input } from '../../components/Forms';\nimport API from '../../utils/API';\nimport Auth from '../../Auth'\n\nexport default function SignIn() {\n\n    let history = useHistory();\n    const [credentials, setCredentials] = useState({}),\n\n        onInputChange = e => {\n            const { name, value } = e.target;\n            setCredentials({ ...credentials, [name]: value })\n        },\n\n        authorize = () => {\n            Auth.login(() => {\n                history.push(\"/patients\")\n            })\n        },\n\n        handleSubmit = e => {\n            e.preventDefault();\n            e.target.reset();\n\n            API.login(credentials)\n                .then(({ data }) => {\n                    if (data.status === 'success') {\n                        authorize()\n                    } else {\n                        console.log('Login failed.  Please try again.')\n                    }\n                }).catch(err => err)\n        }\n\n    return (\n        <div\n            style={background}\n        >\n\n        <Container>\n            <Row classes=\"justify-content-center\">\n                <Col size={'md-12'} classes='box-shadow sign' >\n                    <Row>\n                        <div className={'mt-5'}>\n                            <h5 style={text}>\n                                <img \n                                style={logo} \n                                src={require('../../assets/img/Logo.png')} \n                                alt={'Logo'} />\n                                Log-in to your account\n                            </h5>\n                        </div>\n                    </Row>\n                    <Row >\n                        <form onSubmit={handleSubmit} className={'card-body'}>\n                            <div className={'form-group usr-inpt'}>\n                                <label>Email:</label>\n                                <span className=\"fa fa-user\" />\n                                <Input onChange={onInputChange}\n                                    name=\"email\" type=\"email\" placeholder=\"E-mail address\" />\n                            </div>\n                            <div className={'form-group usr-inpt'}>\n                                <label>Password:</label>\n                                <span className=\"fa fa-lock\" />\n                                <Input onChange={onInputChange}\n                                    name=\"password\" type=\"password\" placeholder=\"Password\" />\n                            </div>\n\n                            <LoggerBtn btnType={'log in'} />\n                        </form>\n                    </Row>\n                    <Row classes={'justify-content-center'}>\n                        <p> New here?\n                        <Link to=\"/signup\" > Sign up.</Link>\n                        </p>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n\n        </div>\n    )\n}\nconst  background = {\n    backgroundImage: `url(${require(\"../../assets/img/backgroundImage2.jpg\")}`,\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    width: '100vw',\n    height: '100vh'\n},\n\nlogo = {\n    width: \"60px\",\n    height: \"auto\",\n    margin: \"15px\"\n},\n\ntext = {\n    color: \"#0099ff\",\n    textShadow: \"1px 1px #000\"\n}\n","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Container, Row, Col } from \"../../components/Grid\";\nimport { LoggerBtn, Input } from \"../../components/Forms\";\nimport API from \"../../utils/API\";\nimport Auth from \"../../Auth\";\n\nexport default function SignUp() {\n\n    let history = useHistory();\n    const [credentials, setCredentials] = useState({}),\n\n    onInputChange = e => {\n        const { name, value } = e.target;\n        setCredentials({ ...credentials, [name]: value });\n    },\n\n    authorize = () => {\n        Auth.login(() => {\n            history.push(\"/patients\");\n        });\n    },\n\n    handleSubmit = e => {\n        e.preventDefault();\n        e.target.reset();\n\n        try {\n            API.register(credentials)\n                .then(({ statusText }) => {\n                    if (statusText === 'OK') {\n                        API.login(credentials)\n                            .then(({ data }) => {\n                                if (data.status === 'success') {\n                                    authorize()\n                                }\n                            })\n                    }\n                })\n        } catch (err) { console.log(err) }\n    }\n    return (\n        <div\n            style={background}\n        >\n        <Container>\n            <Row classes=\"justify-content-center\">\n                <Col size={\"md-12\"} classes={\"box-shadow sign\"}>\n                    <Row >\n                        <div className={\"mt-5\"}>\n                            <h5 style={text}>\n                                <img\n                                    style={logo}\n                                    src={require(\"../../assets/img/Logo.png\")}\n                                    alt={\"Logo\"}\n                                />\n                                Create your account\n                            </h5>\n                        </div>\n                    </Row>\n                    <Row>\n                        <form onSubmit={handleSubmit} className={\"card-body\"}>\n                            <div className={\"form-group usr-inpt\"}>\n                                <label>Email:</label>\n                                <span className=\"fa fa-user\" />\n                                <Input\n                                    onChange={onInputChange}\n                                    name=\"email\"\n                                    type=\"email\"\n                                    placeholder=\"E-mail address\"\n                                />\n                            </div>\n                            <div className={\"form-group usr-inpt\"}>\n                                <label>Password:</label>\n                                <span className=\"fa fa-lock\" />\n                                <Input\n                                    onChange={onInputChange}\n                                    name=\"password\"\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                />\n                            </div>\n\n                            <LoggerBtn btnType={\"Sign Up\"} />\n                        </form>\n                    </Row>\n                    <Row classes={\"justify-content-center\"}>\n                        <p>\n                            Already have an account?\n                            <Link to=\"/SignIn\"> Log In.</Link>\n                        </p>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    </div>\n    );\n}\nconst  background = {\n    backgroundImage: `url(${require(\"../../assets/img/backgroundImage2.jpg\")}`,\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    width: '100vw',\n    height: '100vh'\n},\n\nlogo = {\n    width: \"60px\",\n    height: \"auto\",\n    margin: '15px'\n},\n\ntext = {\n    color: \"#0099ff\",\n    textShadow: \"1px 1px #000\"\n}","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { Col, Row } from '../Grid';\n\n\nexport function PatientList({ patient, context, removeState, confirmRemoval, remove, index }) {\n\n    const { patientData, healthData, _id } = patient\n     \n    //keep invalid or corrupt data away from the EHR page.\n    if(!patientData || !healthData){\n        return <div></div>\n    }\n    const { firstName, nickname } = patientData;\n\n    let name;\n      if (firstName || nickname) {\n          name = (nickname && nickname !== '') ? nickname : firstName;\n        } else {\n            name = \"\"\n    }\n\n    if (removeState) {\n        if(patient.removable) {\n    return (\n        <div className={'patient-remove'}>\n        <Link to='/patients'\n            onClick={remove.bind(this, _id)}  \n            style={{textDecoration: 'none'}}\n            >\n            <div className=\"card box-shadow mt-5\">\n                <div className=\"card-body text-center btn btn-outline-danger\">\n                <Row >\n                <Col size={\"md-4\"}>\n                        <i className=\"fas fa-user-times fa-4x rm-lg-user\" />   \n                    </Col>\n                    <Col size ={\"md-8\"}> \n                        <h2 className=\"card-title\">Please Confirm</h2>\n                        <p className=\"card-text\"> \n                            This will remove {name !== '' ? name : 'this patient'} from your list.\n                        </p>\n                    </Col>\n                </Row>\n                </div>\n            </div>\n        </Link>\n         </div>\n    )}\n        else {\n    return (\n        <div className={'patient-remove'}>\n        <Link to='/patients'\n            onClick={confirmRemoval.bind(this, index)}  \n            style={{textDecoration: 'none'}}\n            >\n            <div className=\"card box-shadow mt-5\">\n                <div className=\"card-body text-center\">\n                <Row >\n                    <Col size ={\"md-2\"}></Col>\n                    <Col size ={\"md-8\"}> \n                        <h2 className=\"card-title\">Remove {name === '' ? 'this patient' : name}</h2>\n                        <p className=\"card-text\"> \n                            Delete {name !== '' ? name : 'this patient'} from your patient list?\n                        </p>\n                    </Col>\n                    <Col size={\"md-2\"}>\n                        <i className=\"fas fa-user-times fa-2x rm-sm-user\" style={toggleBtn} \n                        />   \n                    </Col>\n                </Row>\n                </div>\n            </div>\n        </Link>\n         </div>\n    )}\n    }\n    return (\n        <Link to={{\n            pathname:'/ehr',\n            state: { patientId: _id, name }\n        }}\n            onClick={()=>{context({ patientId: _id, name })}}  //set patientContext as universal variable.  \n            style={{textDecoration: 'none'}}\n            >\n            <div className=\"card box-shadow mt-5\">\n                <div className=\"card-body text-center\">\n                    <h2 className=\"card-title\">{name === '' ? 'name this patient' : name}</h2>\n                    <p className=\"card-text\"> \n                        Access {name !== '' ? name : 'this patient'}'s information here.\n                    </p>\n                </div>\n            </div>\n        </Link>\n    )\n}\n\nconst toggleBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'white',\n    backgroundColor: 'white'\n}","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport {  Button } from \"../../components/Forms\";\n\n\nexport function PatientHandler({ removeState, toggleRemoveState, confirmed, cancel }) {\n\n    if (removeState) {\n      if (confirmed) {\n        return (\n              <div className={\"remove\"}>\n                <Button\n                  className=\"btn minus\"\n                  style={removeState ? { float: \"left\", color: \"tomato\"} : {float: \"left\"}}\n                  onClick={cancel}\n                >\n                  <i className=\"fas fa-hand-point-right\" /> last chance to cancel\n                </Button>\n              </div>\n            );\n          } else {\n        return (\n              <div className={\"remove\"}>\n                <Button\n                  className=\"btn minus\"\n                  style={removeState ? { float: \"left\", color: \"tomato\"} : {float: \"left\"}}\n                  onClick={() => {\n                    toggleRemoveState(!removeState);\n                  }}\n                >\n                  <i className=\"fas fa-ban\" /> Cancel\n                </Button>\n              </div>\n            );\n          } \n        }else {\n            return (\n              <div>\n                <div className={\"add\"}>\n                  <Link to={{\n                 pathname:'/ehr',\n                 state: { patientId:\"\" }\n                }} \n                    className=\"btn plus\"\n                    style={{ float: \"right\" }}\n                  >\n                    <i className=\"fas fa-user-plus\"></i> New Patient\n                  </Link>\n                  </div>\n                  <div className={\"remove\"}>\n                    <Button className=\"btn minus\"\n                      style={{ float: \"left\" }}\n                      onClick={() => {\n                        toggleRemoveState(!removeState);\n                    }}\n                   >\n                    <i className=\"fas fa-user-minus\"/> Remove Patients\n                  </Button>\n                </div>\n              </div>\n            );\n    }\n}\n\n","import React, { useState, useEffect} from 'react';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { PatientList } from '../../components/PatientList'; \nimport { PatientHandler }  from '../../components/PatientHandler'; \nimport API from \"../../utils/API\";\n\n\nexport default function Patients({ setContext }) {\n\n    const [ patients, setPatients ] = useState([]),\n      [ removeState, setRemoveState ] = useState(false),\n      [ confirmed, isConfirmed ] = useState(false);\n\n    useEffect(() => {\n        getPatients()\n    }, [])\n\n    const getPatients = async () => {\n        const { data } = await API.getUser(),\n   \n          patients = await API.fetchPatients(data.user);\n\n        setPatients(patients.data);\n    },\n\n    removePatient = async _id => {\n       await API.removePatient(_id)\n\n       setRemoveState(false)\n       getPatients()\n    },\n\n    togglePatientAsRemovable = index => {\n        const clone = patients;\n        \n        clone[index].removable = !clone[index].removable\n        \n        isConfirmed(true)\n        setPatients(clone)\n    },\n\n    cancelPatientRemoval = () => {\n        const clone = patients;\n        \n        clone.forEach( item => {\n            item.removable = false\n        })\n        isConfirmed(false)\n        setRemoveState(false)\n        setPatients(clone)\n    }\n\n\n    return (\n        <Container>\n            <Row>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    {\n                        patients.map( (patient, i) => \n                            <PatientList \n                            patient={patient} \n                            index={i} \n                            context={setContext}  \n                            removeState={removeState}\n                            confirmRemoval={togglePatientAsRemovable}\n                            remove={removePatient}\n                            key={patient._id} \n                            />)\n                    }\n                    <PatientHandler \n                        removeState={removeState}\n                        confirmed={confirmed}\n                        cancel={cancelPatientRemoval}\n                        toggleRemoveState={() => {setRemoveState(!removeState)}} \n                        />\n                </Col>\n           </Row>\n        </Container>\n    )\n}\n","import { useState, useEffect, useRef } from 'react';\n\n\n//used track previous states for comparison purposes. ex use:  previousItem = usePrevious(itemInput.property),\n export const usePrevious = value => {\n\n        const ref = useRef();\n\n        useEffect(() => {\n        ref.current = value;\n        }, [value]);\n\n    return ref.current;\n}\n\n//force the re-rendering of state.\nexport const useForceUpdate = () => {\n    const [value, setValue] = useState(0); \n    return () => setValue(value => ++value); // update the state to force render\n}","import { createContext } from 'react';\n\nexport default createContext({\n    patientId: '',\n    name: ''\n})\n","import React from 'react'\nimport { Col } from '../Grid';\nimport { Input, Button } from '../Forms';\n\n\nexport function GeneralInfo({ data, target, editState, toggleState, formSubmit, name }) {\n\nif (editState) {\n    return (\n        <div className={'my-5'}>\n        <em><h5 style={{textDecoration: \"underline\"}}>\n            {name ? `${name}'s` : ''} Contact Information:</h5></em>\n        \n          <Col size={'md-12'} classes={\"mt-5\"}>\n                <Button className=\"fas fa-backspace fa-2x\" \n                style={{ ...toggleBtn, color: \"tomato\" }} \n                onClick={toggleState} />\n            </Col>\n            <form onSubmit={formSubmit} >\n                <div className={\"form-row\"}>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>First Name</label>\n                        <Input value={data ? data.firstName : ''} name=\"firstName\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Last Name</label>\n                        <Input value={data ? data.lastName : ''} name=\"lastName\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Nickname</label>\n                        <Input value={data ? data.nickname : ''} name=\"nickname\"\n                        style={input}\n                        placeholder={\"e.g. 'Mom'\"} \n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address Line 1</label>\n                        <Input value={data ? data.addressOne : ''} name=\"addressOne\"\n                        style={input}\n                        onChange={target} \n                        />                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address Line 2</label>\n                        <Input value={data ? data.addressTwo : ''} name=\"addressTwo\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>City</label>\n                        <Input value={data ? data.city : ''} name=\"city\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>State/Providence</label>\n                        <Input value={data ? data.state : ''} name=\"state\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Zip/Postal Code</label>\n                        <Input value={data ? data.zip : ''} name=\"zip\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Country</label>\n                        <Input value={data ? data.country : ''} name=\"country\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                    <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Phone Number</label>\n                        <Input value={data ? data.phone : ''} name=\"phone\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Email</label>\n                        <Input value={data ? data.email : ''} name=\"email\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    </div>\n                <Col size={'md-12'}>\n                <Button className=\"btn\" style={updtBtn} \n                    type=\"submit\" > <i className=\"fas fa-sync-alt mr-2\"/> {' '}  \n                        {' '} update \n                    </Button>\n                </Col>\n            </form>\n        </div>\n    )\n    } else {\n        return (\n            <div className={'my-5 gen-info'}>\n                <em><h5 style={{textDecoration: \"underline\"}}>\n                {name ? `${name}'s` : ''} Contact Information:</h5></em>\n\n                <Col size={'md-12'} classes={'mt-5'}>\n                    <Button className=\"fas fa-user-edit fa-2x\" style={toggleBtn} \n                        onClick={toggleState} \n                    />   \n                </Col>\n            <form>\n                <div className={\"form-row\"}>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>First Name:</label>\n                        <div style={fieldText}>{data.firstName}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Last Name:</label>\n                        <div style={fieldText}>{data.lastName}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Nickname:</label>\n                        <div style={fieldText}>{data.nickname}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address line 1:</label>\n                        <div style={fieldText}>{data.addressOne}</div>\n                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address line 2:</label>\n                        <div style={fieldText}>{data.addressTwo}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>City:</label>\n                        <div style={fieldText}>{data.city}</div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>State/Providence:</label>\n                        <div style={fieldText}>{data.state}</div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Zip/Postal Code:</label>\n                        <div style={fieldText}>{data.zip}</div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Country:</label>\n                        <div style={fieldText}>{data.country}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Phone Number:</label>\n                        <div style={fieldText}>{data.phone}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Email:</label>\n                        <div style={fieldText}>{data.email}</div>\n                    </Col>\n                </div>\n            </form>\n         </div>\n        )\n    }\n}\n\nconst fieldText = {\n    fontStyle: 'italic',\n    fontWeight: '1000',\n    padding: '10px 10px 10px 0',\n    color: 'black'\n},\ntoggleBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'white',\n    backgroundColor: 'white'\n},\nupdtBtn = {\n    float: 'right',\n    margin: '0',\n    backgroundColor: '#214c91',\n    color: 'white',\n    padding: \".4rem .75rem\"\n},\ninput = {\n    borderBottom: '1px solid rgba(0, 0, 0, .2)',\n    transition: 'all 0.30s ease-in-out'\n}","import React from 'react'\nimport { Col } from '../Grid';\nimport { Input, Button, TextArea } from '../Forms';\n\n\nexport function HealthCard({ data, target, editState, toggleState, formSubmit, name }) {\n\n    const getAge = DOB => {\n\n        const today = new Date(),\n         birthDate = new Date(DOB),\n          month = today.getMonth() - birthDate.getMonth();\n        let age = today.getFullYear() - birthDate.getFullYear();\n\n          if(isNaN(age)) return '??'\n            \n    return month < 0 || (month === 0 && today.getDate() < birthDate.getDate()) ? age - 1 : age;\n    },\n\n     getBloodTypes = bloodType => {\n    \n        const types = ['Select', 'Unknown', 'A-Positive', 'A-Negative', 'B-Positive', 'B-Negative', 'AB-Positive', 'AB-Negative', 'O-Positive', 'O-Negative']\n    \n    return types.map( type => type === bloodType ? <option value={bloodType} selected>{bloodType}</option> : <option>{type}</option>)\n     },\n\n     getGenders = gender => {\n    \n        const types = ['Select', 'Male', 'Female', 'Transgender Male', 'Transgender Female']\n    \n    return types.map( type => type === gender ? <option value={gender} selected>{gender}</option> : <option>{type}</option>)\n     };\n    \nif (editState) {\n    return (\n        <div className={'my-5'}>\n            <em><h5 style={{textDecoration: \"underline\"}}>\n            {name ? `${name}'s` : ''} Basic Health Information:</h5></em>\n\n          <Col size={'md-12'} classes={\"mt-5\"}>\n                <Button className=\"fas fa-backspace fa-2x\" style={{...toggleBtn, color: \"tomato\"}} \n                onClick={toggleState} />\n            </Col>\n            <form onSubmit={formSubmit} >\n                <div className={\"form-row\"}>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Date of Birth</label>\n                        <Input name=\"dob\" placeholder=\"MM/DD/YYYY\"\n                        value={data.dob}\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Age</label>\n                        <div style={fieldText}>\n                            {getAge(data.dob)}\n                        </div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                    <label>Gender</label>\n                        <select name=\"gender\" className=\"form-control\"\n                        style={input}\n                        onChange={target} >\n                            {getGenders(data.gender)}    \n                        </select>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Blood Type</label>\n                        <select name=\"bloodType\" className=\"form-control\"\n                        style={input} \n                        onChange={target} >\n                            {getBloodTypes(data.bloodType)}\n                        </select>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Insurance Plan</label>\n                        <Input value={data.insurance} name=\"insurance\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Number</label>\n                        <Input value={data.insNumber} name=\"insNumber\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx BIN</label>\n                        <Input value={data.rxBin} name=\"rxBin\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx PCN</label>\n                        <Input value={data.rxPcn} name=\"rxPcn\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Allergies</label>\n                        <TextArea value={data.allergies} name=\"allergies\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Immunizations (include dates received)</label>\n                        <TextArea value={data.immunizations} name=\"immunizations\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Family History & Other Notes</label>\n                        <TextArea value={data.notes} name=\"notes\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <Col size={'md-12'}>\n                <Button className=\"btn\" style={updtBtn} \n                    type=\"submit\" > <i className=\"fas fa-sync-alt mr-2\"/> {' '}  \n                        {' '} update \n                    </Button>\n                </Col>\n            </form>\n        </div>\n        )\n    } else {\n        return (\n            <div className={'my-5 health-info'}>\n                <em><h5 style={{textDecoration: \"underline\"}}>\n                {name ? `${name}'s` : ''} Basic Health Information:</h5></em>\n\n                <Col size={'md-12'} classes={'gen-edit mt-5'}>\n                    <Button className=\"fas fa-user-edit fa-2x\" style={toggleBtn} \n                        onClick={toggleState} \n                    />   \n                </Col>\n            <form>\n                <div className={\"form-row\"}>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Date of Birth:</label>\n                        <div style={fieldText}>{data.dob}</div>\n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Age:</label>\n                        <div style={fieldText}>\n                            {getAge(data.dob)}\n                        </div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Gender:</label>\n                        <div style={fieldText}>{data.gender}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Blood Type:</label>\n                        <div style={fieldText}>{data.bloodType}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Insurance Plan:</label>\n                        <div style={fieldText}>{data.insurance}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Number:</label>\n                        <div style={fieldText}>{data.insNumber}</div>\n                    </Col>\n        \n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx BIN:</label>\n                        <div style={fieldText}>{data.rxBin}</div>\n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx PCN:</label>\n                        <div style={fieldText}>{data.rxPcn}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Allergies:</label>\n                        <div style={fieldText}>{data.allergies}</div>\n                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Immunizations (include dates received):</label>\n                        <div style={fieldText}>{data.immunizations}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Family History & Other Notes:</label>\n                        <div style={fieldText}>{data.notes}</div>\n                    </Col>\n                </div>\n            </form>\n         </div>\n        )\n    }\n}\n\nconst fieldText = {\n    fontStyle: 'italic',\n    fontWeight: '1000',\n    padding: '10px 10px 10px 0',\n    color: 'black'\n},\ntoggleBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'white',\n    backgroundColor: 'white'\n},\nupdtBtn = {\n    float: 'right',\n    margin: '0',\n    backgroundColor: '#214c91',\n    color: 'white',\n    padding: \".4rem .75rem\"\n},\ninput = {\n    borderBottom: '1px solid rgba(0, 0, 0, .2)',\n    transition: 'all 0.30s ease-in-out'\n}","import React from 'react';\nimport { Col } from '../Grid';\nimport { Input, Button, TextArea } from '../Forms';\n\nexport function Conditions({\n\tdata,\n\tname,\n\ttarget,\n\tareaTarget,\n\teditState,\n\ttoggleState,\n\tformSubmit,\n\trenderSuggestions,\n\tremove,\n\ttext,\n\ttoggleDescState,\n\teditDescState\n}) {\n\t\n\tconst getRowHeight = (text) => (text.length > 250 ? text.length / 80 : 3),\n\n\t\trenderConditions = conditions => {\n\t\t\treturn conditions.sort((a, b) => b.createdAt - a.createdAt).map((condition, i) => \n\t\t\t\t(\n\t\t\t\t<Col key={i} size={'md-12'} classes={'form-group'}>\n\t\t\t\t\t<label style={fieldText}>{condition.name} </label>\n\t\t\t\t\t<div>{condition.description}</div>\n\t\t\t\t</Col>\n\t\t\t));\n\t\t};\n\n\tfunction renderEditConditions(conditions) {\n\t\treturn conditions.sort((a, b) => b.createdAt - a.createdAt).map((condition, i) => {\n\t\t\t\n\t\t\tif (condition.edit) {\n\t\t\t\treturn (\n\t\t\t\t\t<Col key={i} size={'md-12'} classes={'form-group'}>\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<label style={fieldText}>\n\t\t\t\t\t\t\t\t{condition.name} {' '}\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName=\"fas fa-pen\"\n\t\t\t\t\t\t\t\t\tstyle={editBtn}\n\t\t\t\t\t\t\t\t\tonClick={toggleDescState.bind(this, i)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName=\"fas fa-sync-alt\"\n\t\t\t\t\t\t\t\t\tstyle={littleEditBtn}\n\t\t\t\t\t\t\t\t\tonClick={toggleDescState.bind(this, i)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tvalue={condition.description}\n\t\t\t\t\t\t\t\trows={getRowHeight(condition.description)}\n\t\t\t\t\t\t\t\tonChange={areaTarget(i)}\n\t\t\t\t\t\t\t\tstyle={textarea}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</Col>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn (\n\t\t\t\t\t<Col key={i} size={'md-12'} classes={'form-group'}>\n\t\t\t\t\t\t<label style={fieldText}>\n\t\t\t\t\t\t\t{condition.name} {' '}\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName=\"fas fa-pen\"\n\t\t\t\t\t\t\t\tstyle={editBtn}\n\t\t\t\t\t\t\t\tonClick={toggleDescState.bind(this, i)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button className=\"fas fa-times\" style={removeBtn} onClick={remove.bind(this, i)} />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<div>{condition.description}</div>\n\t\t\t\t\t</Col>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\n\tif ((editState || data.length === 0) && !editDescState) {\n\t\treturn (\n\t\t\t<div className={'my-5'}>\n\t\t\t\t<em>\n\t\t\t\t\t<h5 style={{ textDecoration: 'underline' }}>\n\t\t\t\t\t{name ? `${name}'s` : ''} Health Conditions:</h5>\n\t\t\t\t</em>\n\n\t\t\t\t<Col size={'md-12'} classes=\"mt-5\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"fas fa-backspace fa-2x\"\n\t\t\t\t\t\tstyle={{ ...toggleBtn, color: 'tomato' }}\n\t\t\t\t\t\tonClick={toggleState}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<form onSubmit={formSubmit}>\n\t\t\t\t\t<div className=\"form-row\" style={{ background: 'white' }}>\n\t\t\t\t\t\t<Col size={'md-6'} classes={'form-group'}>\n\t\t\t\t\t\t\t<label>Add New Condition</label>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<Input type=\"text\"  autoComplete=\"off\"\n\t\t\t\t\t\t\t\tstyle={input} \n\t\t\t\t\t\t\t\tvalue={text} \n\t\t\t\t\t\t\t\tonChange={target} \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{renderSuggestions()}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col size={'md-3'}>\n\t\t\t\t\t\t\t<Button className=\"btn\" style={addBtn} type=\"submit\">\n\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t<i className=\"fa fa-plus fa-2x mr-2\" /> Add\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'form-row'}>{renderEditConditions(data)}</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t} else if (editDescState) {\n\t\treturn (\n\t\t\t<div className={'my-5'}>\n\t\t\t\t<em>\n\t\t\t\t\t<h5 style={{ textDecoration: 'underline' }}>\n\t\t\t\t\t{name ? `${name}'s` : ''} Health Conditions:</h5>\n\t\t\t\t</em>\n\n\t\t\t\t<Col size={'md-12 mt-5'}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"fas fa-backspace fa-2x\"\n\t\t\t\t\t\tstyle={{ ...toggleBtn, color: 'tomato' }}\n\t\t\t\t\t\tonClick={toggleState}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<form onSubmit={formSubmit}>\n\t\t\t\t\t<div className=\"form-row\" style={{ background: 'white' }}>\n\t\t\t\t\t\t<Col size={'md-6'} classes={'form-group'}>\n\t\t\t\t\t\t\t<label>Add New Condition</label>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<Input type=\"text\" \n\t\t\t\t\t\t\t\tstyle={input} \n\t\t\t\t\t\t\t\tvalue={text} \n\t\t\t\t\t\t\t\tonChange={target} \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{renderSuggestions()}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col size={'md-3'}>\n\t\t\t\t\t\t\t<Button className=\"btn\" style={addBtn} type=\"submit\">\n\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t<i className=\"fa fa-plus fa-2x mr-2\" /> Add\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'form-row'}>{renderEditConditions(data)}</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<div className={'mt-5 condition-info'}>\n\t\t\t\t<em>\n\t\t\t\t\t<h5 style={{ textDecoration: 'underline' }}>\n\t\t\t\t\t{name ? `${name}'s` : ''} Health Conditions:</h5>\n\t\t\t\t</em>\n\n\t\t\t\t<Col size={'md-12'} classes={'condition-edit mt-5'}>\n\t\t\t\t\t<Button className=\"fas fa-user-edit fa-2x\" style={toggleBtn} \n\t\t\t\t\tonClick={toggleState}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<form>\n\t\t\t\t\t<div className={'form-row'}>{renderConditions(data)}</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\nconst fieldText = {\n\t\tfontStyle: 'italic',\n\t\tfontWeight: '1000',\n\t\tpadding: '10px 10px 10px 0',\n\t\tcolor: 'black'\n\t},\n\ttextarea = {\n\t\tresize: 'none',\n\t\tborderBottom: '1px solid rgba(0, 0, 0, .2)',\n\t\ttransition: 'all 0.30s ease-in-out'\n\t},\n\tinput = {\n\t\tborderBottom: '1px solid rgba(0, 0, 0, .2)',\n\t\ttransition: 'all 0.30s ease-in-out'\n\t},\n\ttoggleBtn = {\n\t\tfloat: 'right',\n\t\tborder: 'none',\n\t\tmargin: '0',\n\t\tcolor: 'white',\n\t\tbackgroundColor: 'white'\n\t},\n\taddBtn = {\n\t\tmarginTop: '30px',\n\t\tcolor: '#214c91',\n\t\tfocus: 'none',\n\t\tsize: '10em'\n\t},\n\teditBtn = { \n\t\tborder: 'none', \n\t\tbackgroundColor: 'white' \n\t},\n\tlittleEditBtn = {\n\t\tbackgroundColor: 'white',\n\t\tborder: 'none',\n\t\tcolor: '#214c91'\n\t},\n\tremoveBtn = {\n\t\tbackgroundColor: 'white',\n\t\tborder: 'none',\n\t\tcolor: 'red'\n\t};\n","import React from 'react'\nimport { Col } from '../Grid';\nimport { Input, Button } from '../Forms';\n\nexport function Medications({ \n    data, \n    text, \n    name,\n    target, \n    remove, \n    addDoses, \n    editState, \n    formSubmit, \n    toggleState, \n    otherDosage, \n    doseChoices, \n    renderSuggestions\n}) {\n\n    const renderDoses = doses => {\n        if (!doses || otherDosage === 'Other Dose') {\n            return (\n                <Input name=\"dosage\" placeholder=\"Enter Dosage\"\n                    style={input}\n                    onChange={target}\n                />\n            )\n        } else {\n            const clone = doses.includes('Other Dose') ? doses : doses.concat('Other Dose');\n            return (\n                <select name=\"dosage\" style={input}\n                    onChange={target}\n                    className=\"form-control\">\n                    <option defaultValue>Which Dose?</option>\n\n                    {clone.map((dose, i) => <option key={i} >{dose}</option>)}\n\n                </select>\n            )\n        }\n    },\n\n        renderMeds = meds => {\n            return meds.sort((a, b) => b.createdAt - a.createdAt).map((med, i) => (\n\n                <Col key={i} size={\"md-12\"} classes={\"form-group\"}>\n                    <label style={fieldText}>{med.medication} </label>\n                    <div>{med.dosage}</div>\n                </Col>\n            ));\n        }\n\n    function renderEditMeds(meds) {\n        return (\n            meds.sort((a, b) => b.createdAt - a.createdAt).map((med, i) =>\n            \n                <Col key={i} size={'md-12'} classes={'form-group'}>\n                    <label style={fieldText}>\n                        {med.medication}\n                        {' '}\n                        <Button className=\"fas fa-times\" type='submit' style={removeBtn}\n                            onClick={remove.bind(this, i)}\n                        />\n                    </label>\n                    <div>\n                        {med.dosage}\n                    </div>\n                </Col>\n            )\n        )\n    }\n\n    if ((editState || data.length === 0)) {\n        return (\n            <div className={'my-5'}>\n                <em><h5 style={{ textDecoration: \"underline\" }}>\n                {name ? `${name}'s` : ''} Medications:</h5></em>\n\n                <Col size={'md-12'} classes=\"mt-5\">\n                    <Button className=\"fas fa-backspace fa-2x\"\n                        style={{ ...toggleBtn, color: \"tomato\" }}\n                        onClick={toggleState}\n                    />\n                </Col>\n                <form onSubmit={formSubmit} >\n                    <div className=\"form-row\" style={{ background: 'white' }}>\n                        <Col size={'md-4'} classes={'form-group'}>\n                            <label>Add New Medication</label>\n                            <Button className=\"fas fa-hand-point-right\"\n                                style={littlePointBtn}\n                                onClick={addDoses}\n                            ></Button>\n                            <div>\n                                <Input name=\"medication\" autoComplete=\"off\"\n                                    style={input}\n                                    value={text}\n                                    onBlur={addDoses}\n                                    onChange={target}\n                                />\n\n                                {renderSuggestions()}\n\n                            </div>\n                        </Col>\n                        <Col size={'md-4'} classes={'form-group'}>\n                            <label>Select Dosage</label>\n                            <div>\n\n                                {renderDoses(doseChoices)}\n\n                            </div>\n                        </Col>\n                        <Col size={'md-2'}>\n                            <Button className=\"btn\" style={addBtn}\n                                type=\"submit\"  > <i className=\"fa fa-plus fa-2x mr-2\" />\n                                {' '} Add\n                        </Button>\n                        </Col>\n                    </div>\n                </form>\n                <div className={\"form-row\"}>\n\n                    {renderEditMeds(data)}\n\n                </div>\n            </div>\n        )\n    }\n    else {\n        return (\n            <div className={'my-5 med-info'}>\n                <em><h5 style={{ textDecoration: \"underline\" }}>\n                {name ? `${name}'s` : ''} Medications:</h5></em>\n\n                <Col size={'md-12'} classes={\"mt-5\"}>\n                    <Button className=\"fas fa-user-edit fa-2x\"\n                        style={toggleBtn}\n                        onClick={toggleState}\n                    />\n                </Col>\n                <form>\n                    <div className={\"form-row\"}>\n\n                        {renderMeds(data)}\n\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\nconst fieldText = {\n    fontStyle: 'italic',\n    fontWeight: '1000',\n    padding: '10px 10px 10px 0',\n    color: 'black'\n},\n    input = {\n        borderBottom: '1px solid rgba(0, 0, 0, .2)',\n        transition: 'all 0.30s ease-in-out'\n    },\n    toggleBtn = {\n        float: 'right',\n        border: 'none',\n        margin: '0',\n        color: 'white',\n        backgroundColor: 'white'\n    },\n    addBtn = {\n        marginTop: '30px',\n        color: '#214c91',\n        focus: 'none',\n        size: '10em'\n    },\n    littlePointBtn = {\n        border: 'none',\n        color: 'green',\n        float: 'right',\n        backgroundColor: 'white'\n    },\n    removeBtn = {\n        backgroundColor: 'white',\n        border: 'none',\n        color: 'red'\n    }\n","import React from 'react'\nimport { Col } from '../../components/Grid';\nimport { Input, Button } from '../../components/Forms';\n\n\nexport function NewContact({ target, toggleState, formSubmit }) {\n\n    return (\n    <div className={'my-5'}>\n        <Col size={'md-12'}>\n            <Button className=\"fas fa-backspace fa-2x\" style={cancelBtn} \n            onClick={toggleState} />\n        </Col>\n        <form onSubmit={formSubmit} >\n            <div className={\"form-row\"}>\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Contact for</label>\n                    <Input name=\"contact\" \n                    placeholder=\"PCP, Pharmacy, etc..\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Office or Business Name</label>\n                    <Input name=\"office\"\n                    placeholder=\"Vandelay Industries\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Contact Name</label>\n                    <Input name=\"name\" \n                    placeholder=\"Art Vandelay\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n            </div>\n            <div className=\"form-row\">\n                <Col size={'md-6'} classes={'form-group'}>\n                    <label>Address Line 1</label>\n                    <Input name=\"addressOne\"\n                    style={input}\n                    onChange={target} \n                    />                    </Col>\n                <Col size={'md-6'} classes={'form-group'}>\n                    <label>Address Line 2</label>\n                    <Input name=\"addressTwo\"\n                    style={input}\n                    onChange={target} \n                    />                    \n                </Col>\n            </div>\n            <div className=\"form-row\">\n                <Col size={'md-3'} classes={'form-group'}>\n                    <label>City</label>\n                    <Input name=\"city\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-3'} classes={'form-group'}>\n                    <label>State/Providence</label>\n                    <Input name=\"state\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-3'} classes={'form-group'}>\n                    <label>Zip/Postal Code</label>\n                    <Input name=\"zip\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-3'} classes={'form-group'}>\n                    <label>Country</label>\n                    <Input name=\"country\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n            </div>\n            <div className=\"form-row\">\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Primary Phone</label>\n                    <Input name=\"primaryPhone\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-2'} classes={'form-group'}>\n                    <label>Ext.</label>\n                    <Input name=\"primaryExt\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Another Phone</label>\n                    <Input name=\"secondaryPhone\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-2'} classes={'form-group'}>\n                    <label>Ext.</label>\n                    <Input name=\"secondaryExt\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                </div>\n                <div className=\"form-row\">\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Fax</label>\n                    <Input name=\"fax\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Email</label>\n                    <Input name=\"email\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Website</label>\n                    <Input name=\"website\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n            </div>\n            <Col size={'md-12'}>\n            <Button className=\"btn\" style={saveBtn} \n                type=\"submit\" > <i className=\"fa fa-address-book mr-2\"/> {' '}  \n                    {' '} Save \n                </Button>\n            </Col>\n        </form>\n    </div> \n    )\n}\n\nconst cancelBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'tomato',\n    backgroundColor: 'white'\n},\nsaveBtn = {\n    float: 'right',\n    margin: '0',\n    backgroundColor: '#55595c',\n    color: 'white',\n},\ninput = {\n    borderBottom: '1px solid rgba(0, 0, 0, .2)',\n    transition: 'all 0.30s ease-in-out'\n}","import React, { useState } from \"react\";\nimport { Col } from \"../../components/Grid\";\nimport { NewContact } from \"../../components/NewContact\";\nimport { Input, Button } from \"../../components/Forms\";\n\nexport function Contacts({\n  data,\n  name,\n  target,\n  remove,\n  newContact,\n  toggleNew,\n  newTarget,\n  toggleState,\n  formSubmit\n}) {\n\n  const [ confirmed, isConfirmed ] = useState(false),\n\n    formatPhoneNumberLink = number => number ? number.replace(/[^\\d]/g, '') : \"\",\n  \n    getNewContact = nextContact => {\n      if (nextContact) {\n        return (\n          <NewContact\n            target={newTarget}\n            toggleState={toggleNew}\n            formSubmit={formSubmit}\n          />\n        );\n      }\n    },\n\n    confirmRemoval = i => {\n      if (confirmed) {\n        return (\n          <div className={\"remove\"}>\n            <Button\n              type=\"button\"\n              className=\"btn btn-danger\"\n              style={{ float: \"right\" }}\n              onClick={remove.bind(this, i, () => {isConfirmed(!confirmed)})}\n            >\n              <i className=\"fas fa-user-times\"> </i> Confirm Delete\n            </Button>\n            <Button\n              className=\"btn minus\"\n              style={{ float: \"left\" }}\n              onClick={() => {\n                isConfirmed(!confirmed);\n              }}\n            >\n              <i className=\"fas fa-ban\" /> Cancel\n            </Button>\n          </div>\n        );\n      } else {\n        return (\n          <div className={\"remove\"}>\n            <Button\n              className=\"btn minus\"\n              style={{ float: \"left\" }}\n              onClick={() => {\n                isConfirmed(!confirmed);\n              }}\n            >\n              <i className=\"fa fa-minus\" /> Remove Contact\n            </Button>\n          </div>\n        );\n      }\n    };\n\n  function renderContacts(contacts) {\n    return contacts.map((contact, i) => {\n      if (contact.edit) {\n        return (\n          <div key={i} className={\"mt-5\"}>\n            <Col size={\"md-12\"}>\n              <Button\n                className=\"fas fa-backspace fa-2x\"\n                style={confirmed ? { ...cancelBtn, color: \"white\" } : cancelBtn}\n                onClick={toggleState.bind(this, i)}\n              />\n            </Col>\n            <form>\n              <div className={\"form-row\"}>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Contact for</label>\n                  <Input\n                    value={contact.contact}\n                    name=\"contact\"\n                    placeholder=\"Dr, Pharmacy, etc..\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Office or Business Name</label>\n                  <Input\n                    value={contact.office}\n                    name=\"office\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Contact Name</label>\n                  <Input\n                    value={contact.name}\n                    name=\"name\"\n                    placeholder=\"Dr. Smith\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-6\"} classes={\"form-group\"}>\n                  <label>Address Line 1</label>\n                  <Input\n                    value={contact.addressOne}\n                    name=\"addressOne\"\n                    style={input}\n                    onChange={target(i)}\n                  />{\" \"}\n                </Col>\n                <Col size={\"md-6\"} classes={\"form-group\"}>\n                  <label>Address Line 2</label>\n                  <Input\n                    value={contact.addressTwo}\n                    name=\"addressTwo\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>City</label>\n                  <Input\n                    value={contact.city}\n                    name=\"city\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>State/Providence</label>\n                  <Input\n                    value={contact.state}\n                    name=\"state\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>Zip/Postal Code</label>\n                  <Input\n                    value={contact.zip}\n                    name=\"zip\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>Country</label>\n                  <Input\n                    value={contact.country}\n                    name=\"country\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Primary Phone</label>\n                  <Input\n                    value={contact.primaryPhone}\n                    name=\"primaryPhone\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-2\"} classes={\"form-group\"}>\n                  <label>Ext.</label>\n                  <Input\n                    value={contact.primaryExt}\n                    name=\"primaryExt\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Another Phone</label>\n                  <Input\n                    value={contact.secondaryPhone}\n                    name=\"secondaryPhone\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-2\"} classes={\"form-group\"}>\n                  <label>Ext.</label>\n                  <Input\n                    value={contact.secondaryExt}\n                    name=\"secondaryExt\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Fax</label>\n                  <Input\n                    value={contact.fax}\n                    name=\"fax\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Email</label>\n                  <Input\n                    value={contact.email}\n                    name=\"email\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Website</label>\n                  <Input\n                    value={contact.website}\n                    name=\"website\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-12\"}>\n                  {confirmRemoval(i)}\n\n                  <Button\n                    className=\"btn\"\n                    style={confirmed ? { display: \"none\" } : updtBtn}\n                    onClick={toggleState.bind(this, i)}\n                  >\n                    <i className=\"fas fa-sync-alt mr-2\" />\n                    update\n                  </Button>\n                </Col>\n              </div>\n            </form>\n          </div>\n        );\n      } else {\n        return (\n          <div key={i} className={\"mt-5 contacts-info\"}>\n            <Col size={\"md-12\"} classes={\"contacts-edit\"}>\n              <Button\n                className=\"fas fa-user-edit fa-2x\"\n                style={editBtn}\n                onClick={ ()=>{\n                  isConfirmed(false); \n                  toggleState(i)\n                }}\n              />\n            </Col>\n            <form>\n              <div className={\"form-row\"}>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Contact for:</label>\n                  <div style={fieldText}>{contact.contact}</div>\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Office or Business Name:</label>\n                  <div style={fieldText}>{contact.office}</div>\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Contact Name:</label>\n                  <div style={fieldText}>{contact.name}</div>\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-6\"} classes={\"form-group\"}>\n                  <label>Address line 1:</label>\n                  <div style={fieldText}>{contact.addressOne}</div>\n                </Col>\n                <Col size={\"md-6\"} classes={\"form-group\"}>\n                  <label>Address line 2:</label>\n                  <div style={fieldText}>{contact.addressTwo}</div>\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>City:</label>\n                  <div style={fieldText}>{contact.city}</div>\n                </Col>\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>State/Providence:</label>\n                  <div style={fieldText}>{contact.state}</div>\n                </Col>\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>Zip/Postal Code:</label>\n                  <div style={fieldText}>{contact.zip}</div>\n                </Col>\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>Country:</label>\n                  <div style={fieldText}>{contact.country}</div>\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Primary Phone:</label>\n                  <div style={{...fieldText, textDecoration: 'underline'}}>\n                  <a href={`tel:${formatPhoneNumberLink(contact.primaryPhone)}`}>{contact.primaryPhone}</a>\n                  </div>\n                </Col>\n                <Col size={\"md-2\"} classes={\"form-group\"}>\n                  <label>Ext:</label>\n                  <div style={fieldText}>{contact.primaryExt}</div>\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Another Phone:</label>\n                  <div style={{...fieldText, textDecoration: 'underline'}}>\n                  <a href={`tel:${formatPhoneNumberLink(contact.secondaryPhone)}`}>{contact.secondaryPhone}</a>\n                  </div>\n                </Col>\n                <Col size={\"md-2\"} classes={\"form-group\"}>\n                  <label>Ext:</label>\n                  <div style={fieldText}>{contact.secondaryExt}</div>\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Fax:</label>\n                  <div style={fieldText}>{contact.fax}</div>\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Email:</label>\n                  <div style={{...fieldText, textDecoration: 'underline'}}>\n                    <a href={`mailto:${contact.email}`}>{contact.email}</a>\n                    </div>\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Website:</label>\n                  <div style={{...fieldText, textDecoration: 'underline'}}> \n                  <a target=\"_blank\" rel=\"noreferrer noopener\" \n                    href={`https://${contact.website}`}>{contact.website}</a>\n                  </div>\n                </Col>\n              </div>\n            </form>\n          </div>\n        );\n      }\n    });\n  }\n\n  return (\n    <div className={\"my-5\"}>\n      <em>\n        <h5 style={{ textDecoration: \"underline\" }}>\n          Emergency or other contact Info {name ? `for ${name}` : ''}:\n        </h5>\n      </em>\n\n      {renderContacts(data)}\n\n      {getNewContact(newContact)}\n\n      <div className={\"add\"}>\n        <Button\n          className=\"btn plus\"\n          style={newContact ? { display: \"none\" } : { display: \"block\" }}\n          onClick={toggleNew}\n        >\n          <i className=\"fa fa-plus\" /> New Contact\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nconst fieldText = {\n    fontStyle: \"italic\",\n    fontWeight: \"1000\",\n\t\tpadding: '10px 10px 10px 0',\n    color: \"black\"\n  },\n  input = {\n    borderBottom: \"1px solid rgba(0, 0, 0, .2)\",\n    transition: \"all 0.30s ease-in-out\"\n  },\n  updtBtn = {\n    float: \"right\",\n    margin: \"0\",\n    backgroundColor: \"#214c91\",\n    color: \"white\"\n  },\n  editBtn = {\n    float: \"right\",\n    border: \"none\",\n    margin: \"0\",\n    color: \"white\",\n    backgroundColor: \"white\"\n  },\n  cancelBtn = {\n    float: \"right\",\n    border: \"none\",\n    margin: \"0\",\n    color: \"tomato\",\n    backgroundColor: \"white\"\n  };\n","import React, { useEffect, useState, useRef, useContext } from 'react';\nimport { useForceUpdate } from '../../utils/CustomHooks';\nimport PatientContext from '../../utils/PatientContext';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { GeneralInfo } from '../../components/GeneralInfo';\nimport { HealthCard } from '../../components/HealthCard';\nimport { Conditions } from '../../components/Conditions';\nimport { Medications } from '../../components/Medications';\nimport { Contacts } from '../../components/Contacts';\nimport API from '../../utils/API';\n\nexport default function EHR({ location, setContext }) {\n\n/*\n    Globals\n*/ \n    let { patientId, name } = useContext(PatientContext);\n        patientId = patientId ? patientId : location.state.patientId;\n  \n    const [ patient, setPatient ] = useState(patientId),\n        [generalInfo, setGeneralInfo] = useState({}),\n        [ healthInfo, setHealthInfo ] = useState({}),\n        [ conditions, setConditions ] = useState([]),\n        [ meds, setMeds ] = useState([]),\n        [ contacts, setContacts ] = useState([]),\n        [ medInput, setMedInput ] = useState(''),\n        [ newContact, setNewContact ] = useState({}),\n        [ addContact, setAddContact ] = useState(false),\n        [ editGenState, setGenState ] = useState(false),\n        [ editHealthState, setHealthState ] = useState(false),\n        [ editConditState, setConditState ] = useState(false),\n        [ editMedsState, setMedsState ] = useState(false),\n        [ conditSuggestions, setConditSuggestions ] = useState([]),\n        [ medSuggestions, setMedSuggestions ] = useState([]),\n        [ doses, setDoses ] = useState(''),\n        [ query, setQuery ] = useState(''),\n\n        forceUpdate = useForceUpdate(), \n        hasConditions = useRef(), \n        hasMeds = useRef(), \n        hasContacts = useRef(), \n        isInitialMount = useRef(true);\n\n/*\n    EHR Setup and Initialization\n*/ \n    //Use this effect to only load patient on initial mount. And update db only on subsequent mounts. \n    useEffect(() => {  \n        if (isInitialMount.current) {\n            isInitialMount.current = false;\n            getPatient()\n        } else {\n            updateDB()\n         }\n    }, [generalInfo, healthInfo, conditions, meds, contacts]);\n\n    const getPatient = async() => {\n        if (location.state.patientId === \"\") {\n            newPatient()\n        } else {\n        const { data } = await API.fetchPatient(patient)\n            setGeneralInfo(data.patientData)\n            setHealthInfo(data.healthData)\n            setConditions(data.healthConditions)\n            setMeds(data.medications)\n            setContacts(data.contacts)\n            setParity(data)\n        } \n    },\n\n     //if no patient is passed in, create a new one on the server.\n    newPatient = async() => {\n        const user  = await API.getUser(),\n            email = user.data.user.email;\n   \n        const newPatient = {email, generalInfo, healthInfo, conditions, meds, contacts},\n         { data } = await API.addPatient(newPatient);\n\n        setPatient(data._id);\n        setGenState(true)\n        setHealthState(true)\n        setParity()\n    },\n\n/*\n    State and database management\n*/ \n    updateDB = e => {\n        if(e) {\n            e.preventDefault()\n            setGenState(false)\n            setHealthState(false)\n        }\n        if(parity()) {\n        const data = {generalInfo, healthInfo, conditions, meds, contacts}\n        \n        API.updateEHR(patient, data)\n            .catch(err => console.log(err))        \n        }     \n    }, \n\n    setParity = (data) => {\n        hasConditions.current = (data && data.healthConditions.length > 0) ? true : false;     \n        hasMeds.current = (data && data.medications.length > 0) ? true : false;     \n        hasContacts.current = (data && data.contacts.length > 0) ? true : false;     \n    },\n\n    parity = () => {\n        if(hasConditions.current && conditions.length === 0) {\n            return false;\n        }\n        if(hasMeds.current && meds.length === 0) {\n            return false;\n        }\n        if(hasContacts.current && contacts.length === 0) {\n            return false;\n        }\n        return true;\n    }\n\n    useEffect(() => {\n        setNameInNavbar()\n    }, [generalInfo])\n\n    const setNameInNavbar = () => {\n        let { firstName, nickname } = generalInfo,\n        name = nickname ? nickname : firstName;\n\n        setContext({ patientId: patient, name })\n    },\n\n    onGenInfoInputChange = e => {\n        const { name, value } = e.target;\n        setGeneralInfo({ ...generalInfo, [name]: value })\n    }, \n\n    onHealthInfoInputChange = e => {\n        const { name, value } = e.target;\n        setHealthInfo({ ...healthInfo, [name]: value })\n    },\n\n    newContactInputChange = e => {\n        const { name, value } = e.target;\n        setNewContact({...newContact, [name]: value})\n    }, \n    \n    onConditInputChange = async e => {\n      const { value } = e.target,\n       items = await getConditionNames(value);\n\n      let suggestions = [];\n       \n      if (value.length > 0) {\n          const regex = new RegExp(`^${value}`, 'i');\n          suggestions = items.sort().filter( x => regex.test(x));\n        } \n        setConditSuggestions({ suggestions, text: value })\n     }\n\n     //I'm using this effect, along with the query state to create a 1/2 second delay after typing finishes before API and other code is executed to resolve performance issues.  \n     useEffect(() => {\n        const timeOutId = setTimeout(() => setMedInput(query), 500);\n        return () => clearTimeout(timeOutId);\n      }, [query]);\n    \n    const onMedInputChange = async e => {\n            const { name, value } = e.target; \n            setQuery({ ...query, [name]: value })\n            \n        //only run this code when medication changes. ignore dosage.\n        if (name === 'medication') {\n        try {           \n        const items = await getMedNames(value)\n        let suggestions = [];\n\n        if (value.length > 0) {\n            const regex = new RegExp(`^${value}`, 'i');\n            suggestions = items.sort().filter( x => regex.test(x)).slice(0, 8)\n            } \n            setMedSuggestions({ suggestions, text: value })\n        } catch (err) {return}\n        } \n    },\n\n    onContactChange = index => e => {\n        const { name, value } = e.target,\n        clone = contacts,\n        edit = contacts[index];\n        \n        forceUpdate();\n        \n        for (let key of Object.keys(edit)) {\n\n            if (key === name) {\n                edit[key] = value;\n            } else if (!edit.hasOwnProperty(name)) {\n                edit[name] = value;\n            }\n        }\n        clone.splice(index, 1, edit)\n        setContacts(clone)\n    }, \n     \n     onConditDescChange = index => e => {\n        const { value } = e.target,\n          clone = conditions;\n\n        forceUpdate();\n\n         const newDescription = {\n            name: conditions[index].name,\n            edit: conditions[index].edit,\n            description: value\n        }\n        clone.splice(index, 1, newDescription)\n        setConditions(clone)\n    }, \n\n    toggleDescriptionEdit = index => {\n        const arr = [];\n\n        conditions.forEach( (item, i) => {\n            \n            item.edit = i === index ? !item.edit : false;\n            arr.push(item)\n        })\n        setConditions(arr)\n    },\n\n    toggleContactEdit = index => {\n        const arr = [];\n\n        contacts.forEach( (item, i) => {\n            \n            item.edit = i === index ? !item.edit : false;\n            arr.push(item)\n        })\n        setContacts(arr)\n    },\n\n    addCondition = async e => {\n        e.preventDefault();\n        e.target.reset();\n        \n        let { text } = conditSuggestions;\n        setConditSuggestions([]);\n\n        if (!text) return;\n        \n        const [ search ]  = text.split('-'),\n            { data } = await API.fetchCondition(search),\n    \n        description = (data[0] && data[0].shortdef) ? data[0].shortdef.join('\\n') : '',\n\n                newCondition = { \n                    name: capitalizeWord(text), \n                    description, \n                    edit: false, \n                    createdAt: Date.now()\n                }\n        hasConditions.current = true;\n        setConditions([...conditions, newCondition])\n    },\n\n    addMeds = e => {\n        e.preventDefault();\n        e.target.reset();\n\n        let { text } = medSuggestions;\n        if (!text) return\n        \n        try {\n           text = text.split(' ')\n\n            const newMed = {\n                medication: capitalizeWord(text[0]),\n                dosage: medInput.dosage,\n                edit : false,\n                createdAt: Date.now()\n            }\n        hasMeds.current = true;\n        setMeds([...meds, newMed])\n        setDoses('')\n        setQuery('')\n        setMedSuggestions([])\n        } catch(err) {return}\n    },\n\n    addNewContact = e => {\n        e.preventDefault();\n        setAddContact(false)\n        \n        hasContacts.current = true;\n        setContacts([...contacts, newContact])\n    },\n\n    removeCondition = index => {\n        const clone = conditions;\n\n        clone.splice(index, 1)\n\n        hasConditions.current = clone.length === 0 ? false : true\n        setConditions([...clone])\n    },\n\n    removeMed = index => {\n        const clone = meds;\n        \n        clone.splice(index, 1)\n\n        hasMeds.current = clone.length === 0 ? false : true\n        setMeds([...clone])\n    },\n\n    removeContact = index => {\n        const clone = contacts;\n\n        clone.splice(index, 1)\n\n        hasContacts.current = clone.length === 0 ? false : true\n        setContacts([...clone])\n    },\n\n/*\n    Features Management\n*/ \n    capitalizeWord = word => word.replace(/\\b[a-z]/g, char => char.toUpperCase()),\n\n    getConditionNames = async search => {\n        const { data } = await API.getConditionNames(search);\n        return  data[3].map( x => x[0]);\n    },\n\n     getMedNames = async search => {\n        const { data }  = await API.getMedNames(search);\n        return !data.displayTermsList ? \"??\" : data.displayTermsList.term;  \n    },\n\n    selectSuggestedCondit = async value => {\n        setConditSuggestions({ suggestions: [], text: value })\n\n        //auto add condition when selected autocomplete value is clicked.    \n        if (!value) return;\n        \n        const [ search ]  = value.split('-'),\n            { data } = await API.fetchCondition(search),\n    \n        description = (data[0] && data[0].shortdef) ? data[0].shortdef.join('\\n') : '',\n\n                newCondition = { \n                    name: capitalizeWord(value), \n                    description, \n                    edit: false, \n                    createdAt: Date.now()\n                }\n        setConditions([...conditions, newCondition])\n        setConditSuggestions({text: ''})\n    },\n\n    renderConditSuggestions = () => {\n        const { suggestions } = conditSuggestions;\n        \n        if (!suggestions || suggestions.length === 0) {\n            return;\n        }\n        return (\n            <ul>\n                {suggestions.map( (suggestion, i) => <li onClick={() => selectSuggestedCondit(suggestion)} key={i}>{suggestion}</li>)}\n            </ul>\n        )\n    },\n\n    selectSuggestedMed = async value => {\n        setMedSuggestions({ suggestions: [], text: value})\n        \n        //populate dosage choices with suggestions when autocomplete option is clicked\n        if (!value) return;\n        try {\n            const  { data } = await API.fetchMeds(value),\n              doses = data.drugGroup.conceptGroup[1].conceptProperties.map(x => x.synonym).filter(x => x !== '')\n           \n            setDoses(doses)\n        } catch(err) {return}\n    },\n\n    renderMedSuggestions = () => {\n        const { suggestions } = medSuggestions;\n        \n        if (!suggestions || suggestions.length === 0) {\n            return;\n        }\n        return (\n            <ul>\n                {suggestions.map( (suggestion, i) => <li onClick={() => selectSuggestedMed(suggestion)} key={i}>{suggestion}</li>)}\n            </ul>\n        )\n    },\n\n    //populate dosage choices when finger button is clicked\n    addDoses = async e => {\n        e.preventDefault();\n\n        const { text } = medSuggestions;\n        \n        if (!text) return;\n        try {\n            const  { data } = await API.fetchMeds(text),\n              doses = data.drugGroup.conceptGroup[1].conceptProperties.map(x => x.synonym).filter(x => x !== '')\n            \n            setDoses(doses)   \n        } catch(err) {return}\n    }\n\n\n    return (\n        <Container>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <GeneralInfo\n                        toggleState={() => setGenState(!editGenState)}\n                        editState={editGenState}\n                        data={generalInfo}\n                        target={onGenInfoInputChange}\n                        formSubmit={updateDB}\n                        name={name}\n                    />\n                </Col>\n            </Row>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <HealthCard\n                        toggleState={() => setHealthState(!editHealthState)}\n                        editState={editHealthState}\n                        data={healthInfo}\n                        target={onHealthInfoInputChange}\n                        formSubmit={updateDB}\n                        name={name}\n                    />\n                </Col>\n            </Row>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <Conditions\n                        toggleState={() => setConditState(!editConditState)}\n                        editState={editConditState} \n                        toggleDescState={toggleDescriptionEdit}\n                        remove={removeCondition}\n                        areaTarget={onConditDescChange}\n                        data={conditions}\n                        target={onConditInputChange}\n                        renderSuggestions={renderConditSuggestions}\n                        text={conditSuggestions.text}\n                        formSubmit={addCondition}\n                        name={name}\n                      />\n                </Col>\n            </Row>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <Medications\n                        toggleState={() => setMedsState(!editMedsState)}\n                        editState={editMedsState}\n                        data={meds}\n                        target={onMedInputChange}\n                        renderSuggestions={renderMedSuggestions}\n                        text={medSuggestions.text}\n                        otherDosage={medInput.dosage}\n                        remove={removeMed}\n                        addDoses={addDoses}\n                        doseChoices={doses}\n                        formSubmit={addMeds}\n                        name={name}\n                      />\n                </Col>\n            </Row>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <Contacts\n                        toggleNew={() => setAddContact(!addContact)}\n                        toggleState={toggleContactEdit}\n                        newContact={addContact}\n                        data={contacts}\n                        target={onContactChange}\n                        remove={removeContact}\n                        newTarget={newContactInputChange}\n                        formSubmit={addNewContact}\n                        name={name}\n                    />\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\n","import React, { useState, useContext, useRef, useEffect } from 'react';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { Contacts as ForwardThis } from '../../components/Contacts';\nimport { useForceUpdate } from '../../utils/CustomHooks';\nimport PatientContext from '../../utils/PatientContext';\nimport API from '../../utils/API';\n\n\nexport default function Contacts({ location }) {\n\n     const [ contacts, setContacts ] = useState([]),\n        [ newContact, setNewContact ] = useState({}),\n        [ addContact, setAddContact ] = useState(false),\n        [ generalInfo, setGeneralInfo ] = useState({}),\n        [ healthInfo, setHealthInfo ] = useState({}),\n        [ conditions, setConditions ] = useState([]),\n        [ meds, setMeds ] = useState([]),\n\n        hasContacts = useRef(),  \n        forceUpdate = useForceUpdate(),\n        isInitialMount = useRef(true);\n\n        let { patientId, name } = useContext(PatientContext);\n        patientId = patientId ? patientId : location.state.patientId;\n\n\n    //Use this effect to only load patient on initial mount. And update db only on subsequent mounts. \n    useEffect(() => {   \n        if (isInitialMount.current) {\n            isInitialMount.current = false;\n            getPatient()\n        } else {\n            updateDB()\n         }\n    }, [contacts]);\n\n    const getPatient = async() => {\n        if (!patientId) return\n       \n        const { data } = await API.fetchPatient(patientId)\n            \n        setGeneralInfo(data.patientData)\n        setHealthInfo(data.healthData)\n        setConditions(data.healthConditions)\n        setMeds(data.medications)\n        setContacts(data.contacts)\n        hasContacts.current = setParity(data)\n    },\n\n    updateDB = () => { \n        if (parity()) {\n        const data = {generalInfo, healthInfo, conditions, meds, contacts}\n\n        API.updateEHR(patientId, data)\n            .catch(err => console.log(err))         \n        }\n    },\n\n    newContactInputChange = e => {\n        const { name, value } = e.target;\n        setNewContact({...newContact, [name]: value})\n    }, \n\n    setParity = data => (data && data.contacts.length > 0) ? true : false,\n\n    parity = () => (hasContacts.current && contacts.length === 0) ? false : true,\n\n    onContactChange = index => e => {\n        const { name, value } = e.target,\n        clone = contacts,\n        edit = contacts[index];\n        \n        forceUpdate();\n\n        for (let key of Object.keys(edit)) {\n\n            if (key === name) {\n                edit[key] = value;\n            } else if (!edit.hasOwnProperty(name)) {\n                edit[name] = value;\n            }\n        }\n        clone.splice(index, 1, edit)\n        setContacts(clone)\n    },\n\n    toggleContactEdit = index => {\n        const arr = [];\n\n        contacts.forEach( (item, i) => {\n            \n            item.edit = i === index ? !item.edit : false;\n            arr.push(item)\n        })\n        setContacts(arr)\n    },\n\n    addNewContact = e => {\n        e.preventDefault();\n        setAddContact(false)\n\n        const list = contacts.concat(newContact);\n        \n        setContacts(list)\n    },\n\n    removeContact = index => {\n        const clone = contacts;\n\n        clone.splice(index, 1)\n        setContacts([...clone])\n    };\n\n    return (\n        <Container>\n            <Row classes=\"my-5\">\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <ForwardThis\n                    toggleNew={() => setAddContact(!addContact)}\n                    toggleState={toggleContactEdit}\n                    newContact={addContact}\n                    data={contacts}\n                    target={onContactChange}\n                    remove={removeContact}\n                    newTarget={newContactInputChange}\n                    formSubmit={addNewContact}\n                    name={name}\n                    />\n                </Col>\n             </Row>\n        </Container>\n    )\n}\n","import React, { useState, useContext } from 'react';\nimport { Link, useLocation, useHistory } from 'react-router-dom';\nimport PatientContext from '../../utils/PatientContext';\nimport { Button } from '../Forms';\nimport { Collapse } from '../Grid';\nimport Auth from '../../Auth';\n\nexport default function navBar() {\n\n    let [navLinks, showNavLinks] = useState(false),\n    history = useHistory(),\n    { pathname } = useLocation(),\n    { patientId, name } = useContext(PatientContext),\n        \n\n    // hide or show links when screen width is small\n     toggleNav = () => showNavLinks(navLinks = !navLinks),  \n\n     logout = () => Auth.logout(() => {history.push(\"/\")}),\n    \n     getButtons = () => {\n        if(Auth.isAuthenticated()) {\n            return (\n                <Button className={'btn btn-outline-primary m-2'} type='button'\n                    onClick={logout} >\n                    Log Out\n                </Button>\n        )\n        } else {\n            return (\n                <div>\n                    <Link to='/signin' >\n                                <Button className={'btn btn-outline-primary m-2'} type='button'>\n                                    Log In\n                                </Button>\n                            </Link>\n                    <Link to='/signup' >\n                        <Button className={'btn btn-outline-primary m-2'} type='button'>\n                            Sign Up\n                            </Button>\n                    </Link>\n                </div>\n                )\n            }\n     }\n  \n\n    return (\n        <nav className={'navbar navbar-expand-lg navbar-light bg-light'}>\n            <Link to='/' className={'navbar-brand'}><em>my</em>EHR</Link>\n            <button onClick={toggleNav} className={'navbar-toggler'} type=\"button\" data-toggle=\"collapse\" data-target=\"#target-collapse\" >\n            <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <Collapse navState={navLinks} id={'target-collapse'}>\n              <ul className=\"navbar-nav mr-auto\">\n                <li className={pathname === \"/\" ? \"nav-item active\" : \"nav-item\"}>\n                    <Link to=\"/\" className={'nav-link'}>\n                        Home\n                    </Link>\n                </li>\n                <li className={pathname === \"/patients\" ? \"nav-item active\" : \"nav-item\"}\n                    style={Auth.isAuthenticated() ? {display: 'block'} : {display: 'none'}} >\n                    <Link to=\"/patients\" className={'nav-link'}>\n                        Saved health records\n                    </Link>\n                </li>\n                <li className={pathname === \"/ehr\" ? \"nav-item active\" : \"nav-item\"}\n                    style={pathname === \"/ehr\" || pathname === \"/contacts\" ? {display: 'block'} : {display: 'none'}} >\n\n                    <Link to={{pathname:\"/ehr\", state: { patientId, name }}} className={'nav-link'} >\n                       {name ? `${name}'s` : ''} EHR\n                    </Link>    \n                </li>\n                <li className={pathname === \"/contacts\" ? \"nav-item active\" : \"nav-item\"}\n                    style={pathname === \"/ehr\" || pathname === \"/contacts\" ? {display: 'block'} : {display: 'none'}}  >\n\n                    <Link to={{pathname:\"/contacts\", state: { patientId, name }}} className={'nav-link'} >\n                    {name ? `${name}'s` : ''} Contacts\n                    </Link>    \n                </li>\n              </ul>\n              \n                { getButtons() }\n\n            </Collapse>\n        </nav>\n    )\n}\n\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport Auth from './Auth'\n\nexport default function ProtectedRoute({ component: Component, ...rest}) {\n    return (\n        <Route \n            {...rest}  \n                render={props => { \n                if(Auth.isAuthenticated()) {\n                    \n                    return <Component {...rest} {...props} />\n                } else{ \n                    return <Redirect to={\n                        {\n                            pathname: '/',\n                            state: {\n                                from: props.location\n                            }\n                        }\n                    } />\n                }\n        }  }\n       />\n    )\n}\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Landing from \"./pages/Landing\";\nimport SignIn from \"./pages/SignIn\";\nimport SignUp from \"./pages/SignUp\";\nimport Patients from \"./pages/Patients\";\nimport EHR from \"./pages/EHR\";\nimport Contacts from './pages/Contacts';\nimport NavBar from './components/Navbar';\nimport ProtectedRoute from './ProtectedRoute';\nimport PatientContext from './utils/PatientContext';\nimport './assets/css/bootstrap.min.css';\nimport \"./App.css\";\n\n\nexport default function App() {\n  \n  const [ patient, setPatient ] = useState({}),\n    { Provider } = PatientContext,\n\n  setPatientContext = patient => setPatient(patient);\n\n  return (\n    <Router>\n      <Provider value={patient} >\n        <Route path=\"/\"><NavBar /> </Route>\n        <Route exact path=\"/\"> <Landing /> </Route>\n        <Route exact path=\"/signin\"> <SignIn /> </Route>\n        <Route exact path=\"/signup\"> <SignUp /> </Route>\n        <ProtectedRoute exact path=\"/patients\" \n        component={Patients} \n        setContext={setPatientContext}  \n        /> \n        <ProtectedRoute exact path=\"/ehr\" \n        component={EHR} \n        setContext={setPatientContext}\n        />\n        <ProtectedRoute exact path=\"/contacts\" component={Contacts} />\n      </Provider>\n    </Router>\n  )\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}