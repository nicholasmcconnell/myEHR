{"version":3,"sources":["assets/img/Logo.png","components/Grid/index.js","components/Forms/index.js","pages/Landing/Landing.js","utils/API.js","pages/SignIn/SignIn.js","pages/SignUp/SignUp.js","components/ContactCard/index.js","components/HealthCard/index.js","components/Conditions/index.js","pages/EHR/EHR.js","pages/Medications/Medications.js","components/ProfileList/index.js","pages/Profiles/Profile.js","components/Navbar/index.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Container","_ref","classes","children","react_default","a","createElement","className","concat","Row","_ref2","Col","_ref3","size","split","map","join","Collapse","_ref4","navState","id","Input","props","Object","assign","TextArea","Button","Landing","Grid_Container","class","href","role","require","config","API","getDrugs","axios","get","getDrugInfo","process","getCondition","conditionSearch","catch","err","console","log","updateEHR","data","Promise","resolve","reject","status","fetchUser","email","_id","fetchAccount","firstName","lastName","birthday","allergies","medications","name","dosage","date","register","credentials","password","post","login","SignIn","history","useHistory","_useState","useState","_useState2","slicedToArray","setCredentials","onInputChange","e","_e$target","target","value","objectSpread","defineProperty","Grid_Row","Grid_Col","style","text","logo","src","alt","onSubmit","preventDefault","reset","then","res","success","localStorage","setItem","token","push","onChange","type","placeholder","react_router_dom","to","width","height","color","textShadow","SignUp","ContactCard","editState","toggleState","formSubmit","cancelBtn","onClick","first_name","input","last_name","nickname","address_one","address_two","city","state","zip","country","phone","updtBtn","editBtn","fieldText","fontStyle","fontWeight","fontSize","padding","paddingLeft","float","border","margin","backgroundColor","borderBottom","transition","HealthCard","bloodType","getAge","DOB","today","Date","birthDate","month","getMonth","age","getFullYear","getDate","dob","selected","insurance","insNumber","rxBin","rxPcn","immunizations","notes","Conditions","background","addBtn","marginTop","EHR","usrId","generalInfo","setGeneralInfo","_useState3","_useState4","healthInfo","setHealthInfo","_useState5","_useState6","editGenState","setGenState","_useState7","_useState8","editHealthState","setHealthState","_useState9","_useState10","editConditState","setConditState","_useState11","_useState12","_useState13","_useState14","setConditionSearch","useEffect","searchCondition","updateDB","asyncToGenerator","regenerator_default","mark","_callee","_yield$API$getConditi","results","wrap","_context","prev","next","sent","x","stop","apply","this","arguments","_e$target2","_e$target3","Medications","data-toggle","data-parent","colspan","Profiles","textDecoration","Profile","user","setUser","patients","getUser","getPatients","_yield$API$fetchUser","_callee2","_yield$API$fetchAccou","_context2","navBar","navLinks","showNavLinks","pathname","location","data-target","Grid_Collapse","App","react_router","exact","path","pages_Medications_Medications","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App","document","getElementById","URL","origin","addEventListener","fetch","response","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.63fcc1d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.dfab9e19.png\";","import React from 'react'\n\n        \nexport const Container = ({ classes, children }) => <div className={`container ${classes}`}>{children}</div>\n\nexport const Row = ({ classes, children }) => <div className={`row ${classes}`}>{children}</div>\n\nexport const Col = ({ size, classes, children }) => {\n    return ( <div \n        className={size.split(' ').map( size => `col-${size}`).join(' ')\n        +\" \"+ classes}>{children}</div>\n    )\n    }\n\nexport const Collapse = ({ navState, children, id }) => { \n    const classes = navState ? 'navbar-collapse collapse show' : 'navbar-collapse collapse';\n\n     return <div className={classes} id={id}>{children}</div>\n}","import React from 'react'\n\n\nexport function Input(props) {\n    return (\n        <input className=\"form-control\" {...props} />\n    );\n  }\n  \nexport function TextArea(props) {\n    return (\n        <textarea className=\"form-control\" {...props} />\n    );\n  }\n\nexport function Button(props) {\n    return (\n        <button {...props} >\n          {props.children}\n        </button>\n    );\n  }\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { Button, Input } from '../../components/Forms';\n\nexport default function Landing() {\n\n    return (\n        <Container>\n            <div class=\"jumbotron\">\n                <h1 class=\"display-4\">My EHR</h1>\n                <p class=\"lead\">All your medical records in one place.</p>\n                <hr class=\"my-4\"/>\n                <p></p>\n                <a class=\"btn btn-primary btn-lg\" href=\"../SignUp\" role=\"button\">Get Started</a>\n            </div>\n        </Container>\n    )\n}\n\n","import axios from \"axios\";\nrequire('dotenv').config();\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nexport default {\n    //this should list all drugs \n    getDrugs: function () {\n        return axios.get(\"/api/drugs\");\n    },\n    //this will be executed when the user selects \"get more info\" btn\n    getDrugInfo: function () {\n        return axios.get(`https://www.dictionaryapi.com/api/v3/references/medical/json/cetirizine?key=${apiKey}`);\n    },\n\n    getCondition: function ({ conditionSearch }) {\n        return axios.get(`https://clinicaltables.nlm.nih.gov/api/conditions/v3/search?terms=${conditionSearch}&sf=primary_name,consumer_name&df=primary_name,consumer_name,info_link_data`)\n        .catch( err => console.log(err))\n    },\n     \n    updateEHR: function (id, data) {\n        \n        return new Promise((resolve, reject) => {\n            resolve({ status: 'success' })\n        });\n        //return axios.post(`/api/:${id}`, data)\n    },\n    fetchUser: function () {\n        return {email: 'example@example.com', _id:'123456789'}\n    },\n\n    fetchAccount: function () {\n        return {\n            id: \"67\",\n            firstName: \"Eddie\",\n            lastName: \"Bravo\",\n            birthday: \"6/11/1983\",\n            allergies: \"peanuts. horseradish, bees\",\n            medications: [{\n                name: \"tylonal\",\n                dosage: \"the right amount\",\n                date: \"hey I got new meds today they are groovy - Pull new date\"\n            }]\n        }\n    },\n\n    register: function(credentials) {\n        console.log(\"in API.register\");\n        console.log(credentials);\n        const { email, password } = credentials\n        return axios.post('/api/authenticate/register', { email, password })\n    },\n\n    login: function(credentials) {\n        const { email, password } = credentials;\n        return axios.post('/api/authenticate/login', { email, password })\n    }\n};","import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { Button, Input } from '../../components/Forms';\nimport API from '../../utils/API';\n\nexport default function SignIn() {\n\n    const history = useHistory();\n    const [credentials, setCredentials] = useState({}),\n\n        onInputChange = e => {\n            const { name, value } = e.target;\n            setCredentials({ ...credentials, [name]: value })\n        },\n\n        handleSubmit = e => {\n            e.preventDefault();\n            e.target.reset();\n            API.login(credentials)\n                .then((res) => {\n                    // console.log(res.data)\n                    if (res.data.success) {\n                        localStorage.setItem('JWT', res.data.token);\n                        history.push('/')\n                    }\n                }\n                )\n                .catch((err) => err)\n        }\n\n    return (\n        <Container classes={'box-shadow sign'}>\n            <Row>\n\n                <Col size={'md-12'} >\n                    <Row>\n                        <div className={'mt-5'}>\n                            <h5 style={text}>\n                                <img style={logo} src={require('../../assets/img/Logo.png')} alt={'Logo'} />\n                        Log-in to your account\n                        </h5>\n                        </div>\n                    </Row>\n                    <Row >\n                        <form onSubmit={handleSubmit} className={'card-body'}>\n                            <div className={'form-group usr-inpt'}>\n                                <label>Email:</label>\n                                <span className=\"fa fa-user\" />\n                                <Input onChange={onInputChange}\n                                    name=\"email\" type=\"email\" placeholder=\"E-mail address\" />\n                            </div>\n                            <div className={'form-group usr-inpt'}>\n                                <label>Password:</label>\n                                <span className=\"fa fa-lock\" />\n                                <Input onChange={onInputChange}\n                                    name=\"password\" type=\"password\" placeholder=\"Password\" />\n                            </div>\n                            <Button classes={'btn btn-primary btn-lg btn-block'} type=\"submit\">Log In</Button>\n                        </form>\n                    </Row>\n                    <Row classes={'justify-content-center'}>\n                        <p> New here?\n                        <Link to=\"/signup\" > Sign up.</Link>\n                        </p>\n                    </Row>\n                </Col>\n\n            </Row>\n        </Container>\n    )\n}\nconst logo = {\n    width: \"100px\",\n    height: \"auto\"\n},\n\n    text = {\n        color: \"#a1deb6\",\n        textShadow: \"1px 1px #000\"\n    }\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { Button, Input } from '../../components/Forms';\nimport API from '../../utils/API';\n\nexport default function SignUp() {\n\n    const [credentials, setCredentials] = useState({}),\n\n        onInputChange = e => {\n            const { name, value } = e.target;\n            setCredentials({ ...credentials, [name]: value })\n        },\n\n        handleSubmit = e => {\n            e.preventDefault();\n            console.log(credentials)\n\n            API.register(credentials)\n                .then((res) =>\n                    console.log(res)\n                )\n                .catch((err) => console.log(err))\n\n\n            // setCredentials(e.target.value);\n            // e.target.reset();\n            /* More Code\n                Here...    */\n        }\n\n    return (\n        <Container classes={'box-shadow sign'}>\n            <Row>\n                <Col size={'md-12'} >\n                    <Row>\n                        <div className={'mt-5'}>\n                            <h5 style={text}>\n                                <img style={logo} src={require('../../assets/img/Logo.png')} alt={'Logo'} />\n                        Create your account\n                        </h5>\n                        </div>\n                    </Row>\n                    <Row >\n                        <form onSubmit={handleSubmit} className={'card-body'}>\n                            <div className={'form-group usr-inpt'}>\n                                <label>Email:</label>\n                                <span className=\"fa fa-user\" />\n                                <Input onChange={onInputChange}\n                                    name=\"email\" type=\"email\" placeholder=\"E-mail address\" />\n                            </div>\n                            <div className={'form-group usr-inpt'}>\n                                <label>Password:</label>\n                                <span className=\"fa fa-lock\" />\n                                <Input onChange={onInputChange}\n                                    name=\"password\" type=\"password\" placeholder=\"Password\" />\n                            </div>\n                            {/* <div className={'form-group usr-inpt'}>\n                                <label>Confirm Password:</label>\n                                <span className=\"fa fa-lock\" />\n                                <Input onChange={onInputChange}\n                                    name=\"passwordConfirm\" type=\"passwordConfirm\" placeholder=\"Confirm Password\" />\n                            </div> */}\n                            <Button\n                                classes={'btn btn-primary btn-lg btn-block'}\n                                type=\"submit\"\n                               >Sign Up</Button>\n                        </form>\n                    </Row>\n                    <Row classes={'justify-content-center'}>\n                        <p> Already have an account?\n                        <Link to=\"/SignIn\" > Log In.</Link>\n                        </p>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\nconst logo = {\n    width: \"100px\",\n    height: \"auto\"\n},\n\n    text = {\n        color: \"#a1deb6\",\n        textShadow: \"1px 1px #000\"\n    }","import React from 'react'\nimport { Col } from '../Grid';\nimport { Input, Button } from '../Forms';\n\n\nexport function ContactCard({ data, target, editState, toggleState, formSubmit }) {\n\nif (editState) {\n    return (\n        <div className={'mt-5'}>\n          <Col size={'md-12'}>\n                <Button className=\"fas fa-backspace fa-2x\" style={cancelBtn} \n                onClick={toggleState} />\n            </Col>\n            <form onSubmit={formSubmit} >\n                <div className={\"form-row\"}>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>First Name</label>\n                        <Input value={data.first_name} name=\"first_name\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Last Name</label>\n                        <Input value={data.last_name} name=\"last_name\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Nickname</label>\n                        <Input value={data.nickname} name=\"nickname\"\n                        style={input}\n                        placeholder={\"e.g. 'Mom'\"} \n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address Line 1</label>\n                        <Input value={data.address_one} name=\"address_one\"\n                        style={input}\n                        onChange={target} \n                        />                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address Line 2</label>\n                        <Input value={data.address_two} name=\"address_two\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>City</label>\n                        <Input value={data.city} name=\"city\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>State/Providence</label>\n                        <Input value={data.state} name=\"state\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Zip/Postal Code</label>\n                        <Input value={data.zip} name=\"zip\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Country</label>\n                        <Input value={data.country} name=\"country\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                    <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Phone Number</label>\n                        <Input value={data.phone} name=\"phone\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Email</label>\n                        <Input value={data.email} name=\"email\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    </div>\n                <Col size={'md-12'}>\n                <Button className=\"btn\" style={updtBtn} \n                    type=\"submit\" > <i className=\"fas fa-sync-alt fa-2x mr-2\"/> {' '}  \n                        {' '} update \n                    </Button>\n                </Col>\n            </form>\n        </div>\n    )\n    } else {\n        return (\n            <div className={'mt-5 gen-info'}>\n                <Col size={'md-12'} classes={'gen-edit'}>\n                    <Button className=\"fas fa-user-edit fa-2x\" style={editBtn} \n                        onClick={toggleState} \n                    />   \n                </Col>\n            <form>\n                <div className={\"form-row\"}>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>First Name:</label>\n                        <div style={fieldText}>{data.first_name}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Last Name:</label>\n                        <div style={fieldText}>{data.last_name}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Nickname:</label>\n                        <div style={fieldText}>{data.nickname}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address line 1:</label>\n                        <div style={fieldText}>{data.address_one}</div>\n                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address line 2:</label>\n                        <div style={fieldText}>{data.address_two}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>City:</label>\n                        <div style={fieldText}>{data.city}</div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>State/Providence:</label>\n                        <div style={fieldText}>{data.state}</div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Zip/Postal Code:</label>\n                        <div style={fieldText}>{data.zip}</div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Country:</label>\n                        <div style={fieldText}>{data.country}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Phone Number:</label>\n                        <div style={fieldText}>{data.phone}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Email:</label>\n                        <div style={fieldText}>{data.email}</div>\n                    </Col>\n                </div>\n            </form>\n         </div>\n        )\n    }\n}\n\nconst fieldText = {\n    fontStyle: 'italic',\n    fontWeight: '1000',\n    fontSize: '100%',\n    padding: '10px',\n    paddingLeft: '0',\n    color: 'black'\n},\neditBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'white',\n    backgroundColor: 'white'\n},\ncancelBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'tomato',\n    backgroundColor: 'white'\n},\nupdtBtn = {\n    float: 'right',\n    margin: '0',\n    backgroundColor: '#214c91',\n    color: 'white'\n},\ninput = {\n    borderBottom: '1px solid rgba(0, 0, 0, .2)',\n    transition: 'all 0.30s ease-in-out'\n}","import React from 'react'\nimport { Col } from '../Grid';\nimport { Input, Button, TextArea } from '../Forms';\n\n\nexport function HealthCard({ data, target, editState, toggleState, formSubmit }) {\n\n    const getAge = DOB => {\n\n        const today = new Date(),\n         birthDate = new Date(DOB),\n          month = today.getMonth() - birthDate.getMonth();\n        let age = today.getFullYear() - birthDate.getFullYear();\n          \n    return month < 0 || (month === 0 && today.getDate() < birthDate.getDate()) ? age - 1 : age;\n    },\n\n     bloodTypes = bloodType => {\n    \n        const types = ['Unknown', 'A-Positive', 'A-Negative', 'B-Positive', 'B-Negative', 'AB-Positive', 'AB-Negative', 'O-Positive', 'O-Negative']\n    \n    return types.map( type => type === bloodType ? <option selected>{bloodType}</option> : <option>{type}</option>)\n     };\n    \nif (editState) {\n    return (\n        <div className={'mt-5'}>\n          <Col size={'md-12'}>\n                <Button className=\"fas fa-backspace fa-2x\" style={cancelBtn} \n                onClick={toggleState} />\n            </Col>\n            <form onSubmit={formSubmit} >\n                <div className={\"form-row\"}>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Date of Birth</label>\n                        <Input name=\"dob\" placeholder=\"MM/DD/YYYY\"\n                        value={data.dob}\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Age</label>\n                        <div style={fieldText}>\n                            {getAge('06/12/1929')}\n                        </div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Blood Type</label>\n                        <select style={input} name=\"bloodType\" class=\"form-control\">\n                            {bloodTypes(data.bloodType)}\n                        </select>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Insurance Plan</label>\n                        <Input value={data.insurance} name=\"insurance\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Number</label>\n                        <Input value={data.insNumber} name=\"insNumber\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx BIN</label>\n                        <Input value={data.rxBin} name=\"rxBin\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx PCN</label>\n                        <Input value={data.rxPcn} name=\"rcPcn\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Allergies</label>\n                        <TextArea value={data.allergies} name=\"allergies\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Immunizations (include dates received)</label>\n                        <TextArea value={data.immunizations} name=\"immunizations\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Family History & Other Notes</label>\n                        <TextArea value={data.notes} name=\"notes\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <Col size={'md-12'}>\n                <Button className=\"btn\" style={updtBtn} \n                    type=\"submit\" > <i className=\"fas fa-sync-alt fa-2x mr-2\"/> {' '}  \n                        {' '} update \n                    </Button>\n                </Col>\n            </form>\n        </div>\n        )\n    } else {\n        return (\n            <div className={'mt-5 health-info'}>\n                <Col size={'md-12'} classes={'gen-edit'}>\n                    <Button className=\"fas fa-user-edit fa-2x\" style={editBtn} \n                        onClick={toggleState} \n                    />   \n                </Col>\n            <form>\n                <div className={\"form-row\"}>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Date of Birth:</label>\n                        <div style={fieldText}>{data.dob}</div>\n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Age:</label>\n                        <div style={fieldText}>\n                            {getAge(data.dob)}\n                        </div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Blood Type:</label>\n                        <div style={fieldText}>{data.bloodType}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Insurance Plan:</label>\n                        <div style={fieldText}>{data.insurance}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Number:</label>\n                        <div style={fieldText}>{data.insNumber}</div>\n                    </Col>\n        \n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx BIN:</label>\n                        <div style={fieldText}>{data.rxBin}</div>\n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx PCN:</label>\n                        <div style={fieldText}>{data.rxPcn}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Allergies:</label>\n                        <div style={fieldText}>{data.allergies}</div>\n                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Immunizations (include dates received):</label>\n                        <div style={fieldText}>{data.immunizations}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Family History & Other Notes:</label>\n                        <div style={fieldText}>{data.notes}</div>\n                    </Col>\n                </div>\n            </form>\n         </div>\n        )\n    }\n}\n\nconst fieldText = {\n    fontStyle: 'italic',\n    fontWeight: '1000',\n    fontSize: '100%',\n    padding: '10px',\n    paddingLeft: '0',\n    color: 'black'\n},\neditBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'white',\n    backgroundColor: 'white'\n},\ncancelBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'tomato',\n    backgroundColor: 'white'\n},\nupdtBtn = {\n    float: 'right',\n    margin: '0',\n    backgroundColor: '#214c91',\n    color: 'white'\n},\ninput = {\n    borderBottom: '1px solid rgba(0, 0, 0, .2)',\n    transition: 'all 0.30s ease-in-out'\n}","import React from 'react'\r\nimport { Col } from '../Grid';\r\nimport { Input, Button } from '../Forms';\r\n\r\nexport function Conditions({ data, target, editState, toggleState, formSubmit }) {\r\n\r\n    if (editState) {\r\n        return (\r\n            <div className={'mt-5'}>\r\n                <Col size={'md-12'}>\r\n                        <Button className=\"fas fa-backspace fa-2x\" style={cancelBtn} \r\n                        onClick={toggleState} />\r\n                </Col>\r\n            <form onSubmit={formSubmit} >\r\n                 <div className=\"form-row\" style={{background:'white'}}>\r\n                    <Col size={'md-6'} classes={'form-group'}>\r\n                        <label>Add New Condition</label>\r\n                        <Input name=\"conditionSearch\"\r\n                        style={input}\r\n                        onChange={target} \r\n                        />\r\n                    </Col>\r\n                        <Col size={'md-3'}>\r\n                        <Button className=\"btn\" style={addBtn}\r\n                         type=\"submit\" > <i className=\"fa fa-plus fa-2x mr-2\"/> \r\n                            {' '} Add \r\n                        </Button>\r\n                    </Col>\r\n                </div>\r\n                <div className={\"form-row\"}>\r\n                    <Col size={'md-12'} classes={'form-group'}>\r\n                        <label style={fieldText}>Heart Murmer:</label>\r\n                        <div >Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs. The passage is attributed to an unknown typesetter in the 15th century who is thought to have scrambled parts of Cicero's De Finibus Bonorum et Malorum for use in a type specimen book. It usually begins with:</div>\r\n                    </Col>\r\n                    <Col size={'md-12'} classes={'form-group'}>\r\n                        <label style={fieldText}>Diabetes:</label>\r\n                        <div> Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>\r\n                    </Col>\r\n                    <Col size={'md-12'} classes={'form-group'}>\r\n                        <label style={fieldText}>The Giggles:</label>\r\n                        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</div>\r\n                    </Col>\r\n                </div>\r\n            </form>\r\n            </div>\r\n        )\r\n        } else {\r\n        return (\r\n        <div className={'mt-5 condition-info'}>\r\n            <Col size={'md-12'} classes={'condition-edit'}>\r\n                <Button className=\"fas fa-user-edit fa-2x\" style={editBtn} \r\n                    onClick={toggleState} \r\n                />   \r\n            </Col>\r\n            <form>\r\n                <div className={\"form-row\"}>\r\n                    <Col size={'md-12'} classes={'form-group'}>\r\n                        <label style={fieldText}>Heart Murmer:</label>\r\n                        <div >Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs. The passage is attributed to an unknown typesetter in the 15th century who is thought to have scrambled parts of Cicero's De Finibus Bonorum et Malorum for use in a type specimen book. It usually begins with:</div>\r\n                    </Col>\r\n                    <Col size={'md-12'} classes={'form-group'}>\r\n                        <label style={fieldText}>Diabetes:</label>\r\n                        <div> Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>\r\n                    </Col>\r\n                    <Col size={'md-12'} classes={'form-group'}>\r\n                        <label style={fieldText}>The Giggles:</label>\r\n                        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</div>\r\n                    </Col>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    }\r\nconst fieldText = {\r\n    fontStyle: 'italic',\r\n    fontWeight: '1000',\r\n    fontSize: '100%',\r\n    padding: '10px',\r\n    paddingLeft: '0',\r\n    color: 'black'\r\n},\r\neditBtn = {\r\n    float: 'right',\r\n    border: 'none',\r\n    margin: '0',\r\n    color: 'white',\r\n    backgroundColor: 'white'\r\n},\r\ncancelBtn = {\r\n    float: 'right',\r\n    border: 'none',\r\n    margin: '0',\r\n    color: 'tomato',\r\n    backgroundColor: 'white'\r\n},\r\naddBtn = {\r\n    marginTop: '30px',\r\n    color: '#214c91',\r\n    size: '10em'\r\n},\r\ninput = {\r\n    borderBottom: '1px solid rgba(0, 0, 0, .2)',\r\n    transition: 'all 0.30s ease-in-out'\r\n}","import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { Input } from '../../components/Forms';\nimport { ContactCard } from '../../components/ContactCard';\nimport { HealthCard } from '../../components/HealthCard';\nimport { Conditions } from '../../components/Conditions';\nimport API from '../../utils/API';\n\nexport default function EHR({ usrId }) {\n\n    const [ generalInfo, setGeneralInfo ] = useState({\n        first_name: 'Anne',\n        last_name: 'Frank',\n        nickname: 'Mrs. Quack',\n        address_one: '555 Somewhere',\n        address_two: 'Apt 7',\n        city: 'Frankfurt',\n        state: 'Darmstadt',\n        zip: '12345',\n        country: 'Germany',\n        phone: '(264) 224-1234',\n        email: 'quacky123@gmail.com'\n    }),\n     [ healthInfo, setHealthInfo ] = useState({\n        dob: '06/12/1929',\n        bloodType: 'A-Negative',\n        insurance: 'Keystone POS Flex',\n        insNumber: 'QCG130515482-01',\n        rxBin: '123456',\n        rxPcn: '060503900',\n        allergies: 'Peanuts, Shellfish, People',\n        immunizations: 'HPV on 5/16/2018',\n        notes: 'Breast Cancer!!  Patient likes talk a lot.',\n    }),\n        [ editGenState, setGenState ]= useState(false),\n        [ editHealthState, setHealthState ]= useState(false),\n        [ editConditState, setConditState ]= useState(false),\n        [ conditions, setConditions ]= useState({}),\n        [ conditionSearch, setConditionSearch ]= useState('');\n    \n    useEffect(() => {\n        searchCondition()\n    }, [conditionSearch])\n\n    const onGenInfoInputChange = e => {\n        const { name, value } = e.target;\n        setGeneralInfo({...generalInfo, [name]: value })\n    }, \n\n    onHealthInfoInputChange = e => {\n        const { name, value } = e.target;\n        setHealthInfo({...healthInfo, [name]: value })\n    }, \n\n    onConditionSearchChange = e => {\n        const { name, value } = e.target;\n        setConditionSearch({...conditionSearch, [name]: value })\n    }, \n\n    updateDB = e => {\n        e.preventDefault()\n          API.updateEHR(usrId, generalInfo)\n          .then( data => {\n              if (data.status === 'success') {\n                console.log('Updated record!', 'green')\n             } else  {\n                console.log('Fail to update record.', 'red')\n             }  \n          })\n    },\n\n    searchCondition = async() => {\n        \n        const { data } = await API.getCondition(conditionSearch),\n           \n         results = data[3].map( x => x[0] );\n            console.log(results);\n    };\n\n\n    return (\n        <Container>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <ContactCard\n                        toggleState={() => setGenState(!editGenState)} \n                        editState={editGenState} \n                        data={generalInfo}\n                        target={onGenInfoInputChange}\n                        formSubmit={updateDB}\n                        />\n                </Col>\n           </Row>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <HealthCard \n                        toggleState={() => setHealthState(!editHealthState)}\n                        editState={editHealthState} \n                        data={healthInfo}\n                        target={onHealthInfoInputChange}\n                        formSubmit={updateDB}\n                    />\n                </Col>\n           </Row>\n           <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <Conditions\n                        toggleState={() => setConditState(!editConditState)}\n                        editState={editConditState} \n                        target={onConditionSearchChange}\n                        formSubmit={updateDB}\n                      />\n                {/* <Input onChange={onConditionSearchChange} name=\"conditionSearch\" /> */}\n                </Col>\n           </Row>\n        </Container>\n    )\n}\n\n","import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from '../../components/Grid';\nimport \"./Medications.css\";\nimport API from \"../../utils/API\";\n\nfunction Medications() {\n    const [drugs, setDrugs] = useState([])\n\n    //load all drugs and store them \n    useEffect(() => {\n        loadDrugs()\n    }, [])\n\n    //loads all drugs and set them to drugs... needs to be fixed later so that there's one to load drugs and then one for the btn (modal?)\n    function loadDrugs() {\n        API.getDrugInfo()\n            .then(res =>\n                console.log(res.data)\n            )\n            .catch(err => console.log(err));\n    };\n\n    return ( \n        <Container>\n    <div class=\"table-responsive\">\n                <table class=\"table\">\n                    <tbody>\n                            <tr class=\"accordion-toggle collapsed\" id=\"accordion1\" data-toggle=\"collapse\" data-parent=\"#accordion1\" href=\"#collapseOne\">\n                                <td class=\"expand-button\"></td>\n                                <td>Amlodipine</td>\n\n                            </tr>\n                            <tr class=\"hide-table-padding\">\n                            <td></td>\n                            <td colspan=\"3\">\n                            <div id=\"collapseOne\" class=\"collapse in p-3\">\n                            <div class=\"row\">\n                                <div class=\"col-2\">Pill Description</div>\n                                <div class=\"col-6\">value 1</div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-2\">Dosage</div>\n                                <div class=\"col-6\">value 2</div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-2\">Frequency</div>\n                                <div class=\"col-6\">value 3</div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-2\">Reason</div>\n                                <div class=\"col-6\">value 4</div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-2\">Pharmacy</div>\n                                <div class=\"col-6\">value 3</div>\n                            </div>\n                            </div></td>\n                            </tr>\n                            <tr class=\"accordion-toggle collapsed\" id=\"accordion1\" data-toggle=\"collapse\" data-parent=\"#accordion1\" href=\"#collapseOne\">\n                                <td class=\"expand-button\"></td>\n                                <td>Metformin</td>\n\n                            </tr>\n                            <tr class=\"hide-table-padding\">\n                            <td></td>\n                            <td colspan=\"3\">\n                            <div id=\"collapseOne\" class=\"collapse in p-3\">\n                            <div class=\"row\">\n                                <div class=\"col-2\">Drug Code</div>\n                                <div class=\"col-6\">value 1</div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-2\">Dosage</div>\n                                <div class=\"col-6\">value 2</div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-2\">Frequency</div>\n                                <div class=\"col-6\">value 3</div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-2\">Reason</div>\n                                <div class=\"col-6\">value 4</div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-2\">Pharmacy</div>\n                                <div class=\"col-6\">value 3</div>\n                            </div>\n                            </div></td>\n                            </tr>\n                        </tbody>\n                </table>\n                </div>\n            </Container>\n    );\n}\n\nexport default Medications;","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nexport default function Profiles({name}) {\n\n\n    return (\n        <Link to='/ehr' style={{textDecoration: 'none'}} >\n            <div className=\"card box-shadow mt-5\">\n            <div className=\"card-body text-center\">\n                <h2 className=\"card-title\">{name}</h2>\n                <p className=\"card-text\"> Access First_Name's information here</p>\n            </div>\n            </div>\n        </Link>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col } from '../../components/Grid';\nimport Profiles from '../../components/ProfileList'; \nimport API from \"../../utils/API\";\n\nexport default function Profile() {\n\n    const [user, setUser] = useState();\n    const [patients, setPatients] = useState();\n\n    useEffect(() => {\n        getUser()\n    }, [])\n\n    useEffect(() => {\n        getPatients()\n    }, [user])\n\n\n    const getUser = async () => {\n        \n        const { user } = await API.fetchUser()\n        setUser(user)\n    }\n\n    const getPatients = async () => {\n        \n        const { data } = await API.fetchAccount()\n\n            /* code here depends on schema but something like... */\n            // const clients = data.patients;\n            // setPatients(clients)\n    }\n            \n\n\n    return (\n        <Container>\n            <Row>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <Profiles props={patients} name={\"User's Name\"} />\n                    <Profiles name={\"First Care Recipient\"} />\n                    <Profiles name={\"Second Care Recipient\"} />\n                </Col>\n           </Row>\n        \n            <br></br>\n            <div>\n            <button type=\"button\" class=\"btn\" href='../UserInfo'>Add Profile</button>\n            </div>\n        </Container>\n    )\n}\n","import React, {useState} from 'react'\nimport { Link, useLocation as location } from 'react-router-dom'\nimport { Button } from '../Forms'\nimport { Collapse } from '../Grid'\n\nexport default function navBar() {\n\n    let [navLinks, showNavLinks] = useState(false)\n\n    const toggleNav = () => showNavLinks(navLinks = !navLinks)\n\n    const { pathname } = location();\n\n    return (\n        <nav className={'navbar navbar-expand-lg navbar-light bg-light'}>\n            <Link to='/' className={'navbar-brand'}><em>my</em>ERH</Link>\n            <button onClick={toggleNav} className={'navbar-toggler'} type=\"button\" data-toggle=\"collapse\" data-target=\"#target-collapse\" >\n            <span className=\"navbar-toggler-icon\"></span>\n            </button>\n                \n\n            <Collapse navState={navLinks} id={'target-collapse'}>\n              <ul className=\"navbar-nav mr-auto\">\n                <li className={pathname === \"/\" ? \"nav-item active\" : \"nav-item\"}>\n                    <Link to=\"/\" className={'nav-link'}>\n                        Home\n                    </Link>    \n                </li>\n                <li className={pathname === \"/profiles\" ? \"nav-item active\" : \"nav-item\"}>\n                    <Link to=\"/profiles\" className={'nav-link'}>\n                        profiles\n                    </Link>    \n                </li>\n                <li className={pathname === \"/ehr\" ? \"nav-item active\" : \"nav-item\"}>\n                    <Link to=\"/ehr\" className={'nav-link'}>\n                        health record\n                    </Link>    \n                </li>\n                <li className={pathname === \"/contacts\" ? \"nav-item active\" : \"nav-item\"}>\n                    <Link to=\"/contacts\" className={'nav-link'}>\n                        contacts\n                    </Link>    \n                </li>\n              </ul>\n                <div>\n                    <Link to='/signin' >\n                        <Button className={'btn btn-outline-primary m-2'} type='button'>\n                            Log In\n                         </Button>\n                    </Link>\n                    <Link to='/signup' >\n                        <Button className={'btn btn-outline-primary m-2'} type='button'>\n                            Sign Up\n                         </Button>\n                    </Link>\n\n               \n                </div>\n            </Collapse>\n        </nav>\n    )\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Landing from \"./pages/Landing\";\nimport SignIn from \"./pages/SignIn\";\nimport SignUp from \"./pages/SignUp\";\nimport EHR from \"./pages/EHR\";\nimport Medications from \"./pages/Medications\";\nimport Profiles from \"./pages/Profiles\";\nimport NavBar from './components/Navbar';\nimport './assets/css/bootstrap.min.css'\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <NavBar />\n        <Route exact path=\"/\"> <Landing /> </Route>\n        <Route exact path=\"/signIn\"> <SignIn /> </Route>\n        <Route exact path=\"/signUp\"> <SignUp /> </Route>\n        <Route exact path=\"/profiles\"> <Profiles /> </Route>\n        <Route exact path=\"/ehr\"> <EHR /> </Route>\n        <Route exact path=\"/medications\"> <Medications /> </Route>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nrequire('dotenv').config();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}