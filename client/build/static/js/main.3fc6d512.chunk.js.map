{"version":3,"sources":["assets/img/Logo.png","components/Grid/index.js","components/Forms/index.js","pages/Landing/Landing.js","utils/API.js","Auth.js","pages/SignIn/SignIn.js","pages/SignUp/SignUp.js","components/ContactCard/index.js","components/HealthCard/index.js","components/Conditions/index.js","pages/EHR/EHR.js","pages/Medications/Medications.js","components/ProfileList/index.js","pages/Patients/Patients.js","components/Navbar/index.js","ProtectedRoute.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Container","_ref","classes","children","react_default","a","createElement","className","concat","Row","_ref2","Col","_ref3","size","split","map","join","Collapse","_ref4","navState","id","Input","props","Object","assign","TextArea","Button","LoggerBtn","btnType","type","Landing","Grid_Container","class","href","role","require","config","apiKey","process","API","_getDrugs$getDrugInfo","getDrugs","axios","get","getDrugInfo","getConditionNames","search","catch","err","console","log","fetchCondition","defineProperty","then","data","credentials","email","password","post","src_Auth","Auth","classCallCheck","this","authenticated","cb","SignIn","history","useHistory","_useState","useState","_useState2","slicedToArray","setCredentials","onInputChange","e","target","name","_e$target","value","objectSpread","Grid_Row","Grid_Col","style","text","logo","src","alt","onSubmit","preventDefault","reset","login","status","push","onChange","placeholder","react_router_dom","to","width","height","color","textShadow","SignUp","useEffect","fetchUser","getUser","res","register","ContactCard","editState","toggleState","formSubmit","cancelBtn","onClick","firstName","input","lastName","nickname","addressOne","addressTwo","city","state","zip","country","phone","updtBtn","editBtn","fieldText","fontStyle","fontWeight","fontSize","padding","paddingLeft","float","border","margin","backgroundColor","borderBottom","transition","HealthCard","bloodType","getAge","DOB","today","Date","birthDate","month","getMonth","age","isNaN","getFullYear","getDate","dob","selected","insurance","insNumber","rxBin","rxPcn","allergies","immunizations","notes","Conditions","renderSuggestions","toggleDescState","editDescState","getRowHeight","length","background","addBtn","conditions","_this","condition","i","key","bind","removeBtn","littleEditBtn","description","rows","renderEditConditions","renderConditions","marginTop","focus","EHR","usrId","first_name","last_name","address_one","address_two","generalInfo","setGeneralInfo","_useState3","_useState4","healthInfo","setHealthInfo","_useState5","_useState6","setConditions","_useState7","_useState8","editGenState","setGenState","_useState9","_useState10","editHealthState","setHealthState","_useState11","_useState12","editConditState","setConditState","_useState13","_useState14","descEditState","setDescEditState","_useState15","_useState16","conditSuggestions","setConditSuggestions","_useState17","_useState18","onConditInputChange","asyncToGenerator","regenerator_default","mark","_callee","items","suggestions","regex","wrap","_context","prev","next","sent","RegExp","sort","filter","x","test","stop","_x","apply","arguments","_callee2","_yield$API$getConditi","_context2","abrupt","_x2","updateDB","updateEHR","addCondition","_callee3","_text$split","_text$split2","_yield$API$fetchCondi","_context3","shortdef","toConsumableArray","_x3","loadProfiles","fetchPatients","_e$target2","suggestion","Medications","data-toggle","data-parent","colspan","Profiles","textDecoration","Patients","user","setUser","patients","getPatients","_yield$API$getUser","_yield$API$fetchPatie","isAuthenticated","navBar","navLinks","showNavLinks","logout","pathname","location","data-target","Grid_Collapse","display","ProtectedRoute","Component","component","rest","objectWithoutProperties","react_router","render","from","App","path","exact","pages_Medications_Medications","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","src_App","document","getElementById","URL","origin","addEventListener","fetch","response","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3fc6d512.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.dfab9e19.png\";","import React from 'react'\n\n        \nexport const Container = ({ classes, children }) => <div className={`container ${classes}`}>{children}</div>\n\nexport const Row = ({ classes, children }) => <div className={`row ${classes}`}>{children}</div>\n\nexport const Col = ({ size, classes, children }) => {\n    return ( <div \n        className={size.split(' ').map( size => `col-${size}`).join(' ')\n        +\" \"+ classes}>{children}</div>\n    )\n    }\n\nexport const Collapse = ({ navState, children, id }) => { \n    const classes = navState ? 'navbar-collapse collapse show' : 'navbar-collapse collapse';\n\n     return <div className={classes} id={id}>{children}</div>\n}","import React from 'react'\n\n\n\nexport function Input(props) {\n    return (\n        <input className=\"form-control\" {...props} />\n    );\n  }\n  \nexport function TextArea(props) {\n    return (\n        <textarea className=\"form-control\" {...props} />\n    );\n  }\n\nexport function Button(props) {\n    return (\n        <button {...props} >\n          {props.children}\n        </button>\n    );\n  }\n  export function LoggerBtn({ btnType }) { \n    \n      return (\n        <Button className={'btn btn-primary btn-lg btn-block'} \n        type=\"submit\">\n          {btnType}\n        </Button>\n      )\n  }\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { Button, Input } from '../../components/Forms';\n\nexport default function Landing() {\n\n    return (\n        <Container>\n            <div class=\"jumbotron\">\n                <h1 class=\"display-4\">My EHR</h1>\n                <p class=\"lead\">All your medical records in one place.</p>\n                <hr class=\"my-4\"/>\n                <p></p>\n                <a class=\"btn btn-primary btn-lg\" href=\"../SignUp\" role=\"button\">Get Started</a>\n            </div>\n        </Container>\n    )\n}\n\n","import axios from \"axios\";\nrequire('dotenv').config();\nconst apiKey = process.env.REACT_APP_API_KEY;\n// webstersKey = '6bbfacfd-a9a0-44da-a339-83be451e5de0'\n\nexport default {\n    getDrugs: function () {\n        return axios.get(\"/api/drugs\");\n    },\n    //this will be executed when the user selects \"get more info\" btn\n    getDrugInfo: function () {\n        return axios.get(`https://www.dictionaryapi.com/api/v3/references/medical/json/cetirizine?key=${apiKey}`);\n    },\n\n    getConditionNames: function(search) {\n        return axios.get(`https://clinicaltables.nlm.nih.gov/api/conditions/v3/search?terms=${search}&sf=primary_name,consumer_name&df=primary_name,consumer_name,info_link_data`)\n            .catch(err => console.log(err))\n    },\n\n\n    fetchCondition: function(search) {\n        return axios.get(`https://www.dictionaryapi.com/api/v3/references/medical/json/${search}?key=${apiKey}`)\n            .catch(err => console.log(err))\n    },\n\n    fetchCondition: function (search) {\n        return axios.get(`https://www.dictionaryapi.com/api/v3/references/medical/json/${search}?key=${apiKey}`)\n            .catch(err => console.log(err))\n    },\n\n    fetchPatients: function() {\n        return axios.get(\"/load\");\n  \n    },\n\n    getUser: () => {\n        return axios.get('/api/users').then( data => data )\n    },\n\n    register: function(credentials) {\n        // console.log(\"in API.register\");\n        // console.log(credentials);\n        const { email, password } = credentials\n        return axios.post('api/users/register', { email, password })\n    },\n\n    login: function(credentials) {\n        const { email, password } = credentials;\n        return axios.post('/api/users/login', { email, password })\n    }\n\n}\n","\nclass Auth {\n\n   constructor() {\n       this.authenticated = false;\n   }\n    login(cb) {\n        this.authenticated = true\n        cb()\n    }\n    logout(cb) {\n        this.authenticated = false\n        cb()\n    }\n    isAuthenticated() {\n        return this.authenticated;\n    }\n}\n\nexport default new Auth();","import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { LoggerBtn, Input } from '../../components/Forms';\nimport API from '../../utils/API';\nimport Auth from '../../Auth'\n\nexport default function SignIn(props) {\n\n    let history = useHistory();\n    const [credentials, setCredentials] = useState({}),\n\n    onInputChange = e => {\n        console.log(e.target.name)\n        const { name, value } = e.target;\n        setCredentials({...credentials, [name]: value })\n    },\n\n     authorize = () => {\n        Auth.login(() => {\n          history.push(\"/profiles\")\n        })\n      },\n       \n     handleSubmit = e => {\n        e.preventDefault();\n        e.target.reset();\n        \n        API.login(credentials)\n            .then(({ data }) => { \n             \n              if(data.status === 'success') {\n                authorize()\n              } else {\n                console.log('Login failed.  Please try again.')\n                }\n          }).catch((err) => err)\n    }\n    \n    return (\n        <Container classes={'box-shadow sign'}>\n            <Row>\n\n                <Col size={'md-12'} >\n                    <Row>\n                        <div className={'mt-5'}>\n                            <h5 style={text}>\n                                <img style={logo} src={require('../../assets/img/Logo.png')} alt={'Logo'} />\n                        Log-in to your account\n                        </h5>\n                        </div>\n                    </Row>\n                    <Row >\n                        <form onSubmit={handleSubmit} className={'card-body'}>\n                            <div className={'form-group usr-inpt'}>\n                                <label>Email:</label>\n                                <span className=\"fa fa-user\" />\n                                <Input onChange={onInputChange}\n                                    name=\"email\" type=\"email\" placeholder=\"E-mail address\" />\n                            </div>\n                            <div className={'form-group usr-inpt'}>\n                                <label>Password:</label>\n                                <span className=\"fa fa-lock\" />\n                                <Input onChange={onInputChange}\n                                    name=\"password\" type=\"password\" placeholder=\"Password\" />\n                            </div>\n\n\n                            <LoggerBtn btnType={'log in'} />\n\n                        </form>\n\n                    </Row>\n                    <Row classes={'justify-content-center'}>\n                        <p> New here?\n                        <Link to=\"/signup\" > Sign up.</Link>\n                        </p>\n                    </Row>\n                </Col>\n\n            </Row>\n        </Container>\n    )\n}\n\nconst logo = {\n    width: \"100px\",\n    height: \"auto\"\n},\n\ntext = {\n    color: \"#a1deb6\",\n    textShadow: \"1px 1px #000\"\n}\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { LoggerBtn, Input } from '../../components/Forms';\nimport API from '../../utils/API';\n\nexport default function SignUp() {\n\n    const [credentials, setCredentials] = useState({}),\n     \n\n        onInputChange = e => {\n            const { name, value } = e.target;\n            setCredentials({ ...credentials, [name]: value })\n        };\n\n        useEffect(() => {\n            fetchUser()\n        }, [])\n        const fetchUser = () => {\n            API.getUser()\n            .then( res => console.log(res.data))\n        }\n\n       const  handleSubmit = e => {\n            e.preventDefault();\n            console.log(credentials)\n\n            API.register(credentials)\n                .then((res) =>\n                    console.log(res)\n                )\n                .catch((err) => console.log(err))\n        }\n\n    return (\n        <Container classes={'box-shadow sign'}>\n            <Row>\n                <Col size={'md-12'} >\n                    <Row>\n                        <div className={'mt-5'}>\n                            <h5 style={text}>\n                                <img style={logo} src={require('../../assets/img/Logo.png')} alt={'Logo'} />\n                        Create your account\n                        </h5>\n                        </div>\n                    </Row>\n                    <Row >\n                        <form onSubmit={handleSubmit} className={'card-body'}>\n                            <div className={'form-group usr-inpt'}>\n                                <label>Email:</label>\n                                <span className=\"fa fa-user\" />\n                                <Input onChange={onInputChange}\n                                    name=\"email\" type=\"email\" placeholder=\"E-mail address\" />\n                            </div>\n                            <div className={'form-group usr-inpt'}>\n                                <label>Password:</label>\n                                <span className=\"fa fa-lock\" />\n                                <Input onChange={onInputChange}\n                                    name=\"password\" type=\"password\" placeholder=\"Password\" />\n                            </div>\n                    \n                            <LoggerBtn btnType={'Sign Up'} />\n\n                        </form>\n                    </Row>\n                    <Row classes={'justify-content-center'}>\n                        <p> Already have an account?\n                        <Link to=\"/SignIn\" > Log In.</Link>\n                        </p>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\nconst logo = {\n    width: \"100px\",\n    height: \"auto\"\n},\n\n    text = {\n        color: \"#a1deb6\",\n        textShadow: \"1px 1px #000\"\n    }","import React from 'react'\nimport { Col } from '../Grid';\nimport { Input, Button } from '../Forms';\n\n\nexport function ContactCard({ data, target, editState, toggleState, formSubmit }) {\n\nif (editState) {\n    return (\n        <div className={'mt-5'}>\n          <Col size={'md-12'}>\n                <Button className=\"fas fa-backspace fa-2x\" style={cancelBtn} \n                onClick={toggleState} />\n            </Col>\n            <form onSubmit={formSubmit} >\n                <div className={\"form-row\"}>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>First Name</label>\n                        <Input value={data.firstName} name=\"firstName\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Last Name</label>\n                        <Input value={data.lastName} name=\"lastName\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Nickname</label>\n                        <Input value={data.nickname} name=\"nickname\"\n                        style={input}\n                        placeholder={\"e.g. 'Mom'\"} \n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address Line 1</label>\n                        <Input value={data.addressOne} name=\"addressOne\"\n                        style={input}\n                        onChange={target} \n                        />                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address Line 2</label>\n                        <Input value={data.addressTwo} name=\"addressTwo\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>City</label>\n                        <Input value={data.city} name=\"city\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>State/Providence</label>\n                        <Input value={data.state} name=\"state\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Zip/Postal Code</label>\n                        <Input value={data.zip} name=\"zip\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Country</label>\n                        <Input value={data.country} name=\"country\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                    <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Phone Number</label>\n                        <Input value={data.phone} name=\"phone\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Email</label>\n                        <Input value={data.email} name=\"email\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    </div>\n                <Col size={'md-12'}>\n                <Button className=\"btn\" style={updtBtn} \n                    type=\"submit\" > <i className=\"fas fa-sync-alt fa-2x mr-2\"/> {' '}  \n                        {' '} update \n                    </Button>\n                </Col>\n            </form>\n        </div>\n    )\n    } else {\n        return (\n            <div className={'mt-5 gen-info'}>\n                <Col size={'md-12'} classes={'gen-edit'}>\n                    <Button className=\"fas fa-user-edit fa-2x\" style={editBtn} \n                        onClick={toggleState} \n                    />   \n                </Col>\n            <form>\n                <div className={\"form-row\"}>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>First Name:</label>\n                        <div style={fieldText}>{data.firstName}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Last Name:</label>\n                        <div style={fieldText}>{data.lastName}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Nickname:</label>\n                        <div style={fieldText}>{data.nickname}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address line 1:</label>\n                        <div style={fieldText}>{data.addressOne}</div>\n                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address line 2:</label>\n                        <div style={fieldText}>{data.addressTwo}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>City:</label>\n                        <div style={fieldText}>{data.city}</div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>State/Providence:</label>\n                        <div style={fieldText}>{data.state}</div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Zip/Postal Code:</label>\n                        <div style={fieldText}>{data.zip}</div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Country:</label>\n                        <div style={fieldText}>{data.country}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Phone Number:</label>\n                        <div style={fieldText}>{data.phone}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Email:</label>\n                        <div style={fieldText}>{data.email}</div>\n                    </Col>\n                </div>\n            </form>\n         </div>\n        )\n    }\n}\n\nconst fieldText = {\n    fontStyle: 'italic',\n    fontWeight: '1000',\n    fontSize: '100%',\n    padding: '10px',\n    paddingLeft: '0',\n    color: 'black'\n},\neditBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'white',\n    backgroundColor: 'white'\n},\ncancelBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'tomato',\n    backgroundColor: 'white'\n},\nupdtBtn = {\n    float: 'right',\n    margin: '0',\n    backgroundColor: '#214c91',\n    color: 'white'\n},\ninput = {\n    borderBottom: '1px solid rgba(0, 0, 0, .2)',\n    transition: 'all 0.30s ease-in-out'\n}","import React from 'react'\nimport { Col } from '../Grid';\nimport { Input, Button, TextArea } from '../Forms';\n\n\nexport function HealthCard({ data, target, editState, toggleState, formSubmit }) {\n\n    const getAge = DOB => {\n\n        const today = new Date(),\n         birthDate = new Date(DOB),\n          month = today.getMonth() - birthDate.getMonth();\n        let age = isNaN(age) ? '??' : today.getFullYear() - birthDate.getFullYear();\n          \n    return month < 0 || (month === 0 && today.getDate() < birthDate.getDate()) ? age - 1 : age;\n    },\n\n     bloodTypes = bloodType => {\n    \n        const types = ['Unknown', 'A-Positive', 'A-Negative', 'B-Positive', 'B-Negative', 'AB-Positive', 'AB-Negative', 'O-Positive', 'O-Negative']\n    \n    return types.map( type => type === bloodType ? <option selected>{bloodType}</option> : <option>{type}</option>)\n     };\n    \nif (editState) {\n    return (\n        <div className={'mt-5'}>\n          <Col size={'md-12'}>\n                <Button className=\"fas fa-backspace fa-2x\" style={cancelBtn} \n                onClick={toggleState} />\n            </Col>\n            <form onSubmit={formSubmit} >\n                <div className={\"form-row\"}>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Date of Birth</label>\n                        <Input name=\"dob\" placeholder=\"MM/DD/YYYY\"\n                        value={data.dob}\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Age</label>\n                        <div style={fieldText}>\n                            {getAge('06/12/1929')}\n                        </div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Blood Type</label>\n                        <select style={input} name=\"bloodType\" class=\"form-control\">\n                            {bloodTypes(data.bloodType)}\n                        </select>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Insurance Plan</label>\n                        <Input value={data.insurance} name=\"insurance\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Number</label>\n                        <Input value={data.insNumber} name=\"insNumber\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx BIN</label>\n                        <Input value={data.rxBin} name=\"rxBin\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx PCN</label>\n                        <Input value={data.rxPcn} name=\"rcPcn\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Allergies</label>\n                        <TextArea value={data.allergies} name=\"allergies\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Immunizations (include dates received)</label>\n                        <TextArea value={data.immunizations} name=\"immunizations\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Family History & Other Notes</label>\n                        <TextArea value={data.notes} name=\"notes\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <Col size={'md-12'}>\n                <Button className=\"btn\" style={updtBtn} \n                    type=\"submit\" > <i className=\"fas fa-sync-alt fa-2x mr-2\"/> {' '}  \n                        {' '} update \n                    </Button>\n                </Col>\n            </form>\n        </div>\n        )\n    } else {\n        return (\n            <div className={'mt-5 health-info'}>\n                <Col size={'md-12'} classes={'gen-edit'}>\n                    <Button className=\"fas fa-user-edit fa-2x\" style={editBtn} \n                        onClick={toggleState} \n                    />   \n                </Col>\n            <form>\n                <div className={\"form-row\"}>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Date of Birth:</label>\n                        <div style={fieldText}>{data.dob}</div>\n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Age:</label>\n                        <div style={fieldText}>\n                            {getAge(data.dob)}\n                        </div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Blood Type:</label>\n                        <div style={fieldText}>{data.bloodType}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Insurance Plan:</label>\n                        <div style={fieldText}>{data.insurance}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Number:</label>\n                        <div style={fieldText}>{data.insNumber}</div>\n                    </Col>\n        \n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx BIN:</label>\n                        <div style={fieldText}>{data.rxBin}</div>\n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx PCN:</label>\n                        <div style={fieldText}>{data.rxPcn}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Allergies:</label>\n                        <div style={fieldText}>{data.allergies}</div>\n                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Immunizations (include dates received):</label>\n                        <div style={fieldText}>{data.immunizations}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Family History & Other Notes:</label>\n                        <div style={fieldText}>{data.notes}</div>\n                    </Col>\n                </div>\n            </form>\n         </div>\n        )\n    }\n}\n\nconst fieldText = {\n    fontStyle: 'italic',\n    fontWeight: '1000',\n    fontSize: '100%',\n    padding: '10px',\n    paddingLeft: '0',\n    color: 'black'\n},\neditBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'white',\n    backgroundColor: 'white'\n},\ncancelBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'tomato',\n    backgroundColor: 'white'\n},\nupdtBtn = {\n    float: 'right',\n    margin: '0',\n    backgroundColor: '#214c91',\n    color: 'white'\n},\ninput = {\n    borderBottom: '1px solid rgba(0, 0, 0, .2)',\n    transition: 'all 0.30s ease-in-out'\n}","import React, { useState } from 'react'\nimport { Col } from '../Grid';\nimport { Input, Button, TextArea } from '../Forms';\n\n\n\nexport function Conditions({ data, target, editState, toggleState, formSubmit, renderSuggestions, text, toggleDescState, editDescState }) {\n\n    const renderConditions = conditions => {\n      return (\n          conditions.map( (condition, i) => \n            <Col key={i} size={'md-12'} classes={'form-group'}>\n                <label style={fieldText}>\n                    {condition.name} \n                    {' '}\n                    </label>\n                <div>\n                    {condition.description}\n                    </div>\n            </Col>\n         )\n        )\n     },\n\n    renderAddConditions = conditions => {\n      return (\n          conditions.map( (condition, i) => \n            <Col key={i} size={'md-12'} classes={'form-group'}>\n                <label style={fieldText}>\n                    {condition.name} {' '}\n                    <Button className=\"fas fa-pen\" style={{border:'none'}}\n                        onClick={toggleDescState}\n                        />\n                    <Button className=\"fas fa-times\" style={removeBtn}\n                        onClick={toggleState}  \n                        />\n                    </label>\n                <div>\n                    {condition.description}\n                    </div>\n            </Col>\n         )\n        )\n     };\n    function renderEditConditions(conditions) {\n        console.log(conditions)\n      return (\n          conditions.map( (condition, i) => \n            <Col key={i} size={'md-12'} classes={'form-group'}>\n                <label style={fieldText}>\n                    {condition.name} {' '}\n                    <Button className=\"fas fa-pen\" style={{border:'none'}}\n                        onClick={toggleDescState.bind(this,i)} \n                        />\n                    <Button className=\"fas fa-times\" style={removeBtn}\n                        onClick={toggleState}  \n                        />\n                    <Button className=\"fas fa-sync-alt\" style={littleEditBtn}\n                        onClick={toggleState}  \n                        />\n                </label>\n                <form>\n                    <TextArea value={condition.description} name=\"desc\"\n                    rows={getRowHeight(condition.description)}\n                    style={input} \n                    />\n                    </form>\n            </Col>\n         )\n        )\n     }\n     const getRowHeight = (text) =>  text.length > 250 ? text.length/100 : 3;\n     \n    \n\n    if ((editState || data.length === 0) && !editDescState) {\n        return (\n            <div className={'mt-5'}>\n                <Col size={'md-12'}>\n                        <Button className=\"fas fa-backspace fa-2x\" style={cancelBtn} \n                        onClick={toggleState} />\n                </Col>\n            <form onSubmit={formSubmit} >\n                 <div className=\"form-row\" style={{background:'white'}}>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Add New Condition</label>\n                        <div>\n                            <Input type=\"text\"\n                            style={input}\n                            value={text}\n                            onChange={target} \n                            />\n                            {renderSuggestions()}\n                        </div>\n                    </Col>\n                        <Col size={'md-3'}>\n                        <Button className=\"btn\" style={addBtn}\n                         type=\"submit\" > <i className=\"fa fa-plus fa-2x mr-2\"/> \n                            {' '} Add \n                        </Button>\n                    </Col>\n                </div>\n                <div className={\"form-row\"}>\n\n                    {renderAddConditions(data)}\n                    \n                </div>\n            </form>\n            </div>\n        )\n        } else if (editDescState) {\n        return (\n            <div className={'mt-5'}>\n            <Col size={'md-12'}>\n                    <Button className=\"fas fa-backspace fa-2x\" style={cancelBtn} \n                    onClick={toggleState} />\n            </Col>\n            <form onSubmit={formSubmit} >\n                <div className=\"form-row\" style={{background:'white'}}>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Add New Condition</label>\n                        <div>\n                            <Input type=\"text\"\n                            style={input}\n                            value={text}\n                            onChange={target} \n                            />\n                            {renderSuggestions()}\n                        </div>\n                    </Col>\n                        <Col size={'md-3'}>\n                        <Button className=\"btn\" style={addBtn}\n                        type=\"submit\" > <i className=\"fa fa-plus fa-2x mr-2\"/> \n                            {' '} Add \n                        </Button>\n                    </Col>\n            </div>\n                <div className={\"form-row\"}>\n                   \n                {renderEditConditions(data)}\n\n                </div>\n            </form>\n        </div>\n        )\n    } else {\n        return (\n        <div className={'mt-5 condition-info'}>\n            <Col size={'md-12'} classes={'condition-edit'}>\n                <Button className=\"fas fa-user-edit fa-2x\" style={editBtn} \n                    onClick={toggleState} \n                />   \n            </Col>\n            <form>\n                <div className={\"form-row\"}>\n                   \n                {renderConditions(data)}\n\n                </div>\n            </form>\n        </div>\n        )\n    }\n\n    }\nconst fieldText = {\n    fontStyle: 'italic',\n    fontWeight: '1000',\n    fontSize: '100%',\n    padding: '10px',\n    paddingLeft: '0',\n    color: 'black'\n},\n\ntextarea = {\n    height: '5px',\n    resize: 'none',\n    overflow: 'hidden',\n    minHeight: '50px',\n    borderBottom: '1px solid rgba(0, 0, 0, .2)',\n    transition: 'all 0.30s ease-in-out'\n},\n\ninput = {\n    borderBottom: '1px solid rgba(0, 0, 0, .2)',\n    transition: 'all 0.30s ease-in-out'\n},\n\neditBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'white',\n    backgroundColor: 'white'\n},\ncancelBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'tomato',\n    backgroundColor: 'white'\n},\naddBtn = {\n    marginTop: '30px',\n    color: '#214c91',\n    focus: 'none',\n    size: '10em'\n},\nlittleEditBtn = {\n    border: 'none',\n    color: '#214c91'\n},\nremoveBtn = {\n    border: 'none',\n    color: 'red'\n}\n","import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { Input } from '../../components/Forms';\nimport { ContactCard } from '../../components/ContactCard';\nimport { HealthCard } from '../../components/HealthCard';\nimport { Conditions } from '../../components/Conditions';\nimport API from '../../utils/API';\n\nexport default function EHR({ usrId }) {\n\n    const [generalInfo, setGeneralInfo] = useState({\n        first_name: 'Anne',\n        last_name: 'Frank',\n        nickname: 'Mrs. Quack',\n        address_one: '555 Somewhere',\n        address_two: 'Apt 7',\n        city: 'Frankfurt',\n        state: 'Darmstadt',\n        zip: '12345',\n        country: 'Germany',\n        phone: '(264) 224-1234',\n        email: 'quacky123@gmail.com'\n    }),\n     [ healthInfo, setHealthInfo ] = useState({\n        // dob: '06/12/1929',\n        // bloodType: 'A-Negative',\n        // insurance: 'Keystone POS Flex',\n        // insNumber: 'QCG130515482-01',\n        // rxBin: '123456',\n        // rxPcn: '060503900',\n        // allergies: 'Peanuts, Shellfish, People',\n        // immunizations: 'HPV on 5/16/2018',\n        // notes: 'Breast Cancer!!  Patient likes talk a lot.',\n    }),\n        [ conditions, setConditions ] = useState([\n\n        ]),\n        [ editGenState, setGenState ]= useState(false),\n        [ editHealthState, setHealthState ]= useState(false),\n        [ editConditState, setConditState ]= useState(false),\n        [ descEditState, setDescEditState ]= useState(false),\n        [ conditSuggestions, setConditSuggestions ]= useState([]),\n        [ conditionSearch, setConditionSearch ]= useState('');\n    \n\n    const onGenInfoInputChange = e => {\n        const { name, value } = e.target;\n        setGeneralInfo({ ...generalInfo, [name]: value })\n        loadProfiles();\n    }, \n    \n    onConditInputChange = async e => {\n\n      const { value } = e.target,\n       items = await getConditionNames(value);\n      let suggestions = [];\n       \n      if (value.length > 0) {\n          const regex = new RegExp(`^${value}`, 'i');\n          suggestions = items.sort().filter( x => regex.test(x));\n        } \n        setConditSuggestions({ suggestions, text: value })\n     },\n\n     getConditionNames = async(search) => {\n        const { data } = await API.getConditionNames(search);\n        return  data[3].map( x => x[0] );\n    },\n\n    selectSuggestedCondit = value => {\n        setConditSuggestions({ suggestions: [], text: value })\n    },\n\n    renderConditSuggestions = () => {\n        const { suggestions } = conditSuggestions;\n        \n        if (!suggestions || suggestions.length === 0) {\n            return;\n        }\n        return (\n            <ul>\n                {suggestions.map( (suggestion, i) => <li onClick={() => selectSuggestedCondit(suggestion)} key={i}>{suggestion}</li>)}\n            </ul>\n        )\n    },\n\n    onHealthInfoInputChange = e => {\n        const { name, value } = e.target;\n        setHealthInfo({ ...healthInfo, [name]: value })\n    },\n\n    onConditionSearchChange = e => {\n        const { name, value } = e.target;\n        setConditionSearch({ ...conditionSearch, [name]: value })\n    },\n\n    updateDB = () => {\n        // e.preventDefault()\n        API.updateEHR()\n            .then((res) => {\n                console.log(res);\n                // if (data.status === 'success') {\n                //     console.log('Updated record!', 'green')\n                // } else {\n                //     console.log('Fail to update record.', 'red')\n                // }\n            })\n            .catch((err) => console.log(err))             \n    },\n\n        addCondition = async e => {\n            e.preventDefault();\n            setConditSuggestions([]);\n            e.target.reset();\n\n            const { text } = conditSuggestions;\n            if (!text) {\n                return;\n            }\n            const [search] = text.split('-'),\n                { data } = await API.fetchCondition(search),\n\n                description = data[0].shortdef ? data[0].shortdef.join('\\n') : '';\n\n            setConditions([...conditions, { name: text, description }])\n        }\n\n\n    useEffect(() => {   \n        loadProfiles()\n    }, []);\n\n    function loadProfiles() {\n        API.fetchPatients()\n          .then(res => \n            // setGeneralInfo(res.data)\n            console.log(res.data)\n          )\n          .catch(err => console.log(err));\n      };\n\n    return (\n        <Container>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <ContactCard\n                        toggleState={() => setGenState(!editGenState)}\n                        editState={editGenState}\n                        data={generalInfo}\n                        target={onGenInfoInputChange}\n                        formSubmit={updateDB}\n                    />\n                </Col>\n            </Row>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <HealthCard\n                        toggleState={() => setHealthState(!editHealthState)}\n                        editState={editHealthState}\n                        data={healthInfo}\n                        target={onHealthInfoInputChange}\n                        formSubmit={updateDB}\n                    />\n                </Col>\n            </Row>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <Conditions\n                        toggleState={() => setConditState(!editConditState)}\n                        editState={editConditState} \n                        toggleDescState={() => setDescEditState(!descEditState)}\n                        editDescState={descEditState} \n                        data={conditions}\n                        target={onConditInputChange}\n                        renderSuggestions={renderConditSuggestions}\n                        text={conditSuggestions.text}\n                        formSubmit={addCondition}\n                      />\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\n","import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from '../../components/Grid';\nimport \"./Medications.css\";\nimport API from \"../../utils/API\";\n\nfunction Medications() {\n    const [drugs, setDrugs] = useState([])\n\n    //load all drugs and store them \n    useEffect(() => {\n        loadDrugs()\n    }, [])\n\n    //loads all drugs and set them to drugs... needs to be fixed later so that there's one to load drugs and then one for the btn (modal?)\n    function loadDrugs() {\n        API.getDrugInfo()\n            .then(res =>\n                console.log(res.data)\n            )\n            .catch(err => console.log(err));\n    };\n\n    return ( \n        <Container>\n    <div class=\"table-responsive\">\n                <table class=\"table\">\n                    <tbody>\n                            <tr class=\"accordion-toggle collapsed\" id=\"accordion1\" data-toggle=\"collapse\" data-parent=\"#accordion1\" href=\"#collapseOne\">\n                                <td class=\"expand-button\"></td>\n                                <td>Amlodipine</td>\n\n                            </tr>\n                            <tr class=\"hide-table-padding\">\n                            <td></td>\n                            <td colspan=\"3\">\n                            <div id=\"collapseOne\" class=\"collapse in p-3\">\n                            <div class=\"row\">\n                                <div class=\"col-2\">Pill Description</div>\n                                <div class=\"col-6\">value 1</div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-2\">Dosage</div>\n                                <div class=\"col-6\">value 2</div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-2\">Frequency</div>\n                                <div class=\"col-6\">value 3</div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-2\">Reason</div>\n                                <div class=\"col-6\">value 4</div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-2\">Pharmacy</div>\n                                <div class=\"col-6\">value 3</div>\n                            </div>\n                            </div></td>\n                            </tr>\n                            <tr class=\"accordion-toggle collapsed\" id=\"accordion1\" data-toggle=\"collapse\" data-parent=\"#accordion1\" href=\"#collapseOne\">\n                                <td class=\"expand-button\"></td>\n                                <td>Metformin</td>\n\n                            </tr>\n                            <tr class=\"hide-table-padding\">\n                            <td></td>\n                            <td colspan=\"3\">\n                            <div id=\"collapseOne\" class=\"collapse in p-3\">\n                            <div class=\"row\">\n                                <div class=\"col-2\">Drug Code</div>\n                                <div class=\"col-6\">value 1</div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-2\">Dosage</div>\n                                <div class=\"col-6\">value 2</div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-2\">Frequency</div>\n                                <div class=\"col-6\">value 3</div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-2\">Reason</div>\n                                <div class=\"col-6\">value 4</div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-2\">Pharmacy</div>\n                                <div class=\"col-6\">value 3</div>\n                            </div>\n                            </div></td>\n                            </tr>\n                        </tbody>\n                </table>\n                </div>\n            </Container>\n    );\n}\n\nexport default Medications;","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nexport default function Profiles({name}) {\n\n\n    return (\n        <Link to='/ehr' style={{textDecoration: 'none'}} >\n            <div className=\"card box-shadow mt-5\">\n            <div className=\"card-body text-center\">\n                <h2 className=\"card-title\">{name}</h2>\n                <p className=\"card-text\"> Access First_Name's information here</p>\n            </div>\n            </div>\n        </Link>\n    )\n}\n","import { useHistory } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col } from '../../components/Grid';\nimport Profiles from '../../components/ProfileList'; \nimport API from \"../../utils/API\";\nimport Auth from '../../Auth'\n\nexport default function Patients(props) {\n    \n    let history = useHistory();\n\n    const [user, setUser] = useState();\n    const [patients, setPatients] = useState();\n\n\n    useEffect(() => {\n        getUser()\n    }, [])\n\n    useEffect(() => {\n        getPatients()\n    }, [user])\n\n\n    const getUser = async () => {\n        \n        const { user } = await API.getUser()\n        setUser(user)\n    }\n\n    const getPatients = async () => {\n        console.log(Auth.isAuthenticated())\n        const { data } = await API.fetchPatients()\n\n            /* code here depends on schema but something like... */\n            // const clients = data.patients;\n            // setPatients(clients)\n    }\n    \n    return (\n        <Container>\n            <Row>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <Profiles props={patients} name={\"User's Name\"} />\n                    <Profiles name={\"First Care Recipient\"} />\n                    <Profiles name={\"Second Care Recipient\"} />\n                </Col>\n           </Row>\n        \n            <br/>\n            <div>\n            <button  type=\"button\" class=\"btn\" >+ patients</button>\n\n            </div>\n        </Container>\n    )\n}\n","import React, {useState} from 'react'\nimport { Link, useLocation as location, useHistory } from 'react-router-dom'\nimport { Button } from '../Forms'\nimport { Collapse } from '../Grid'\nimport Auth from '../../Auth'\n\nexport default function navBar() {\n\n    let history = useHistory(),\n      [navLinks, showNavLinks] = useState(false)\n\n     const toggleNav = () => showNavLinks(navLinks = !navLinks),\n\n     logout = () => {\n        Auth.logout(() => {history.push(\"/\")})\n    },\n    \n     { pathname } = location(),\n\n     getButtons = () => {\n        if(Auth.isAuthenticated()) {\n            return (\n                <Button className={'btn btn-outline-primary m-2'} type='button'\n                    onClick={logout} >\n                    Log Out\n                </Button>\n        )\n        } else {\n            return(\n                <div>\n                    <Link to='/signin' >\n                                <Button className={'btn btn-outline-primary m-2'} type='button'>\n                                    Log In\n                                </Button>\n                            </Link>\n                    <Link to='/signup' >\n                        <Button className={'btn btn-outline-primary m-2'} type='button'>\n                            Sign Up\n                            </Button>\n                    </Link>\n                </div>\n                )\n            }\n     }\n  \n\n    return (\n        <nav className={'navbar navbar-expand-lg navbar-light bg-light'}>\n            <Link to='/' className={'navbar-brand'}><em>my</em>EHR</Link>\n            <button onClick={toggleNav} className={'navbar-toggler'} type=\"button\" data-toggle=\"collapse\" data-target=\"#target-collapse\" >\n            <span className=\"navbar-toggler-icon\"></span>\n            </button>\n                \n\n            <Collapse navState={navLinks} id={'target-collapse'}>\n              <ul className=\"navbar-nav mr-auto\">\n                <li className={pathname === \"/\" ? \"nav-item active\" : \"nav-item\"}>\n                    <Link to=\"/\" className={'nav-link'}>\n                        Home\n                    </Link>    \n                </li>\n                <li className={pathname === \"/profiles\" ? \"nav-item active\" : \"nav-item\"}\n                    style={Auth.isAuthenticated() ? {display: 'block'} : {display: 'none'}} >\n                    <Link to=\"/profiles\" className={'nav-link'}>\n                        profiles\n                    </Link>    \n                </li>\n                <li className={pathname === \"/ehr\" ? \"nav-item active\" : \"nav-item\"}\n                    style={Auth.isAuthenticated() ? {display: 'block'} : {display: 'none'}} >\n\n                    <Link to=\"/ehr\" className={'nav-link'}>\n                        health record\n                    </Link>    \n                </li>\n                <li className={pathname === \"/contacts\" ? \"nav-item active\" : \"nav-item\"}\n                    style={Auth.isAuthenticated() ? {display: 'block'} : {display: 'none'}} >\n\n                    <Link to=\"/contacts\" className={'nav-link'}>\n                        contacts\n                    </Link>    \n                </li>\n              </ul>\n              \n                { getButtons() }\n\n            </Collapse>\n        </nav>\n    )\n}\n\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport Auth from './Auth'\n\nexport default function ProtectedRoute({ component: Component, ...rest}) {\n    return (\n        <Route \n            {...rest}  \n                render={props => { \n                if(Auth.isAuthenticated()) {\n                    \n                    return <Component {...props} />\n                } else{ \n                    return <Redirect to={\n                        {\n                            pathname: '/',\n                            state: {\n                                from: props.location\n                            }\n                        }\n                    } />\n                }\n        }  }\n       />\n    )\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Landing from \"./pages/Landing\";\nimport SignIn from \"./pages/SignIn\";\nimport SignUp from \"./pages/SignUp\";\nimport EHR from \"./pages/EHR\";\nimport Medications from \"./pages/Medications\";\nimport Patients from \"./pages/Patients\";\nimport NavBar from './components/Navbar';\nimport ProtectedRoute from './ProtectedRoute';\nimport './assets/css/bootstrap.min.css'\nimport \"./App.css\";\n\n\nfunction App() {\n\n  return (\n    <Router>\n      <div>\n      <Route path=\"/\"><NavBar /> </Route>\n        <Route exact path=\"/\"> <Landing /> </Route>\n        <Route exact path=\"/signin\"> <SignIn /> </Route>\n        <Route exact path=\"/signup\"> <SignUp /> </Route>\n        <ProtectedRoute exact path=\"/profiles\" component={Patients} />\n        <ProtectedRoute exact path=\"/ehr\" component={EHR} />\n        <Route exact path=\"/medications\"> <Medications /> </Route>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nrequire('dotenv').config();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}